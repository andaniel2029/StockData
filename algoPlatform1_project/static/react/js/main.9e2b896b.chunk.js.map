{"version":3,"sources":["logo.svg","components/StockDataDateForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StockDataDateForm","useState","Date","startDate","setStartDate","endDate","setEndDate","ticker","setTicker","financials","setFinancials","earnings","setEarnings","activeItemDateMenu","setActiveItemDateMenu","activeFinancialsMenuItem","setActiveFinancialsMenuItem","activeEarningsMenuItem","setActiveEarningsMenuItem","stockData","setStockData","candleChartNode","useRef","earningsChartNode","showVolumeNode","getAndSetStockData","stockTicker","theStartDate","theEndDate","fetch","getFullYear","getMonth","getDate","then","response","json","data","getAndSetFinancials","getAndSetEarnings","handleDateClick","minusDays","name","currentDate","dateOffset","setTime","getTime","useEffect","length","console","log","svg","select","current","selectAll","remove","margin","top","right","bottom","left","parseDate","d3","x","scaleBand","domain","range","date","filter","d","getUTCDay","padding","y","scaleLinear","low","high","rangeRound","attr","append","call","g","tickValues","every","tickFormat","ticks","clone","join","bandwidth","open","close","node","createCandleStickChart","volume","createVolumeBarChart","innerWidth","innerHeight","yScale","Math","min","consensusEPS","actualEPS","max","xScale","map","fiscalPeriod","enter","createEarningsChart","Menu","Form","Input","placeholder","value","onChange","e","target","isClearable","Button","animated","primary","onClick","Content","visible","hidden","Icon","Item","active","position","selected","maxDate","handleStartDateClick","placeholderText","showYearDropdown","scrollableMonthYearDropdown","handleEndDateClick","Fragment","ref","Accordion","Title","Object","keys","key","index","Segment","Group","horizontal","grossProfit","operatingRevenue","totalRevenue","totalAssets","totalLiabilities","totalCash","netIncome","researchAndDevelopment","cashFlow","totalDebt","shortTermDebt","longTermDebt","App","className","Container","style","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.9e2b896b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/logo.5d5d9eef.svg\";","import React, {useState, useEffect, useRef} from 'react';\r\nimport '../App.css'\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { List, Header, Form, Input, Button, Container, Icon, Menu, Segment, Accordion } from \"semantic-ui-react\"\r\nimport { scaleLinear, scaleBand, scalePoint } from 'd3-scale'\r\nimport { max } from 'd3-array'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\nimport { StockData } from './StockData';\r\n\r\nexport const StockDataDateForm = () => {\r\n\r\n\tconst [startDate, setStartDate] = useState(new Date(2020,7,1,0,0,0,0));\r\n\tconst [endDate, setEndDate] = useState(new Date());\r\n\tconst [ticker, setTicker] = useState('AAPL');\r\n\tconst [financials, setFinancials] = useState([])\r\n\tconst [earnings, setEarnings] = useState([])\r\n\tconst [activeItemDateMenu, setActiveItemDateMenu] = useState('');\r\n\tconst [activeFinancialsMenuItem, setActiveFinancialsMenuItem] = useState()\r\n\tconst [activeEarningsMenuItem, setActiveEarningsMenuItem] = useState()\r\n\tconst [stockData, setStockData] = useState([]);\r\n\r\n\tconst [fakeStockData, setFakeStockDate] = useState([5,10,1,3])\r\n\tconst [fakeSize, setFakeSize] = useState([500,500])\r\n\tconst chartNode = useRef(null);\r\n\tconst candleChartNode = useRef(null);\r\n\tconst earningsChartNode = useRef(null);\r\n\tconst showVolumeNode = useRef(null);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (stockData.length > 0) {\r\n\t\t\t//createLineChart(stockData);\r\n\t\t\tconsole.log(stockData)\r\n\t\t\tcreateCandleStickChart(stockData);\r\n\t\t\tcreateVolumeBarChart(stockData);\r\n\t\t\t\r\n\t\t}\r\n\t\tif (earnings.length > 0) {\r\n\t\t\tconsole.log(earnings)\r\n\t\t\tcreateEarningsChart(earnings)\r\n\t\t}\r\n\t},[stockData])\r\n\r\n\tfunction getAndSetStockData(stockTicker,theStartDate,theEndDate) {\r\n\t\tfetch(\"/get_stock_data/\"+stockTicker+\"/\"+theStartDate.getFullYear()+\"/\"+(theStartDate.getMonth()+1)+\"/\"+theStartDate.getDate()+\"/\"+theEndDate.getFullYear()+\"/\"+(theEndDate.getMonth()+1)+\"/\"+theEndDate.getDate()).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tsetStockData(data);\r\n\t\t\t})\r\n\t\t)\r\n\t}\r\n\r\n\tfunction getAndSetFinancials(stockTicker) {\r\n\t\tfetch(\"/get_financial_data/\"+stockTicker).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tsetFinancials(data)\r\n\t\t\t}))\r\n\t}\r\n\r\n\tfunction getAndSetEarnings(stockTicker) {\r\n\t\tfetch(\"/get_earnings_data/\"+stockTicker).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tsetEarnings(data)\r\n\t\t\t}))\r\n\t}\r\n\r\n\tfunction handleStartDateClick(date) {\r\n\t\tif (date !== startDate) {\r\n\t\t\tsetStartDate(date)\r\n\t\t\t\r\n\t\t}\r\n\t\tgetAndSetStockData(ticker,date,endDate)\r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\t}\r\n\t\r\n\tfunction handleDateClick(minusDays, name) {\r\n\t\tsetActiveItemDateMenu(name)\r\n\t\t\r\n\t\tvar currentDate = new Date();\r\n\t\tvar dateOffset = (24*60*60*1000) * minusDays; //5 days\r\n\t\tvar newDate = currentDate.setTime(currentDate.getTime() - dateOffset);\r\n\t\tsetStartDate(currentDate);\r\n\t\tgetAndSetStockData(ticker,currentDate,endDate) \r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\t}\r\n\r\n\tfunction handleEndDateClick(date) {\r\n\t\tsetEndDate(date)\r\n\t\tgetAndSetStockData(ticker,startDate,date) \r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\r\n\t}\r\n\r\n\tfunction handleTickerFormSubmit() {\r\n\t\tgetAndSetStockData(ticker,startDate,endDate) \r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\t}\r\n\r\n\t// function handleFinancialsMenuItemClick(e, titleProps) {\r\n\t// \tconst { index } = titleProps\r\n\t// \tconst { activeIndex } = activeFinancialsMenuItem\r\n\t// \tconst newIndex = activeIndex === index ? -1 : index\r\n\t// \tsetActiveFinancialsMenuItem(newIndex)\r\n\t\t\r\n\t//   }\r\n\r\n\t// function createLineChart(data) {\r\n\t// \t// https://observablehq.com/@d3/line-chart\r\n\t// \tconst svg = select(candleChartNode.current);\r\n\t// \tsvg.selectAll(\"g\").remove()\r\n\t// \tconst height = 350;\r\n\t// \tconst width = 700;\r\n\t// \tconst margin = ({top: 20, right: 30, bottom: 30, left: 40})\r\n\r\n\t// \tconst parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n\t// \tconst yAxis = g => g\r\n\t// \t\t.attr(\"transform\", `translate(${margin.left},0)`)\r\n\t// \t\t.call(d3.axisLeft(y))\r\n\t// \t\t.call(g => g.select(\".domain\").remove())\r\n\t// \t\t.call(g => g.select(\".tick:last-of-type text\").clone()\r\n\t// \t\t\t.attr(\"x\", 3)\r\n\t// \t\t\t.attr(\"text-anchor\", \"start\")\r\n\t// \t\t\t.attr(\"font-weight\", \"bold\"))\r\n\t// \t\t\t//.text(data.y))\r\n\t\t\r\n\t// \tconst xAxis = g => g\r\n\t// \t\t.attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n\t// \t\t.call(d3.axisBottom(x).ticks(width / 80).tickSizeOuter(0))\r\n\r\n\t// \tconst y = d3.scaleLinear()\r\n\t// \t\t.domain([0, d3.max(data, d => d.close)]).nice()\r\n\t// \t\t.range([height - margin.bottom, margin.top])\r\n\r\n\t// \tconst x = d3.scaleUtc()\r\n\t// \t\t.domain(d3.extent(data, d => parseDate(d.date)))\r\n\t// \t\t.range([margin.left, width - margin.right])\r\n\t\t\r\n\t// \tconst line = d3.line()\r\n\t// \t\t.defined(d => !isNaN(d.close))\r\n\t// \t\t.x(d => x(parseDate(d.date)))\r\n\t// \t\t.y(d => y(d.close))\r\n\r\n\t// \tsvg.append(\"g\")\r\n\t// \t\t.call(xAxis);\r\n\t  \r\n\t// \tsvg.append(\"g\")\r\n\t// \t\t.call(yAxis);\r\n\t  \r\n\t// \tsvg.append(\"path\")\r\n\t// \t\t.datum(data)\r\n\t// \t\t.attr(\"fill\", \"none\")\r\n\t// \t\t.attr(\"stroke\", \"steelblue\")\r\n\t// \t\t.attr(\"stroke-width\", 1.5)\r\n\t// \t\t.attr(\"stroke-linejoin\", \"round\")\r\n\t// \t\t.attr(\"stroke-linecap\", \"round\")\r\n\t// \t\t.attr(\"d\", line);\r\n\t  \r\n\t// \treturn svg.node();\r\n\t// }\r\n\r\n\r\n\tfunction createCandleStickChart(data) {\r\n\t\t// https://observablehq.com/d/8974f775c6a0ae5d\r\n\r\n\t\tconst svg = select(candleChartNode.current);\r\n\t\tsvg.selectAll(\"g\").remove()\r\n\t\tconst height = 350;\r\n\t\tconst width = 700;\r\n\t\t//const margin = ({top: 20, right: 30, bottom: 30, left: 80})\r\n\t\tconst margin = ({top: 50, right: 30, bottom: 50, left: 40})\r\n\t\tconst parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n\t\tconst x = scaleBand()\r\n    \t\t.domain(d3.utcDay\r\n        \t\t.range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n        \t\t.filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n    \t\t.range([margin.left, width - margin.right])\r\n    \t\t.padding(0.2)\r\n\r\n\t\t\r\n\t\tconst y = scaleLinear()\r\n\t\t\t.domain([d3.min(data, d => d.low), d3.max(data, d => d.high)])\r\n\t\t\t.rangeRound([height - margin.bottom, margin.top])\r\n\r\n\t\tconst xAxis = g => g\r\n\t\t\t.attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n\t\t\t.call(d3.axisBottom(x)\r\n\t\t\t\t.tickValues(d3.utcMonday\r\n\t\t\t\t\t.every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n\t\t\t\t\t.range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n\t\t\t\t.tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n\t\t\t.call(g => g.select(\".domain\").remove())\r\n\t\t\r\n\r\n\t\tconst yAxis = g => g\r\n\t\t\t.attr(\"transform\", `translate(${margin.left},0)`)\r\n\t\t\t.call(d3.axisLeft(y)\r\n\t\t\t\t.tickFormat(d3.format(\"$~f\"))\r\n\t\t\t\t.tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n\t\t\t.call(g => g.selectAll(\".tick line\").clone()\r\n\t\t\t\t.attr(\"stroke-opacity\", 0)\r\n\t\t\t\t.attr(\"x2\", width - margin.left - margin.right))\r\n\t\t\t.call(g => g.select(\".domain\").remove())\r\n\r\n\t\tsvg.attr(\"viewBox\", [0, 0, width, height])\r\n  \r\n\t\tsvg.append(\"g\")\r\n\t\t\t.call(xAxis);\r\n\t\t\t\r\n\t\tsvg.append(\"g\")\r\n\t\t\t.call(yAxis);\r\n\t\r\n\r\n\t\tconst g = svg.append(\"g\")\r\n\t\t\t.attr(\"stroke-linecap\", \"round\")\r\n\t\t\t.attr(\"stroke\", \"black\")\r\n\t\t\t.selectAll(\"g\")\r\n\t\t\t.data(data)\r\n\t\t\t.join(\"g\")\r\n\t\t\t.attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\t\r\n\t\tg.append(\"line\")\r\n\t\t\t.attr(\"y1\", d => y(d.low))\r\n\t\t\t.attr(\"y2\", d => y(d.high));\r\n\t\r\n\t\tg.append(\"line\")\r\n\t\t\t.attr(\"y1\", d => y(d.open))\r\n\t\t\t.attr(\"y2\", d => y(d.close))\r\n\t\t\t.attr(\"stroke-width\", x.bandwidth())\r\n\t\t\t.attr(\"stroke\", d => d.open > d.close ? d3.schemeSet1[0]\r\n\t\t\t\t: d.close > d.open ? d3.schemeSet1[2]\r\n\t\t\t\t: d3.schemeSet1[8]);\r\n\t\treturn svg.node();\r\n\t }\r\n\r\n\tfunction createVolumeBarChart(data) {\r\n\t\tconst svg = select(showVolumeNode.current);\r\n\t\tsvg.selectAll(\"g\").remove()\r\n\t\tconst margin = ({top: 30, right: 30, bottom: 50, left: 40})\r\n\t\tconst parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n\t\tconst height = 150;\r\n\t\tconst width = 700;\r\n\t\tsvg.attr(\"viewBox\", [0, 0, width, height])\r\n\t\tconst innerWidth = width - margin.left - margin.right;\r\n\t\tconst innerHeight = height - margin.top - margin.bottom;\r\n\r\n\t\tconst x = scaleBand()\r\n    \t\t.domain(d3.utcDay\r\n        \t\t.range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n        \t\t.filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n    \t\t.range([margin.left, width - margin.right])\r\n    \t\t.padding(0.2)\r\n\r\n\t\t\r\n\t\tconst y = scaleLinear()\r\n\t\t\t.domain([d3.min(data, d => d.volume), d3.max(data, d => d.volume)])\r\n\t\t\t.rangeRound([height - margin.bottom,margin.top,])\r\n\r\n\t\tconst xAxis = g => g\r\n\t\t\t.attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n\t\t\t.call(d3.axisBottom(x)\r\n\t\t\t\t.tickValues(d3.utcMonday\r\n\t\t\t\t\t.every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n\t\t\t\t\t.range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n\t\t\t\t.tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n\t\t\t.call(g => g.select(\".domain\").remove())\r\n\t\t\r\n\r\n\t\tconst yAxis = g => g\r\n\t\t\t.attr(\"transform\", `translate(${margin.left},0)`)\r\n\t\t\t.call(d3.axisLeft(y))\r\n\t\t\t\t//.tickFormat(d3.format(\"\")))\r\n\t\t\t\t//.tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n\t\t\t.call(g => g.selectAll(\".tick line\").clone()\r\n\t\t\t\t.attr(\"stroke-opacity\", 0)\r\n\t\t\t\t.attr(\"x2\", width - margin.left - margin.right))\r\n\t\t\t.call(g => g.select(\".domain\").remove())\r\n  \r\n\t\tsvg.append(\"g\")\r\n\t\t\t.call(xAxis);\r\n\t\t\t\r\n\t\tsvg.append(\"g\")\r\n\t\t\t.call(yAxis);\r\n\r\n\t\tconst g = svg.append(\"g\")\r\n\t\t\t// .attr(\"stroke\", \"black\")\r\n\t\t\t.selectAll(\"g\")\r\n\t\t\t.data(data)\r\n\t\t\t.join(\"g\")\r\n\t\t\t.attr(\"transform\", data => `translate(${x(parseDate(data.date))},0)`);\r\n\r\n\t\tg.append(\"rect\")\r\n\t\t\t.attr('width', d=>x.bandwidth())\r\n\t\t\t.attr('height',d=>y(d.volume))\r\n\t\t\t.attr(\"fill\", d => d.open > d.close ? d3.schemeSet1[0]\r\n\t\t\t\t: d.close > d.open ? d3.schemeSet1[2]\r\n\t\t\t\t: d3.schemeSet1[8]);\r\n\t\t// //\t.attr('y',d=> (y(d.volume) - `${height - margin.bottom}`));\r\n\t\t// g.append(\"rect\")\r\n\t\t// \t.attr('y', d=>y(d.volume))\r\n\t\t// \t.attr('width', d=>x.bandwidth())\r\n\t\t// \t.attr('height',d=>x(parseDate(d.date)));\r\n\r\n\t\treturn svg.node();\r\n\t}\r\n\r\n\r\n\tfunction createEarningsChart(data) {\r\n\t\t// https://www.youtube.com/watch?v=UDDGcgxficY \r\n\t\t// stopped video at 3:41\r\n\t\tconst svg = select(earningsChartNode.current);\r\n\t\tsvg.selectAll(\"g\").remove()\r\n\t\t// const height = 350;\r\n\t\t// const width = 700;\r\n\t\tconst margin = ({top: 30, right: 30, bottom: 50, left: 40})\r\n\t\tconst parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n\r\n\t\t// const xValue = d => d.fiscalPeriod;\r\n\t\t// const yValue = d => d.actualEPS;\r\n\t\tconst xLabel = 'Fiscal Period';\r\n\t\tconst yLabel = 'Earnings Per Share'\r\n\t\tconst width = 700;\r\n\t\tconst height = 350;\r\n\t\tsvg.attr(\"viewBox\", [0, 0, width, height])\r\n\t\tconst innerWidth = width - margin.left - margin.right;\r\n\t\tconst innerHeight = height - margin.top - margin.bottom;\r\n\r\n\t\tconst yScale = scaleLinear()\r\n\t\t\t.domain([d3.min(data,d => Math.min(d.consensusEPS,d.actualEPS)),d3.max(data,d => Math.max(d.consensusEPS,d.actualEPS))])\r\n\t\t\t.range([innerHeight,0])\r\n\r\n\t\tconst yAxis = d3.axisLeft(yScale)\r\n\r\n\t\tconst xScale = scaleBand()\r\n\t\t\t.domain(data.map(d => d.fiscalPeriod))\r\n\t\t\t.range([0,innerWidth])\r\n\t\t\t\r\n\t\t\r\n\t\tconst xAxis = d3.axisBottom(xScale);\r\n\r\n\t\tconst g = svg.append('g')\r\n\t\t\t.attr('transform',`translate(${margin.left},${margin.top})`);\r\n\r\n\t\tg.append('g').call(d3.axisLeft(yScale))\r\n\t\t\t.select(\".domain\").remove();\r\n\t\tg.append('g').call(d3.axisBottom(xScale))\r\n\t\t\t.attr('transform',`translate(0,${innerHeight})`)\r\n\t\t\t.select(\".domain\").remove();\r\n\r\n\t\tg.selectAll('circle')\r\n\t\t\t.data(data)\r\n\t\t\t.enter()\r\n\t\t\t.append('circle')\r\n\t\t\t\t.attr('cx', d => ((xScale.bandwidth()/2)+xScale(d.fiscalPeriod)))\r\n\t\t\t\t.attr('cy', d => yScale(d.consensusEPS))\r\n\t\t\t\t.attr('r',30)\r\n\t\t\t\t.attr('fill','green')\r\n\t\t\t\t.attr('width', xScale.bandwidth())\r\n\t\t\t\r\n\t\t// g.append('circle')\r\n\t\t// \t\t.attr('cx', d => ((xScale.bandwidth()/2)+xScale(d.fiscalPeriod)))\r\n\t\t// \t\t.attr('cy', d => yScale(d.actualEPS))\r\n\t\t// \t\t.attr('r',30)\r\n\t\t// \t\t.attr('fill','#50eb79')\r\n\t\t// \t\t.attr('width', xScale.bandwidth());\r\n\t\t\r\n\t\t\t\r\n\t\t// const g = svg.append('g')\r\n\t\t// \t.attr('transform',`translate(${margin.left},${margin.top})`);\r\n\t\t// const xAxisG = g.append('g')\r\n\t\t// \t.attr('transform',`translate(0,${innerHeight})`);\r\n\t\t// const yAxisG = g.append('g');\r\n\r\n\t\t// xAxisG.append('text')\r\n\t\t// \t.attr('class','axis-label')\r\n\t\t// \t.attr('x', innerWidth/2)\r\n\t\t// \t.attr('y',90)\r\n\t\t// \t.text(xLabel);\r\n\t\t\r\n\t\t// yAxisG.append('text')\r\n\t\t// \t.attr('class','axis-label')\r\n\t\t// \t.attr('x', innerHeight / 2)\r\n\t\t// \t.attr('y',-100)\r\n\t\t// \t.attr('transform',`rotate(-90)`)\r\n\t\t// \t.style('text-anchor','middle')\r\n\t\t// \t.text(yLabel);\r\n\t\t\r\n\t\t// const xScale = scalePoint();\r\n\t\t// const yScale = scaleLinear();\r\n\r\n\t\t// const xAxis = d3.axisBottom()\r\n\t\t// \t.scale(xScale)\r\n\t\t// \t.tickPadding(15)\r\n\t\t// \t.tickSize(-innerHeight)\r\n\t\t// \t.domain(data.map(xValue))\r\n\t\t// \t.range([0, innerWidth]);\r\n\r\n\t\t// const yTicks = 4;\r\n\t\t// const yAxis = d3.axisLeft()\r\n\t\t// \t.scale(yScale)\r\n\t\t// \t.ticks(yTicks)\r\n\t\t// \t.tickPadding(15)\r\n\t\t// \t.tickFormat(d3.format('.0s'))\r\n\t\t// \t.tickSize(-innerWidth)\r\n\t\t// \t.domain(d3.extent(data,yValue))\r\n\t\t// \t.range([innerHeight,0])\r\n\t\t// \t.nice(yTicks)\r\n\r\n\t\t// // const g = svg.append(\"g\")\r\n\t\t// // \t.data(data)\r\n\t\t// // \t.enter()\r\n\t\t\r\n\t\t\r\n\t\t// \t// xScale\r\n\t\t// \t// \t.domain(data.map(xValue))\r\n\t\t// \t// \t.range([0, innerWidth]);\r\n\t\t// \t// yScale\r\n\t\t// \t// \t.domain(d3.extent(data,yValue))\r\n\t\t// \t// \t.range([innerHeight,0])\r\n\t\t// \t// \t.nice(yTicks)\r\n\r\n\t\t// g.selectAll('circle')\r\n\t\t// \t.data(data)\r\n\t\t// \t.enter()\r\n\t\t// \t.append('circle')\r\n\t\t// \t.attr('cx', d => xScale(xValue(d)))\r\n\t\t// \t.attr('cy', d => yScale(yValue(d)))\r\n\t\t// \t.attr('fill','black')\r\n\t\t// \t.attr('fill-opacity', 0.6)\r\n\t\t// \t.attr('r',8)\r\n\t\t\t\r\n\t\t// xAxisG.call(xAxis);\r\n\t\t// yAxisG.call(yAxis);\r\n\t\t\r\n\t\treturn svg.node();\r\n\r\n\t}\r\n\r\n\t//  function createEarningsChart(data) {\r\n\t// \t// https://observablehq.com/d/8974f775c6a0ae5d\r\n\r\n\t// \tconst svg = select(earningsChartNode.current);\r\n\t// \tsvg.selectAll(\"g\").remove()\r\n\t// \tconst height = 350;\r\n\t// \tconst width = 700;\r\n\t// \tconst margin = ({top: 20, right: 30, bottom: 50, left: 40})\r\n\t// \tconst parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n\t// \t// const x = scaleBand()\r\n    // \t// \t.domain(d3.utcDay\r\n    //     // \t\t.range(parseDate(data[0].EPSReportDate), +parseDate(data[data.length - 1].EPSReportDate) + 1)\r\n    //     // \t\t.filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n    // \t// \t.range([margin.left, width - margin.right])\r\n\t// \t// \t.padding(0.2)\r\n\t// \tconsole.log(data)\r\n\t// \tconsole.log(earnings)\r\n\t// \tconst temp1 = {earnings}[0].fiscalPeriod\r\n\t// \tconst temp2 = {earnings}[1].fiscalPeriod\r\n\t// \tconst temp3 = {earnings}[2].fiscalPeriod\r\n\t// \tconst temp4 = {earnings}[3].fiscalPeriod\r\n\t// \tconst x = scalePoint()\r\n\t// \t\t.domain([temp1,temp2,temp3,temp4])\r\n\t// \t\t.range([(margin.right+margin.right+margin.right),(width-margin.left-margin.left)])\r\n\r\n\t\t\r\n\r\n\t// \tconst minEPS = d3.min(data, d => d.actualEPS)\r\n\t// \tconst minConsensus = d3.min(data, d => d.consensusEPS)\r\n\t// \tconst maxEPS = d3.max(data, d => d.actualEPS)\r\n\t// \tconst maxConsensus = d3.max(data, d => d.consensusEPS)\r\n\t// \tconst y = scaleLinear()\r\n\t// \t\t.domain([d3.min([minEPS,minConsensus]), d3.max([maxEPS,maxConsensus])])\r\n\t// \t\t.rangeRound([height-margin.bottom, margin.top])\r\n\r\n\t\t\r\n\t// \tconst xAxis = g => g\r\n\t// \t\t.attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n\t// \t\t.call(d3.axisBottom(x))\r\n\t// \t\t.select(\".domain\").remove()\r\n\t// \t\t.call(g => g.select(\".domain\").remove())\r\n\r\n\t// \tconst yAxis = g => g\r\n\t// \t\t.attr(\"transform\", `translate(${margin.left},0)`)\r\n\t// \t\t.call(d3.axisLeft(y)\r\n\t// \t\t\t.tickFormat(d3.format(\"$~f\"))\r\n\t// \t\t\t.tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n\t// \t\t.call(g => g.selectAll(\".tick line\").clone()\r\n\t// \t\t\t.attr(\"stroke-opacity\", 0)\r\n\t// \t\t\t.attr(\"x2\", width - margin.left - margin.right))\r\n\t// \t\t.call(g => g.select(\".domain\").remove())\r\n\r\n\t// \tsvg.attr(\"viewBox\", [0, 0, width, height])\r\n  \r\n\t// \tsvg.append(\"g\")\r\n\t// \t\t.call(yAxis);\r\n\r\n\t// \tsvg.append(\"g\")\r\n\t// \t\t.attr(\"transform\", `translate(0,${height - (margin.bottom-20)})`)\r\n\t// \t\t.call(d3.axisBottom(x))\r\n\t// \t\t.select(\".domain\").remove()\r\n\t\t\r\n\t// \t// svg.append(\"g\")\r\n\t// \t// \t.attr(\"transform\",`translate(0,${height})`)\r\n\t// \t// \t.call(d3.axisBottom(x))\r\n\t// \t// \t.select(\".domain\").remove()\r\n\t\t\t\r\n\t// \t// svg.selectAll(\".circlesAnalyst\")\r\n\t// \t// \t.data(data)\r\n\t// \t// \t.enter()\r\n\t// \t// \t.append(\"circle\")\r\n\t// \t// \t\t.attr('class','circlesAnalyst')\r\n\t// \t// \t\t.attr(\"cx\",d => x(d.fiscalPeriod))\r\n\t// \t// \t\t.attr(\"cy\",d => y(d.consensusEPS))\r\n\t// \t// \t\t.attr(\"r\",15)\r\n\t// \t// \t\t.style(\"fill\", \"#94FF8C\");\r\n\r\n\t// \t// svg.selectAll(\".circles\")\r\n\t// \t// \t.data(data)\r\n\t// \t// \t.enter()\r\n\t// \t// \t.append(\"circle\")\r\n\t// \t// \t\t.attr('class','circles')\r\n\t// \t// \t\t.attr(\"cx\",d => x(d.fiscalPeriod))\r\n\t// \t// \t\t.attr(\"cy\",d => y(d.consensusEPS))\r\n\t// \t// \t\t.attr(\"r\",15)\r\n\t// \t// \t\t.style(\"fill\", \"#94FF8C\");\r\n\t\t\t\r\n\t// \t// svg.selectAll(\".circlesAnalyst\")\r\n\t// \t// \t.data(data)\r\n\t// \t// \t.enter()\r\n\t// \t// \t.append(\"circle\")\r\n\t// \t// \t\t.attr('class','circlesAnalyst')\r\n\t// \t// \t\t.attr(\"cx\",d => x(d.fiscalPeriod))\r\n\t// \t// \t\t.attr(\"cy\",d => y(d.actualEPS))\r\n\t// \t// \t\t.attr(\"r\",15)\r\n\t// \t// \t\t.style(\"fill\", \"#11E402\");\r\n\r\n\t\t\r\n\t// \t// const xAxis = d3.axisBottom(x)\r\n\t// \t// let xAxisG =svg.selectAll('g').data(null)\r\n\t// \t// xAxisG.call(xAxis)\r\n\t// \t// svg.append(\"circle\")\r\n\t// \t// \t.attr(\"cx\",x(data[0].fiscalPeriod))\r\n\t// \t// \t.attr(\"cy\",y(data[0].actualEPS))\r\n\t// \t// \t.attr(\"r\",8)\r\n\r\n\t// \t// svg.append(\"cir\")\r\n\t// \t// const g = svg.append(\"g\")\r\n\t// \t// \t.selectAll(\"g\")\r\n\t// \t// \t.data(data)\r\n\t// \t// \t.join(\"g\")\r\n\t// \t// \t//.attr(\"transform\", data => `translate(${x(parseDate(data.EPSReportDate))},0)`);\r\n\t\r\n\r\n\t// \t// g.append(\"circle\")\t\t\t\r\n\t// \t// \t.attr(\"cx\", d => x(d.EPSReportDate))\r\n\t// \t// \t.attr(\"cy\", d => y(d.actualEPS))\r\n\r\n\t// \treturn svg.node();\r\n\t//  }\r\n\t// if (stockData.length === 0 ) {\r\n\t// \tsetActiveItemDateMenu('1m')\r\n\t\t\r\n\t// \tvar currentDate = new Date();\r\n\t// \tvar dateOffset = (24*60*60*1000) * 30; \r\n\t// \tvar newDate = currentDate.setTime(currentDate.getTime() - dateOffset);\r\n\t// \tvar theEndDate = new Date();\r\n\t// \tfetch(\"/get_stock_data/AAPL/\"+currentDate.getFullYear()+\"/\"+(currentDate.getMonth()+1)+\"/\"+currentDate.getDate()+\"/\"+theEndDate.getFullYear()+\"/\"+(theEndDate.getMonth()+1)+\"/\"+theEndDate.getDate()).then(response => \r\n\t// \t\tresponse.json().then(data => {\r\n\t// \t\t\tconsole.log(data)\r\n\t// \t\t\tcreateCandleStickChart(data)\r\n\t// \t\t\tsetStockData(data);\r\n\t// \t\t})\r\n\t// \t)\r\n\r\n\t\t\r\n\t// \tcreateCandleStickChart(stockData)\r\n\t// }\r\n\t// console.log(earnings)\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Menu>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<Input \r\n\t\t\t\t\t\tplaceholder=\"Add ticker ex) APPL\" \r\n\t\t\t\t\t\tvalue={ticker}\r\n\t\t\t\t\t\tname='ticker'\r\n\t\t\t\t\t\tonChange={(e) => setTicker(e.target.value)}\r\n\t\t\t\t\t\tisClearable\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button animated primary onClick={handleTickerFormSubmit}>\r\n\t\t\t\t\t\t<Button.Content visible>Add</Button.Content>\r\n\t\t\t\t\t\t<Button.Content hidden>\r\n\t\t\t\t\t\t\t<Icon name='arrow right' />\r\n\t\t\t\t\t\t</Button.Content>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\tname='5d'\r\n\t\t\t\tactive={activeItemDateMenu === '5d'}\r\n\t\t\t\tonClick={() => handleDateClick(8, '5d')}\r\n\t\t\t\t>\r\n\t\t\t\t5 d\r\n\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\tname='1m'\r\n\t\t\t\tactive={activeItemDateMenu === '1m'}\r\n\t\t\t\tonClick={() => handleDateClick(30, '1m')}\r\n\t\t\t\t>\r\n\t\t\t\t1 m\r\n\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\tname='6m'\r\n\t\t\t\tactive={activeItemDateMenu === '6m'}\r\n\t\t\t\tonClick={() => handleDateClick(180, '6m')}\r\n\t\t\t\t>\r\n\t\t\t\t6 m\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\tname='1y'\r\n\t\t\t\tactive={activeItemDateMenu === '1y'}\r\n\t\t\t\tonClick={() => handleDateClick(365, '1y')}\r\n\t\t\t\t>\r\n\t\t\t\t1 y\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\tname='StartDate'\r\n\t\t\t\tposition='right'\r\n\t\t\t\t>\r\n\t\t\t\tCustom:\r\n\t\t\t\t<DatePicker \r\n\t\t\t\tselected={startDate} \r\n\t\t\t\tmaxDate={new Date()} \r\n\t\t\t\tonChange={date => handleStartDateClick(date)}\r\n\t\t\t\tplaceholderText='MM/DD/YYYY'\r\n\t\t\t\tisClearable\r\n\t\t\t\tshowYearDropdown\r\n\t\t\t\tscrollableMonthYearDropdown />\r\n\t\t\t\tTo: \r\n\t\t\t\t<DatePicker \r\n\t\t\t\tselected={endDate} \r\n\t\t\t\tmaxDate={new Date()}\r\n\t\t\t\tonChange={date => handleEndDateClick(date)}\r\n\t\t\t\tplaceholderText='MM/DD/YYYY'\r\n\t\t\t\tisClearable\r\n\t\t\t\tshowYearDropdown\r\n\t\t\t\tscrollableMonthYearDropdown />\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t</Menu>\r\n\t\t\t{/* <List>\r\n\t\t\t\t{Object.keys(stockData).map(function(key,index) {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<List.Item key={stockData[key].close}>\r\n\t\t\t\t\t\t\t<Header>Date: {stockData[key].date}</Header>\r\n\t\t\t\t\t\t\t<p>Open: {stockData[key].open}</p>\r\n\t\t\t\t\t\t\t<p>High: {stockData[key].high}</p>\r\n\t\t\t\t\t\t\t<p>Low: {stockData[key].low}</p>\r\n\t\t\t\t\t\t\t<p>Close: {stockData[key].close}</p>\r\n\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n        \t</List> */}\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<svg ref={candleChartNode}></svg>\r\n\t\t\t</React.Fragment>\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<svg ref={showVolumeNode}></svg>\r\n\t\t\t</React.Fragment>\r\n\t\t\t<Accordion>\r\n\r\n\t\t\t\t<Accordion.Title\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetActiveEarningsMenuItem(!activeEarningsMenuItem)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<h3>Earnings {activeEarningsMenuItem ? \"-\" : \"+\"}</h3>\r\n\t\t\t\t</Accordion.Title>\r\n\t\t\t\t<Accordion.Content active={activeEarningsMenuItem}>\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<svg ref={earningsChartNode}></svg>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t</Accordion.Content>\r\n\r\n\r\n\t\t\t\t<Accordion.Title\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetActiveFinancialsMenuItem(!activeFinancialsMenuItem)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<h3>Financials {activeFinancialsMenuItem ? \"-\" : \"+\"}</h3>\r\n\t\t\t\t</Accordion.Title>\r\n\t\t\t\t<Accordion.Content active={activeFinancialsMenuItem}>{Object.keys(financials).map(function(key,index) {\r\n\t\t\t\t\t\tif (financials.length > 0) {\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<Segment.Group>\r\n\t\t\t\t\t\t\t<Segment.Group horizontal>\r\n\t\t\t\t\t\t\t\t<Segment>Gross Profit (M$): {financials[key].grossProfit}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Operating Revenue (M$): {financials[key].operatingRevenue}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Total Revenue (M$): {financials[key].totalRevenue}</Segment>\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t\t<Segment.Group horizontal>\r\n\t\t\t\t\t\t\t\t<Segment>Total Assets (M$): {financials[key].totalAssets}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Total Liabilities (M$): {financials[key].totalLiabilities}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Total Cash (M$): {financials[key].totalCash}</Segment>\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t\t<Segment.Group horizontal>\r\n\t\t\t\t\t\t\t\t<Segment>Net Income (M$): {financials[key].netIncome}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Research and Development (M$): {financials[key].researchAndDevelopment}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Cash Flow (M$): {financials[key].cashFlow}</Segment>\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t\t<Segment.Group horizontal>\r\n\t\t\t\t\t\t\t\t<Segment>Total Debt (M$): {financials[key].totalDebt}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Short Term Debt (M$): {financials[key].shortTermDebt}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Long Term Debt (M$): {financials[key].longTermDebt}</Segment>\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t)}}\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Accordion.Content>\r\n\t\t\t\t\r\n\t\t\t</Accordion>\r\n\r\n\t\t\t\r\n\t\t</div>\r\n\t\t\r\n\t);\r\n} \r\n   \r\n\r\n\t\t\t\r\n{/* \r\n\t\t\t<Accordion>\r\n\t\t\t\t<Accordion.Title\r\n          \t\t\tactive={activeFinancialsMenuItem === 0}\r\n          \t\t\tindex={0}\r\n          \t\t\tonClick={handleFinancialsMenuItemClick(e)}\r\n        \t\t\t>\r\n\t\t\t\t\r\n\t\t\t\t<Icon name='dropdown' />\r\n\t\t\t\tFinancials\r\n\t\t\t\t</Accordion.Title>\r\n\t\t\t\t<Accordion.Content active={activeFinancialsMenuItem === 0}>\r\n\t\t\t\t\t{Object.keys(financials).map(function(key,index) {\r\n\t\t\t\t\t\tif (financials.length > 0) {\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<Segment.Group>\r\n\t\t\t\t\t\t\t<Segment.Group horizontal>\r\n\t\t\t\t\t\t\t\t<Segment>Gross Profit (M$): {financials[key].grossProfit}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Operating Revenue (M$): {financials[key].operatingRevenue}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Total Revenue (M$): {financials[key].totalRevenue}</Segment>\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t\t<Segment.Group horizontal>\r\n\t\t\t\t\t\t\t\t<Segment>Total Assets (M$): {financials[key].totalAssets}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Total Liabilities (M$): {financials[key].totalLiabilities}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Total Cash (M$): {financials[key].totalCash}</Segment>\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t)}}\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Accordion.Content>\r\n\r\n\t\t\t\t<Accordion.Title\r\n          \t\t\tactive={activeFinancialsMenuItem === 1}\r\n          \t\t\tindex={0}\r\n          \t\t\tonClick={handleFinancialsMenuItemClick()}\r\n        \t\t>\r\n          \t\t\t<Icon name='dropdown' />\r\n          \t\t\t\tWhat kinds of dogs are there?\r\n        \t\t</Accordion.Title>\r\n        \t\t<Accordion.Content active={activeFinancialsMenuItem === 1}>\r\n          \t\t\t<p>\r\n\t\t\t\t\tThere are many breeds of dogs. Each breed varies in size and\r\n\t\t\t\t\ttemperament. Owners often select a breed of dog that they find to be\r\n\t\t\t\t\tcompatible with their own lifestyle and desires from a companion.\r\n\t\t\t\t\t</p>\r\n        \t\t</Accordion.Content>\r\n\t\t\t</Accordion> */}\r\n\r\n\t\t\t{/* <Tab menu={{ pointing: true }} panes={comapnyFinancepanes(financials)} /> */}\r\n\r\n{/* \r\n\t\t\t\t\t// <Segment.Group>\r\n\t\t\t\t\t// \t<Segment>{ticker.toUpperCase()} Earnings and Financials as of {financials[key].reportDate}</Segment>\r\n\t\t\t\t\t// \t<Segment.Group horizontal>\r\n\t\t\t\t\t// \t\t<Segment>Gross Profit (M$): {financials[key].grossProfit}</Segment>\r\n\t\t\t\t\t// \t\t<Segment>Operating Revenue (M$): {financials[key].operatingRevenue}</Segment>\r\n\t\t\t\t\t// \t\t<Segment>Total Revenue (M$): {financials[key].totalRevenue}</Segment>\r\n\t\t\t\t\t// \t</Segment.Group>\r\n\t\t\t\t\t// \t<Segment.Group horizontal>\r\n\t\t\t\t\t// \t\t<Segment>Total Assets (M$): {financials[key].totalAssets}</Segment>\r\n\t\t\t\t\t// \t\t<Segment>Total Liabilities (M$): {financials[key].totalLiabilities}</Segment>\r\n\t\t\t\t\t// \t\t<Segment>Total Cash (M$): {financials[key].totalCash}</Segment>\r\n\t\t\t\t\t// \t</Segment.Group>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// </Segment.Group> */}\r\n\t\t\t\r\n{/* \r\n\t\t\t{function() {\r\n\t\t\t\tif (Object.keys(financials).length !== 0) {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<Segment.Group>\r\n\t\t\t\t\t\t\t<Segment>Gross Profit: {financials[0].grossProfit}</Segment>\r\n\t\t\t\t\t\t\t<Segment>Operating Revenue: {financials[0].operatingRevenue}</Segment>\r\n\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t} }\t\t\t */}\r\n\r\n{/* <p> Start Date: </p>\r\n\t\t\t<DatePicker \r\n\t\t\t\tselected={startDate} \r\n\t\t\t\tmaxDate={new Date()} \r\n\t\t\t\tonChange={date => handleStartDateClick(date)}\r\n\t\t\t\tplaceholderText='MM/DD/YYYY'\r\n\t\t\t\tisClearable\r\n\t\t\t\tshowYearDropdown\r\n\t\t\t\tscrollableMonthYearDropdown />\r\n\t\t\t<p> End Date: </p>\r\n\t\t\t\r\n\t\t\t<DatePicker \r\n\t\t\t\tselected={endDate} \r\n\t\t\t\tmaxDate={new Date()}\r\n\t\t\t\tonChange={date => handleEndDateClick(date)}\r\n\t\t\t\tplaceholderText='MM/DD/YYYY'\r\n\t\t\t\tisClearable\r\n\t\t\t\tshowYearDropdown\r\n\t\t\t\tscrollableMonthYearDropdown />\r\n\r\n\t\t\t<List>\r\n\t\t\t\t{Object.keys(stockData).map(function(key,index) {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<List.Item key={stockData[key].close}>\r\n\t\t\t\t\t\t\t<Header>Date: {key}</Header>\r\n\t\t\t\t\t\t\t<p>Open: {stockData[key].open}</p>\r\n\t\t\t\t\t\t\t<p>High: {stockData[key].high}</p>\r\n\t\t\t\t\t\t\t<p>Low: {stockData[key].low}</p>\r\n\t\t\t\t\t\t\t<p>Close: {stockData[key].close}</p>\r\n\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n        \t</List>\r\n\r\n\t\t</div> */}\r\n\r\n\r\n\t\t\r\n\t\t\t{/*\r\n\t\t\t\t <Form.Group>\r\n\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\tplaceholder=\"Add ticker ex) APPL\"\r\n\t\t\t\t\t\t// name='InputtedTicker' \r\n\t\t\t\t\t\tvalue={ticker}\r\n\t\t\t\t\t\tonChange={e => setTicker(e.target.value)}\r\n\t\t\t\t\t\tisClearable>\r\n\t\t\t\t\t</Form.Input>\r\n\t\t\t\t\t<Form.Button \r\n\t\t\t\t\t\tanimated \r\n\t\t\t\t\t\tprimary\r\n\t\t\t\t\t\tonClick={\r\n\t\t\t\t\t\t\thandleTickerFormSubmit()\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t<Form.Button.Content visible>Add</Form.Button.Content>\r\n\t\t\t\t\t\t<Form.Button.Content hidden>\r\n\t\t\t\t\t\t\t<Icon name='arrow right' />\r\n\t\t\t\t\t\t</Form.Button.Content>\r\n\t\t\t\t\t</Form.Button>\r\n\t\t\t\t</Form.Group> */}\r\n\r\n\r\n\t\t\t\t\r\n\t// const comapnyFinancepanes = (financialsData) => {\r\n\t// \tif (financialsData.length != 0) {\r\n\t// \t\t{Object.keys(financialsData).map(function(key,index){\r\n\t// \t\t\treturn(\r\n\t// \t\t\t\t[\r\n\t// \t\t\t\t\t{\r\n\t// \t\t\t\t\t  menuItem: 'Earning',\r\n\t// \t\t\t\t\t  render: () => <Tab.Pane attached={false}>\r\n\t// \t\t\t\t\t\t\t  <Segment.Group>\r\n\t// \t\t\t\t\t\t\t\t<Segment>{ticker.toUpperCase()} Earnings and Financials as of {financialsData[key].reportDate}</Segment>\r\n\t// \t\t\t\t\t\t\t\t<Segment.Group horizontal>\r\n\t// \t\t\t\t\t\t\t\t\t<Segment>Gross Profit (M$): {financialsData[key].grossProfit}</Segment>\r\n\t// \t\t\t\t\t\t\t\t\t<Segment>Operating Revenue (M$): {financialsData[key].operatingRevenue}</Segment>\r\n\t// \t\t\t\t\t\t\t\t\t<Segment>Total Revenue (M$): {financialsData[key].totalRevenue}</Segment>\r\n\t// \t\t\t\t\t\t\t\t</Segment.Group>\r\n\t// \t\t\t\t\t\t\t\t<Segment.Group horizontal>\r\n\t// \t\t\t\t\t\t\t\t\t<Segment>Total Assets (M$): {financialsData[key].totalAssets}</Segment>\r\n\t// \t\t\t\t\t\t\t\t\t<Segment>Total Liabilities (M$): {financialsData[key].totalLiabilities}</Segment>\r\n\t// \t\t\t\t\t\t\t\t\t<Segment>Total Cash (M$): {financialsData[key].totalCash}</Segment>\r\n\t// \t\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t// \t\t\t\t\t\t\t</Segment.Group>\r\n\t// \t\t\t\t\t  </Tab.Pane>,\r\n\t// \t\t\t\t\t},\r\n\t// \t\t\t\t\t{\r\n\t// \t\t\t\t\t  menuItem: 'Finances',\r\n\t// \t\t\t\t\t  render: () => <Tab.Pane attached={false}>Tab 2 Content</Tab.Pane>,\r\n\t// \t\t\t\t\t},\r\n\t// \t\t\t\t\t{\r\n\t// \t\t\t\t\t  menuItem: 'Tab 3',\r\n\t// \t\t\t\t\t  render: () => <Tab.Pane attached={false}>Tab 3 Content</Tab.Pane>,\r\n\t// \t\t\t\t\t},\r\n\t// \t\t\t\t  ]\r\n\t// \t\t\t)})};\r\n\t// \t}\r\n\t// }","import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { StockData } from './components/StockData';\nimport { Container } from \"semantic-ui-react\"\nimport { StockDataDateForm } from './components/StockDataDateForm';\n\nfunction App() {\n  // const [stockData, setStockData] = useState([]);\n\n  // useEffect(() => {\n  //   fetch(\"/get_stock_data\").then(response => \n  //     response.json().then(data => {\n  //       //console.log(Object.keys(data));\n  //       setStockData(data);\n  //     })\n  //   )\n  // }, [])\n  \n  return (\n    <div className=\"App\">\n      <Container style={{marginTop: 40}}>\n        <StockDataDateForm />\n        \n        {/* <StockData stockData={stockData} /> */}\n      </Container>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}