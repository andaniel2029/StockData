{"version":3,"sources":["logo.svg","components/charts/volumeBarChart.js","components/charts/earningChart.js","components/charts/stockPriceLineChart.js","components/charts/momentumIndicatorsChart.js","components/StockData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createVolumeBarChart","data","showVolumeNode","svg","select","current","selectAll","remove","margin","parseDate","d3","attr","innerHeight","x","scaleBand","domain","range","date","length","filter","d","getUTCDay","padding","y","scaleLinear","volume","rangeRound","append","call","g","tickValues","every","tickFormat","ticks","join","bandwidth","open","close","node","createEarningsChart","earningsChartNode","innerWidth","yScale","Math","min","consensusEPS","actualEPS","max","xScale","map","fiscalPeriod","enter","createStockPriceLineChart","stockPriceLineChartNode","displayPriceChart","low","high","clone","lineGenerator","line","curve","curveLinear","createMomentumIndicatorsChart","momentumIndicatorsChartNode","displayRSIcheckbox","displayTSIcheckbox","displayUOcheckbox","displayStochCheckbox","displayStochSignalCheckbox","displayWR","displayAO","displayKama","displayROC","i","console","log","gRSI","lineGeneratorRSI","rsi","gTSI","lineGeneratorTSI","tsi","gUO","lineGeneratorUO","UO","gStoch","lineGeneratorStoch","stoch","gStochSignal","lineGeneratorStochSignal","stoch_signal","gWR","lineGeneratorWR","wr","gAO","lineGeneratorAO","ao","gKama","lineGeneratorKama","kama","gROC","lineGeneratorROC","roc","StockData","currentDate","Date","setTime","getTime","useState","startDate","setStartDate","endDate","setEndDate","ticker","setTicker","financials","setFinancials","earnings","setEarnings","activeItemDateMenu","setActiveItemDateMenu","activeFinancialsMenuItem","setActiveFinancialsMenuItem","activeEarningsMenuItem","setActiveEarningsMenuItem","stockData","setStockData","setDisplayPriceChart","setDisplayRSIcheckbox","NforRSI","setNforRSI","setDisplayTSIcheckbox","rForTSI","setrForTSI","sForTSI","setsForTSI","setUOcheckbox","sForUO","setsForUO","mForUO","setmForUO","lenForUO","setlenForUO","wsForUO","setwsForUO","wmForUO","setwmForUO","wlForUO","setwlForUO","setDisplayStochCheckbox","nForStoch","setNForStoch","d_nForStoch","setd_nForStoch","setDisplayStochSignalCheckbox","nForStochSignal","setNForStochSignal","d_nForStochSignal","setd_nForStochSignal","setDisplayWR","lbpForWR","setLBPForWR","setDisplayAO","sForAO","setSForAO","lenForAO","setLenForAO","setDisplayKama","nForKama","setNForKama","pow1ForKama","setPow1ForKama","pow2ForKama","setPow2ForKama","setDisplayROC","nForROC","setNForROC","useRef","convertDatesToString","initialDate","String","getFullYear","getMonth","getDate","getAndSetStockData","stockTicker","theStartDate","theEndDate","startDateConverted","endDateConverted","fetch","then","response","json","createMomentumIndicatorsChartFunction","getAndSetFinancials","getAndSetEarnings","handleDateClick","minusDays","name","dateOffset","useEffect","RSIparameters","TSIparameters","UOparameters","StochParameters","StochSignalParameters","WRParameters","AOParameters","KamaParameters","ROCParameters","method","headers","body","JSON","stringify","dataForMomfromAPI","catch","error","momentumNtradingDayOptions","key","text","value","level1MomentumMenuPanels","title","content","class","Fragment","Checkbox","defaultChecked","onClick","label","Form","Field","control","Select","options","children","placeholder","onChange","e","selectedOption","index","rootPanels","className","Accordion","panels","Grid","celled","Column","width","Row","stretched","Segment","Input","target","isClearable","Button","animated","primary","Content","visible","hidden","Icon","Menu","Item","active","selected","maxDate","handleStartDateClick","placeholderText","showYearDropdown","scrollableMonthYearDropdown","handleEndDateClick","toggle","event","defaultActiveIndex","styled","ref","Title","Object","keys","Group","horizontal","grossProfit","operatingRevenue","totalRevenue","totalAssets","totalLiabilities","totalCash","netIncome","researchAndDevelopment","cashFlow","totalDebt","shortTermDebt","longTermDebt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"js/main.7bd5beaa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/logo.5d5d9eef.svg\";","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { scaleLinear, scaleBand, scalePoint, tickFormat } from 'd3-scale'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\n\r\nexport function createVolumeBarChart(data,showVolumeNode) {\r\n    const svg = select(showVolumeNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n    const margin = ({top: 30, right: 30, bottom: 50, left: 40})\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    const height = 150;\r\n    const width = 700;\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    const x = scaleBand()\r\n        .domain(d3.utcDay\r\n            .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n            .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2)\r\n\r\n    // d3.min(data, d => d.volume)-(d3.max(data, d => d.volume)-d3.min(data, d => d.volume))/10\r\n    const y = scaleLinear()\r\n        .domain([0, d3.max(data, d => d.volume)])\r\n        .rangeRound([0,innerHeight])\r\n    //console.log(y.domain())\r\n    const xAxis = g => g\r\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .tickValues(d3.utcMonday\r\n                .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n            .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n        .call(g => g.select(\".domain\").remove())\r\n    \r\n\r\n    const yAxis = g => g\r\n        .attr(\"transform\", `translate(${margin.left},0)`)\r\n        .call(d3.axisLeft(y).ticks(0))\r\n        //     .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n        // .call(g => g.selectAll(\".tick line\").clone()\r\n        //     .attr(\"stroke-width\", 0))\r\n            //.attr(\"x2\", width - margin.left - margin.right))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    // yAxis.select('.domain')\r\n    //     .attr('stroke-width', 0);\r\n\r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n        \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n\r\n    const g = svg.append(\"g\")\r\n        // .attr(\"stroke\", \"black\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n        .attr(\"transform\", data => `translate(${x(parseDate(data.date))},0)`);\r\n\r\n    g.append(\"rect\")\r\n        .attr('width', d=>(x.bandwidth()+x.padding()))\r\n        .attr('height',d=>y(d.volume))\r\n        .attr(\"fill\", d => d.open > d.close ? d3.schemeSet1[0]\r\n            : d.close > d.open ? d3.schemeSet1[2]\r\n            : d3.schemeSet1[8])\r\n        .attr('transform',`translate(${x.bandwidth()},${innerHeight})  rotate(180)`)\r\n\r\n    return svg.node();\r\n}","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { scaleLinear, scaleBand, scalePoint } from 'd3-scale'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\n\r\nexport function createEarningsChart(data,earningsChartNode) {\r\n    // https://www.youtube.com/watch?v=UDDGcgxficY \r\n    // stopped video at 3:41\r\n    // https://observablehq.com/d/8974f775c6a0ae5d\r\n    const svg = select(earningsChartNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n    const margin = ({top: 30, right: 30, bottom: 50, left: 40})\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    const xLabel = 'Fiscal Period';\r\n    const yLabel = 'Earnings Per Share'\r\n    const width = 700;\r\n    const height = 350;\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    const yScale = scaleLinear()\r\n        .domain([d3.min(data,d => Math.min(d.consensusEPS,d.actualEPS)),d3.max(data,d => Math.max(d.consensusEPS,d.actualEPS))])\r\n        .range([innerHeight,0])\r\n\r\n    const yAxis = d3.axisLeft(yScale)\r\n\r\n    const xScale = scaleBand()\r\n        .domain(data.map(d => d.fiscalPeriod))\r\n        .range([0,innerWidth])\r\n        \r\n    \r\n    const xAxis = d3.axisBottom(xScale);\r\n\r\n    const g = svg.append('g')\r\n        .attr('transform',`translate(${margin.left},${margin.top})`);\r\n\r\n    g.append('g').call(d3.axisLeft(yScale))\r\n        .select(\".domain\").remove();\r\n    g.append('g').call(d3.axisBottom(xScale))\r\n        .attr('transform',`translate(0,${innerHeight})`)\r\n        .select(\".domain\").remove();\r\n\r\n    g.selectAll('circle')\r\n        .data(data)\r\n        .enter()\r\n        .append('circle')\r\n            .attr('cx', d => ((xScale.bandwidth()/2)+xScale(d.fiscalPeriod)))\r\n            .attr('cy', d => yScale(d.consensusEPS))\r\n            .attr('r',30)\r\n            .attr('fill','green')\r\n            .attr('width', xScale.bandwidth())\r\n        \r\n    return svg.node();\r\n\r\n}","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport * as d3 from \"d3\"\r\n\r\nimport {\r\n    select,\r\n    csv,\r\n    scaleLinear,\r\n    scaleBand,\r\n    scaleTime,\r\n    extent,\r\n    axisLeft,\r\n    axisBottom,\r\n    line,\r\n    curveBasis,\r\n    curveLinear\r\n  } from 'd3';\r\n\r\nexport function createStockPriceLineChart(data,stockPriceLineChartNode,displayPriceChart) {\r\n    \r\n    const svg = select(stockPriceLineChartNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n\r\n    const height = 350;\r\n    const width = 700;\r\n    //const margin = ({top: 20, right: 30, bottom: 30, left: 80})\r\n    //const formatSecond = d3.timeFormat(\":%S\")\r\n    function parseSec(date) {\r\n        return new Date(date * 1000);\r\n    }\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    //new Date(secs * 1000);\r\n    const margin = ({top: 10, right: 30, bottom: 5, left: 40})\r\n    //const parseDate = d3.utcParse(\"%s\")// d3.utcParse(\"%a %b %d %Y %X %LZ\")// d3.utcParse(\"%Y-%m-%d\")\r\n    //console.log(parseDate((data[data.length - 1].date)) + 1)\r\n    const x = scaleBand()\r\n        .domain(d3.utcDay\r\n            .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n            .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2)\r\n\r\n    const y = scaleLinear()\r\n        .domain([d3.min(data, d => d.low), d3.max(data, d => d.high)])\r\n        .rangeRound([height - margin.bottom, margin.top])\r\n\r\n    \r\n\r\n    const xAxis = g => g\r\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .tickValues(d3.utcMonday\r\n                .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n            .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n        .call(g => g.select(\".domain\").remove())\r\n    \r\n\r\n    const yAxis = g => g\r\n        .attr(\"transform\", `translate(${margin.left},0)`)\r\n        .call(d3.axisLeft(y)\r\n            .tickFormat(d3.format(\"$~f\"))\r\n            .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n        .call(g => g.selectAll(\".tick line\").clone()\r\n            .attr(\"stroke-opacity\", 0)\r\n            .attr(\"x2\", width - margin.left - margin.right))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n\r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n        \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n    if (displayPriceChart) {\r\n        svg.selectAll(\"g\").selectAll(\".candleStick\").remove()\r\n\r\n        const g = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"black\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGenerator = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.close))\r\n            .curve(curveLinear);\r\n\r\n        g.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGenerator(data))\r\n            .attr('id','lineChart')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".lineChart\").remove()\r\n\r\n        const g = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"black\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        g.append(\"line\")\r\n            .attr(\"y1\", d => y(d.low))\r\n            .attr(\"y2\", d => y(d.high));\r\n\r\n        g.append(\"line\")\r\n            .attr(\"y1\", d => y(d.open))\r\n            .attr(\"y2\", d => y(d.close))\r\n            .attr(\"id\",\"candleStick\")\r\n            .attr(\"stroke-width\", x.bandwidth())\r\n            .attr(\"stroke\", d => d.open > d.close ? d3.schemeSet1[0]\r\n                : d.close > d.open ? d3.schemeSet1[2]\r\n                : d3.schemeSet1[8]);\r\n    }\r\n    \r\n    //     .on('mouseover', function (d, i) {\r\n    //         let hoverOverString = 'Date: '+d.date.toString();//(Math.round((d.value / d.data.all) * 100)).toString() + '%';\r\n    //         tooltip.html(d)  \r\n    //             .style(\"left\", (d3.event.pageX) + \"px\")     \r\n    //             .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            \r\n    //         div.html(hoverOverString)\r\n    //              .style(\"left\", (10) + \"px\")\r\n    //              .style(\"top\", (15) + \"px\");\r\n    //     })\r\n    //    .on('mouseout', function (d, i) {\r\n    //     d3.select(svg).transition()\r\n    //          .duration('50')\r\n    //          .attr('opacity', '1');\r\n    //     div.transition()\r\n    //          .duration('50')\r\n    //          .style(\"opacity\", 0);\r\n    //     });\r\n\r\n    // const g2 = svg.append(\"g\")\r\n    //     .attr(\"stroke-linecap\", \"round\")\r\n    //     .attr(\"stroke\", \"red\")\r\n    //     .selectAll(\"g\")\r\n    //     .data(data)\r\n    //     .join(\"g\")\r\n    //     // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n    \r\n    // const lineGenerator2 = line()\r\n    //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n    //     .y(d => y(d.rsi))\r\n    //     .curve(curveLinear);\r\n\r\n    // g2.append('path')\r\n    //     .attr('class', 'line-path')\r\n    //     .attr('d', lineGenerator2(data))\r\n    //     .attr('fill','none')\r\n    //     .attr('stroke-width',5)\r\n    return svg.node();\r\n}","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport * as d3 from \"d3\"\r\nimport {\r\n    select,\r\n    csv,\r\n    scaleLinear,\r\n    scaleBand,\r\n    scaleTime,\r\n    extent,\r\n    axisLeft,\r\n    axisBottom,\r\n    line,\r\n    curveBasis,\r\n    curveLinear\r\n  } from 'd3';\r\n\r\n\r\n\r\n  \r\n\r\nexport function createMomentumIndicatorsChart(data,momentumIndicatorsChartNode,displayRSIcheckbox,displayTSIcheckbox,displayUOcheckbox,displayStochCheckbox,displayStochSignalCheckbox,displayWR,displayAO,displayKama,displayROC) {\r\n\r\n    var min = 0\r\n    var max = 0\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (displayRSIcheckbox) {\r\n            if (data[i]['rsi'] < min) {\r\n                min = data[i]['rsi']\r\n            }\r\n            if (data[i]['rsi'] > max) {\r\n                max = data[i]['rsi']\r\n            }\r\n        }\r\n        if (displayTSIcheckbox) {\r\n            console.log(data[i]['tsi'])\r\n            if (data[i]['tsi'] < min) {\r\n                min = data[i]['tsi']\r\n                console.log(data[i]['tsi'])\r\n            }\r\n            if (data[i]['tsi'] > max) {\r\n                max = data[i]['tsi']\r\n            }\r\n        }\r\n        if (displayUOcheckbox) {\r\n            if (data[i]['uo'] < min) {\r\n                min = data[i]['uo']\r\n            }\r\n            if (data[i]['uo'] > max) {\r\n                max = data[i]['uo']\r\n            }\r\n        }\r\n        if (displayStochCheckbox) {\r\n            if (data[i]['stoch'] < min) {\r\n                min = data[i]['stoch']\r\n            }\r\n            if (data[i]['stoch'] > max) {\r\n                max = data[i]['stoch']\r\n            }\r\n        }\r\n        if (displayStochSignalCheckbox) {\r\n            if (data[i]['stoch_signal'] < min) {\r\n                min = data[i]['stoch_signal']\r\n            }\r\n            if (data[i]['stoch_signal'] > max) {\r\n                max = data[i]['stoch_signal']\r\n            }\r\n        }\r\n        if (displayWR) {\r\n            if (data[i]['wr'] < min) {\r\n                min = data[i]['wr']\r\n            }\r\n            if (data[i]['wr'] > max) {\r\n                max = data[i]['wr']\r\n            }\r\n        }\r\n        if (displayAO) {\r\n            if (data[i]['ao'] < min) {\r\n                min = data[i]['ao']\r\n            }\r\n            if (data[i]['ao'] > max) {\r\n                max = data[i]['ao']\r\n            }\r\n        }\r\n        if (displayKama) {\r\n            if (data[i]['kama'] < min) {\r\n                min = data[i]['kama']\r\n            }\r\n            if (data[i]['kama'] > max) {\r\n                max = data[i]['kama']\r\n            }\r\n        }\r\n        if (displayROC) {\r\n            if (data[i]['roc'] < min) {\r\n                min = data[i]['roc']\r\n            }\r\n            if (data[i]['roc'] > max) {\r\n                max = data[i]['roc']\r\n            }\r\n        }\r\n    }\r\n    if (min == 0 && max == 0) {\r\n        max = 80\r\n    }\r\n    console.log(min)\r\n    // function min_max(data,displayRSIcheckbox,displayTSIcheckbox,displayUOcheckbox,displayStochCheckbox,displayStochSignalCheckbox)  {\r\n    //     var min = 0\r\n    //     var max = 0\r\n    //     console.log(displayRSIcheckbox)\r\n    //     console.log(displayTSIcheckbox)\r\n    //     for (var i = 0; i < data.length; i++) {\r\n    //         if (displayRSIcheckbox) {\r\n    //             if (data[i]['rsi'] < min) {\r\n    //                 min = data[i]['rsi']\r\n    //             }\r\n    //             if (data[i]['rsi'] > max) {\r\n    //                 max = data[i]['rsi']\r\n    //             }\r\n    //         }\r\n    //         if (displayTSIcheckbox) {\r\n    //             console.log(data[i]['tsi'])\r\n    //             if (data[i]['tsi'] < min) {\r\n    //                 min = data[i]['tsi']\r\n    //                 console.log(data[i]['tsi'])\r\n    //             }\r\n    //             if (data[i]['tsi'] > max) {\r\n    //                 max = data[i]['tsi']\r\n    //             }\r\n    //         }\r\n    //         if (displayUOcheckbox) {\r\n    //             if (data[i]['uo'] < min) {\r\n    //                 min = data[i]['uo']\r\n    //             }\r\n    //             if (data[i]['uo'] > max) {\r\n    //                 max = data[i]['uo']\r\n    //             }\r\n    //         }\r\n    //         if (displayStochCheckbox) {\r\n    //             if (data[i]['stoch'] < min) {\r\n    //                 min = data[i]['stoch']\r\n    //             }\r\n    //             if (data[i]['stoch'] > max) {\r\n    //                 max = data[i]['stoch']\r\n    //             }\r\n    //         }\r\n    //         if (displayStochSignalCheckbox) {\r\n    //             if (data[i]['stoch_signal'] < min) {\r\n    //                 min = data[i]['stoch_signal']\r\n    //             }\r\n    //             if (data[i]['stoch_signal'] > max) {\r\n    //                 max = data[i]['stoch_signal']\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     if (min == 0 && max == 0) {\r\n    //         max = 80\r\n    //     }\r\n    //     return [min,max]\r\n    // }\r\n            \r\n    \r\n    //console.log(data)\r\n\r\n\r\n    const svg = select(momentumIndicatorsChartNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n\r\n    //console.log(displayRSIcheckbox)\r\n\r\n    const height = 150;\r\n    const width = 700;\r\n    //const margin = ({top: 20, right: 30, bottom: 30, left: 80})\r\n\r\n    const margin = ({top: 5, right: 30, bottom: 50, left: 40})\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    \r\n    const x = scaleBand()\r\n        .domain(d3.utcDay\r\n            .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n            .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2)\r\n\r\n    var y = scaleLinear()\r\n        //.domain([d3.min(data, d => d.rsi), d3.max(data, d => d.rsi)])\r\n        .domain([min,max])\r\n        .rangeRound([height - margin.bottom, margin.top])\r\n\r\n    const xAxis = g => g\r\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .tickValues(d3.utcMonday\r\n                .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n            .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    var yAxis = g => g\r\n        .attr(\"transform\", `translate(${margin.left},0)`)\r\n        .call(d3.axisLeft(y)\r\n            .tickFormat(d3.format(\"~f\"))\r\n            .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n        .call(g => g.selectAll(\".tick line\").clone()\r\n            .attr(\"stroke-opacity\", 0)\r\n            .attr(\"x2\", width - margin.left - margin.right))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n\r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n        \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n\r\n    const gRSI = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"red\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n        // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n    const lineGeneratorRSI = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.rsi))\r\n        .curve(curveLinear);\r\n\r\n    if (displayRSIcheckbox) {\r\n        gRSI.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"rsi\")\r\n        .attr('d', lineGeneratorRSI(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".rsi\").remove()\r\n    }\r\n\r\n    const gTSI = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"blue\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorTSI = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.tsi))\r\n        .curve(curveLinear);\r\n\r\n    if (displayTSIcheckbox) {\r\n        gTSI.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"tsi\")\r\n        .attr('d', lineGeneratorTSI(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".tsi\").remove()\r\n    }\r\n\r\n    const gUO = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"green\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorUO = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.UO))\r\n        .curve(curveLinear);\r\n\r\n    if (displayUOcheckbox) {\r\n        gUO.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"uo\")\r\n        .attr('d', lineGeneratorUO(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".uo\").remove()\r\n    }\r\n    \r\n    \r\n    const gStoch = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"purple\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorStoch = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.stoch))\r\n        .curve(curveLinear);\r\n\r\n    if (displayStochCheckbox) {\r\n        gStoch.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"stoch\")\r\n        .attr('d', lineGeneratorStoch(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".stoch\").remove()\r\n    }\r\n\r\n    \r\n    const gStochSignal = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"yellow\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorStochSignal = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.stoch_signal))\r\n        .curve(curveLinear);\r\n\r\n    if (displayStochSignalCheckbox) {\r\n        gStochSignal.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"stochSignal\")\r\n        .attr('d', lineGeneratorStochSignal(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".stochSignal\").remove()\r\n    }\r\n\r\n    const gWR = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"orange\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorWR = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.wr))\r\n        .curve(curveLinear);\r\n\r\n    if (displayWR) {\r\n        gWR.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"wr\")\r\n        .attr('d', lineGeneratorWR(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".wr\").remove()\r\n    }\r\n\r\n    const gAO = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"pink\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorAO = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.ao))\r\n        .curve(curveLinear);\r\n\r\n    if (displayAO) {\r\n        gAO.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"ao\")\r\n        .attr('d', lineGeneratorAO(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".ao\").remove()\r\n    }\r\n\r\n    const gKama = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"darkgreen\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorKama = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.kama))\r\n        .curve(curveLinear);\r\n\r\n    if (displayKama) {\r\n        gKama.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"kama\")\r\n        .attr('d', lineGeneratorKama(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".kama\").remove()\r\n    }\r\n\r\n    const gROC = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"lightblue\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorROC = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.roc))\r\n        .curve(curveLinear);\r\n\r\n    if (displayROC) {\r\n        gROC.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"roc\")\r\n        .attr('d', lineGeneratorROC(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".roc\").remove()\r\n    }\r\n\r\n    return svg.node();\r\n\r\n}","import React, {useState, useEffect, useRef} from 'react';\r\nimport \"semantic-ui-css/semantic.min.css\"\r\nimport '../App.css'\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { List, Header, Form, Input, Button, Radio, Grid, Container, Sidebar, Icon, Menu, Segment, Accordion, Checkbox, Select } from \"semantic-ui-react\"\r\nimport { createCandleStickChart } from './charts/candleStickChart.js'\r\nimport { createVolumeBarChart } from './charts/volumeBarChart.js'\r\nimport { createEarningsChart } from './charts/earningChart.js'\r\nimport { createStockPriceLineChart } from './charts/stockPriceLineChart';\r\nimport { createMomentumIndicatorsChart } from './charts/momentumIndicatorsChart'\r\n\r\nexport const StockData = () => {\r\n\tvar currentDate = new Date();\r\n\tvar dateOffset = (24*60*60*1000) * 182; \r\n\tvar newDate = currentDate.setTime(currentDate.getTime() - dateOffset);\r\n\t\r\n\tconst [startDate, setStartDate] = useState(currentDate);\r\n\tconst [endDate, setEndDate] = useState(new Date());\r\n\tconst [ticker, setTicker] = useState('AAPL');\r\n\tconst [financials, setFinancials] = useState([])\r\n\tconst [earnings, setEarnings] = useState([])\r\n\tconst [activeItemDateMenu, setActiveItemDateMenu] = useState('');\r\n\tconst [activeFinancialsMenuItem, setActiveFinancialsMenuItem] = useState()\r\n\tconst [activeEarningsMenuItem, setActiveEarningsMenuItem] = useState()\r\n    const [activeMomentumMenuItem, setActiveMomentumMenuItem] = useState()\r\n    const [activeRSIMenuItem, setActiveRSIMenuItem] = useState()\r\n    const [activeTSIMenuItem, setActiveTSIMenuItem] = useState()\r\n    const [activeUOMenuItem, setActiveUOMenuItem] = useState()\r\n    \r\n\r\n\tconst [stockData, setStockData] = useState([]);\r\n\tconst [displayPriceChart, setDisplayPriceChart] = useState(true)\r\n\tconst [displayRSIcheckbox, setDisplayRSIcheckbox] = useState(true)\r\n\tconst [NforRSI, setNforRSI] = useState(10)\r\n\r\n\tconst [displayTSIcheckbox, setDisplayTSIcheckbox] = useState(false)\r\n\tconst [rForTSI, setrForTSI] = useState(25)\r\n\tconst [sForTSI, setsForTSI] = useState(13)\r\n\r\n\tconst [displayUOcheckbox, setUOcheckbox] = useState(false)\r\n\tconst [sForUO, setsForUO] = useState(7)\r\n\tconst [mForUO, setmForUO] = useState(14)\r\n\tconst [lenForUO, setlenForUO] = useState(28)\r\n\tconst [wsForUO, setwsForUO] = useState(4)\r\n\tconst [wmForUO, setwmForUO] = useState(2)\r\n    const [wlForUO, setwlForUO] = useState(1)\r\n    \r\n    const [displayStochCheckbox, setDisplayStochCheckbox] = useState(false)\r\n    const [nForStoch, setNForStoch] = useState(14)\r\n    const [d_nForStoch, setd_nForStoch] = useState(3)\r\n\r\n    const [displayStochSignalCheckbox, setDisplayStochSignalCheckbox] = useState(false)\r\n    const [nForStochSignal, setNForStochSignal] = useState(14)\r\n    const [d_nForStochSignal, setd_nForStochSignal] = useState(3)\r\n\r\n    const [displayWR, setDisplayWR] = useState(false)\r\n    const [lbpForWR, setLBPForWR] = useState(14)\r\n\r\n    const [displayAO, setDisplayAO] = useState(false)\r\n    const [sForAO, setSForAO] = useState(5)\r\n    const [lenForAO, setLenForAO] = useState(34)\r\n\r\n    const [displayKama, setDisplayKama] = useState(false)\r\n    const [nForKama, setNForKama] = useState(10)\r\n    const [pow1ForKama, setPow1ForKama] = useState(2)\r\n    const [pow2ForKama, setPow2ForKama] = useState(30)\r\n\r\n    const [displayROC, setDisplayROC] = useState(false)\r\n    const [nForROC, setNForROC] = useState(12)\r\n\r\n\tconst candleChartNode = useRef(null);\r\n\tconst earningsChartNode = useRef(null);\r\n\tconst showVolumeNode = useRef(null);\r\n\tconst stockPriceLineChartNode = useRef(null);\r\n\tconst momentumIndicatorsChartNode = useRef(null);\r\n\r\n\tif (stockData.length < 1 && earnings.length < 1){\r\n\t\tgetAndSetStockData(ticker,startDate,endDate)\r\n\t\tgetAndSetEarnings(ticker)\r\n\t}\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (stockData.length > 0) {\r\n\t\t\tcreateStockPriceLineChart(stockData,stockPriceLineChartNode,displayPriceChart);\r\n\t\t\tcreateVolumeBarChart(stockData,showVolumeNode);\r\n\t\t\tcreateMomentumIndicatorsChartFunction(stockData,momentumIndicatorsChartNode)\r\n\t\t}\r\n\r\n\t\tif (earnings.length > 0) {\r\n\t\t\t//console.log(earnings)\r\n\t\t\tcreateEarningsChart(earnings,earningsChartNode)\r\n\t\t}\r\n\t},[stockData,displayRSIcheckbox,NforRSI,displayTSIcheckbox,rForTSI,sForTSI,displayUOcheckbox,sForUO,mForUO,lenForUO,wsForUO,wmForUO,wlForUO,displayStochCheckbox,nForStoch,d_nForStoch,,displayStochSignalCheckbox,nForStochSignal,d_nForStochSignal,displayWR,lbpForWR,displayAO,sForAO,lenForAO,displayKama,nForKama,pow1ForKama,pow2ForKama,displayROC,nForROC,displayPriceChart])\r\n\r\nconsole.log(displayPriceChart)\r\n\r\n\tfunction convertDatesToString(initialDate) {\r\n\t\tconst convertedDate = String(initialDate.getFullYear())+\"-\"+String(initialDate.getMonth() + 1)+\"-\"+String(initialDate.getDate())\r\n\t\treturn convertedDate\r\n\t}\r\n\r\n\tfunction getAndSetStockData(stockTicker,theStartDate,theEndDate) {\r\n\r\n\t\tconst startDateConverted = convertDatesToString(theStartDate) \r\n\t\tconst endDateConverted = convertDatesToString(theEndDate) \r\n\t\tfetch(\"/get_stock_data/\"+stockTicker+\"/\"+startDateConverted+\"/\"+endDateConverted).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tif (stockData.length < 1) {\r\n\t\t\t\t\tcreateStockPriceLineChart(data,stockPriceLineChartNode,displayPriceChart);\r\n\t\t\t\t\tcreateVolumeBarChart(data,showVolumeNode);\r\n\t\t\t\t\tcreateMomentumIndicatorsChartFunction(data,momentumIndicatorsChartNode);\r\n\t\t\t\t}\r\n\t\t\t\tsetStockData(data);\r\n\r\n\t\t\t})\r\n\t\t)\r\n\t}\r\n\r\n\tfunction getAndSetFinancials(stockTicker) {\r\n\t\tfetch(\"/get_financial_data/\"+stockTicker).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tsetFinancials(data)\r\n\t\t\t}))\r\n\t}\r\n\r\n\tfunction getAndSetEarnings(stockTicker) {\r\n\t\tfetch(\"/get_earnings_data/\"+stockTicker).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tif (earnings.length < 1) {\r\n\t\t\t\t\tcreateEarningsChart(data,earningsChartNode)\r\n\t\t\t\t}\r\n\t\t\t\tsetEarnings(data)\r\n\t\t\t}))\r\n\t}\r\n\r\n\tfunction handleStartDateClick(date) {\r\n\t\tif (date !== startDate) {\r\n\t\t\tsetStartDate(date)\r\n\t\t\t\r\n\t\t}\r\n\t\tgetAndSetStockData(ticker,date,endDate)\r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\t}\r\n\t\r\n\tfunction handleDateClick(minusDays, name) {\r\n\t\tsetActiveItemDateMenu(name)\r\n\t\t\r\n\t\tvar currentDate = new Date();\r\n\t\tvar dateOffset = (24*60*60*1000) * minusDays; \r\n\t\tvar newDate = currentDate.setTime(currentDate.getTime() - dateOffset);\r\n\t\tsetStartDate(currentDate);\r\n\t\tgetAndSetStockData(ticker,currentDate,endDate) \r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\t}\r\n\r\n\tfunction handleEndDateClick(date) {\r\n\t\tsetEndDate(date)\r\n\t\tgetAndSetStockData(ticker,startDate,date) \r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\r\n\t}\r\n\r\n\tfunction handleTickerFormSubmit() {\r\n\t\tgetAndSetStockData(ticker,startDate,endDate) \r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\t}\r\n\r\n    const handlePriceClickLine = (event, {value}) => setDisplayPriceChart(true)\r\n    const handlePriceClickCandle = (event, {value}) => setDisplayPriceChart(false)\r\n    // function handlePriceChartClick() {\r\n    //     //(event, {value}) => setDisplayPriceChart(!{ value });\r\n    //     setDisplayPriceChart(!displayPriceChart)\r\n    //     console.log(!displayPriceChart)\r\n        \r\n    // }\r\n\r\n\tfunction createMomentumIndicatorsChartFunction(data,momentumIndicatorsChartNode) {\r\n\t\t\r\n\t\tconst RSIparameters = {'N':NforRSI}\r\n\t\tconst TSIparameters = {'displayTSI':displayTSIcheckbox,'rTSI':rForTSI,'sTSI':sForTSI}\r\n\t\tconst UOparameters = {'displayUO':displayUOcheckbox,'sForUO':sForUO,'mForUO':mForUO,'lenForUO':lenForUO,'wsForUO':wsForUO,'wmForUO':wmForUO,'wlForUO':wlForUO}\r\n\t\tconst StochParameters = {'displayStoch':displayStochCheckbox,'nForStoch':nForStoch,'d_nForStoch':d_nForStoch}\r\n\t\tconst StochSignalParameters = {'displayStochSignal':displayStochSignalCheckbox,'nForStochSignal':nForStochSignal,'d_nForStochSignal':d_nForStochSignal}\r\n        const WRParameters = {'displayWR':displayWR,'lbpForWR':lbpForWR}\r\n        const AOParameters = {'displayAO':displayAO,'sForAO':sForAO,'lenForAO':lenForAO}\r\n        const KamaParameters = {'displayKama':displayKama,'nForKama':nForKama,'pow1ForKama':pow1ForKama,'pow2ForKama':pow2ForKama}\r\n        const ROCParameters = {'displayROC':displayROC,'nForROC':nForROC}\r\n\r\n\t\tif (data.length > 1){\r\n\t\t\tfetch('/calculate_Momentum_Indicators/', {\r\n\t\t\t\tmethod: 'POST', // or 'PUT'\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify([data,RSIparameters,TSIparameters,UOparameters,StochParameters,StochSignalParameters,WRParameters,AOParameters,KamaParameters,ROCParameters]),\r\n\t\t\t\t})\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(dataForMomfromAPI => {\r\n\t\t\t\t\tcreateMomentumIndicatorsChart(dataForMomfromAPI,momentumIndicatorsChartNode,displayRSIcheckbox,displayTSIcheckbox,displayUOcheckbox,displayStochCheckbox,displayStochSignalCheckbox,displayWR,displayAO,displayKama,displayROC)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t\t});\r\n\t\t}else{\r\n\t\t\tcreateMomentumIndicatorsChart(data,momentumIndicatorsChartNode,displayRSIcheckbox,displayTSIcheckbox,displayUOcheckbox,displayStochCheckbox,displayStochSignalCheckbox,displayWR,displayAO,displayKama,displayROC)\r\n\t\t}\r\n\r\n\t\t// if (displayTSIcheckbox) {\r\n\t\t// \tconst dataWithsAndrForTSI = [...stockData,{'r':rForTSI},{'s':sForTSI}]\r\n\t\t// \tif (dataWithsAndrForTSI > 1) {\r\n\t\t// \t\tfetch('/calculate_TSI/', {\r\n\t\t// \t\t\tmethod: 'POST', // or 'PUT'\r\n\t\t// \t\t\theaders: {\r\n\t\t// \t\t\t\t'Content-Type': 'application/json',\r\n\t\t// \t\t\t},\r\n\t\t// \t\t\tbody: JSON.stringify(dataWithsAndrForTSI),\r\n\t\t// \t\t\t})\r\n\t\t// \t\t\t.then(response => response.json())\r\n\t\t// \t\t\t.then(dataForTSIfromAPI => {\r\n\t\t// \t\t\t\tcreateMomentumIndicatorsChart(dataForRSIfromAPI,momentumIndicatorsChartNode,displayRSIcheckbox,dataForTSIfromAPI,displayTSIcheckbox)\r\n\t\t// \t\t\t})\r\n\t\t// \t\t\t.catch((error) => {\r\n\t\t// \t\t\tconsole.error('Error:', error);\r\n\t\t// \t\t\t});\r\n\r\n\t\t// \t}\r\n\t\t// }\r\n\r\n\t\t// const dataWithN = [...stockData,{'N':NforRSI}]\r\n\t\t// if (dataWithN.length > 1) {\r\n\t\t\t\r\n\t\t// \tfetch('/calculate_RSI/', {\r\n\t\t// \t\tmethod: 'POST', // or 'PUT'\r\n\t\t// \t\theaders: {\r\n\t\t// \t\t\t'Content-Type': 'application/json',\r\n\t\t// \t\t},\r\n\t\t// \t\tbody: JSON.stringify(dataWithN),\r\n\t\t// \t\t})\r\n\t\t// \t\t.then(response => response.json())\r\n\t\t// \t\t.then(dataForRSIfromAPI => {\r\n\t\t// \t\t\tcreateMomentumIndicatorsChart(dataForRSIfromAPI,momentumIndicatorsChartNode,displayRSIcheckbox,displayTSIcheckbox)\r\n\t\t// \t\t})\r\n\t\t// \t\t.catch((error) => {\r\n\t\t// \t\tconsole.error('Error:', error);\r\n\t\t// \t\t});\r\n\t\t//}\r\n\t\t\r\n\t}\r\n\r\n\tconst momentumNtradingDayOptions = [\r\n\t\t{ key: 'one', text: '1', value: 1 },\r\n\t\t{ key: 'two', text: '2', value: 2 },\r\n\t\t{ key: 'three', text: '3', value: 3 },\r\n\t\t{ key: 'four', text: '4', value: 4 },\r\n\t\t{ key: 'five', text: '5', value: 5 },\r\n\t\t{ key: 'six', text: '6', value: 6 },\r\n\t\t{ key: 'seven', text: '7', value: 7 },\r\n\t\t{ key: 'eight', text: '8', value: 8 },\r\n\t\t{ key: 'nine', text: '9', value: 9 },\r\n\t\t{ key: 'ten', text: '10', value: 10 },\r\n\t\t{ key: 'eleven', text: '11', value: 11 },\r\n\t\t{ key: 'twelve', text: '12', value: 12 },\r\n\t\t{ key: 'thirteen', text: '13', value: 13 },\r\n\t\t{ key: 'fourteen', text: '14', value: 14 },\r\n\t\t{ key: 'fifteen', text: '15', value: 15 },\r\n\t\t{ key: 'sixteen', text: '16', value: 16 },\r\n\t\t{ key: 'seventeen', text: '17', value: 17 },\r\n\t\t{ key: 'eighteen', text: '18', value: 18 },\r\n\t\t{ key: 'ninteen', text: '19', value: 19 },\r\n\t\t{ key: 'twenty', text: '20', value: 20 },\r\n\t\t{ key: 'twentyone', text: '21', value: 21 },\r\n\t\t{ key: 'twentytwo', text: '22', value: 22 },\r\n\t\t{ key: 'twentythree', text: '23', value: 23 },\r\n\t\t{ key: 'twentyfour', text: '24', value: 24 },\r\n\t\t{ key: 'twentyfive', text: '25', value: 25 },\r\n\t\t{ key: 'twentysix', text: '26', value: 26 },\r\n\t\t{ key: 'twentyseven', text: '27', value: 27 },\r\n\t\t{ key: 'twentyeight', text: '28', value: 28 },\r\n\t\t{ key: 'twentynine', text: '29', value: 29 },\r\n        { key: 'thirty', text: '30', value: 30 },\r\n        { key: 'thirtyone', text: '31', value: 31 },\r\n\t\t{ key: 'thirtytwo', text: '32', value: 32 },\r\n\t\t{ key: 'thirtythree', text: '33', value: 33 },\r\n\t\t{ key: 'thirtyfour', text: '34', value: 34 },\r\n\t\t{ key: 'thirtyfive', text: '35', value: 35 }\r\n\t]\r\n\t  \r\n    \r\n\r\n    const RSIcontentPanel = (\r\n        <div class='content active'>\r\n            <React.Fragment>\r\n            <Checkbox defaultChecked onClick={() => {\r\n                setDisplayRSIcheckbox(!displayRSIcheckbox)\r\n                }} label=\"Relative Strength Index\">\r\n            </Checkbox>\r\n            <Form.Field\r\n                control={Select}\r\n                options={momentumNtradingDayOptions}\r\n                label={{ children: 'over how many trading days?' }}\r\n                placeholder='10'\r\n                onChange ={(e,selectedOption) => {\r\n                    setNforRSI(selectedOption.value)\r\n                    }}\r\n            />\r\n            </React.Fragment>\r\n        </div>\r\n        \r\n    )\r\n\r\n    const TSIcontentPanel = (\r\n        <div class='content active'>\r\n            <React.Fragment>\r\n                <Checkbox onClick={() => {\r\n                    setDisplayTSIcheckbox(!displayTSIcheckbox)\r\n                    }} label=\"True Strength Index\">\r\n                </Checkbox>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    label={{ children: 'EMA Smoothing Period (r)' }}\r\n                    placeholder='25'\r\n                    onChange ={(e,selectedOption) => {\r\n                        setrForTSI(selectedOption.value)\r\n                        }}\r\n                />\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    label={{ children: 'EMA Smoothing Period for Smoothed Mom (s)' }}\r\n                    placeholder='13'\r\n                    onChange ={(e,selectedOption) => {\r\n                        setsForTSI(selectedOption.value)\r\n                        }}\r\n                />\r\n            </React.Fragment>\r\n        </div>\r\n        \r\n    )\r\n\r\n    const UOcontentPanel = (\r\n        <div class='content active'>\r\n            <React.Fragment>\r\n                <Checkbox onClick={() => {\r\n                    setUOcheckbox(!displayUOcheckbox)\r\n                    }} label=\"Ultimate Oscillator\">\r\n                </Checkbox>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    label={{ children: 'Short Period (s)' }}\r\n                    placeholder='7'\r\n                    onChange ={(e,selectedOption) => {\r\n                        setsForUO(selectedOption.value)\r\n                        }}\r\n                />\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    label={{ children: 'Medium Period (m)' }}\r\n                    placeholder='14'\r\n                    onChange ={(e,selectedOption) => {\r\n                        setmForUO(selectedOption.value)\r\n                        }}\r\n                />\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    label={{ children: 'Long Period (l)' }}\r\n                    placeholder='28'\r\n                    onChange ={(e,selectedOption) => {\r\n                        setlenForUO(selectedOption.value)\r\n                        }}\r\n                />\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    label={{ children: 'Weight of Short BP Average (ws)' }}\r\n                    placeholder='4'\r\n                    onChange ={(e,selectedOption) => {\r\n                        setwsForUO(selectedOption.value)\r\n                        }}\r\n                />\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    label={{ children: 'Weight of Medium BP Average (wm)' }}\r\n                    placeholder='2'\r\n                    onChange ={(e,selectedOption) => {\r\n                        setwmForUO(selectedOption.value)\r\n                        }}\r\n                />\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    label={{ children: 'Weight of Long BP Average (wl)' }}\r\n                    placeholder='1'\r\n                    onChange ={(e,selectedOption) => {\r\n                        setwlForUO(selectedOption.value)\r\n                        }}\r\n                />\r\n            </React.Fragment>\r\n        </div>\r\n        \r\n    )\r\n\r\n    const StochcontentPanel = (\r\n        <div class='content active'>\r\n            <React.Fragment>\r\n            <Checkbox onClick={() => {\r\n                setDisplayStochCheckbox(!displayStochCheckbox)\r\n                }} label=\"Stochastic Oscillator\">\r\n            </Checkbox>\r\n            <Form.Field\r\n                control={Select}\r\n                options={momentumNtradingDayOptions}\r\n                label={{ children: 'over how many trading days?' }}\r\n                placeholder='14'\r\n                onChange ={(e,selectedOption) => {\r\n                    setNForStoch(selectedOption.value)\r\n                    }}\r\n            />\r\n            <Form.Field\r\n                control={Select}\r\n                options={momentumNtradingDayOptions}\r\n                label={{ children: 'simple moving average period' }}\r\n                placeholder='3'\r\n                onChange ={(e,selectedOption) => {\r\n                    setd_nForStoch(selectedOption.value)\r\n                }}\r\n            />\r\n            </React.Fragment>\r\n        </div>\r\n        \r\n    )                    \r\n\r\n    const StochSignalcontentPanel = (\r\n        <div class='content active'>\r\n            <React.Fragment>\r\n            <Checkbox onClick={() => {\r\n                setDisplayStochSignalCheckbox(!displayStochSignalCheckbox)\r\n                }} label=\"Stochastic Oscillator Signal\">\r\n            </Checkbox>\r\n            <Form.Field\r\n                control={Select}\r\n                options={momentumNtradingDayOptions}\r\n                label={{ children: 'over how many trading days?' }}\r\n                placeholder='14'\r\n                onChange ={(e,selectedOption) => {\r\n                    setNForStochSignal(selectedOption.value)\r\n                    }}\r\n            />\r\n            <Form.Field\r\n                control={Select}\r\n                options={momentumNtradingDayOptions}\r\n                label={{ children: 'simple moving average period' }}\r\n                placeholder='3'\r\n                onChange ={(e,selectedOption) => {\r\n                    setd_nForStochSignal(selectedOption.value)\r\n                }}\r\n            />\r\n            </React.Fragment>\r\n        </div>\r\n        \r\n    )      \r\n    \r\n    \r\n    const WRcontentPanel = (\r\n        <div class='content active'>\r\n            <React.Fragment>\r\n            <Checkbox onClick={() => {\r\n                setDisplayWR(!displayWR)\r\n                }} label=\"Williams %R\">\r\n            </Checkbox>\r\n            <Form.Field\r\n                control={Select}\r\n                options={momentumNtradingDayOptions}\r\n                label={{ children: 'Lookback Period' }}\r\n                placeholder='14'\r\n                onChange ={(e,selectedOption) => {\r\n                    setLBPForWR(selectedOption.value)\r\n                    }}\r\n            />\r\n            </React.Fragment>\r\n        </div>\r\n    )\r\n\r\n    const AOcontentPanel = (\r\n        <div class='content active'>\r\n            <React.Fragment>\r\n                <Checkbox onClick={() => {\r\n                    setDisplayAO(!displayAO)\r\n                    }} label=\"Awesome Oscillator\">\r\n                </Checkbox>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    label={{ children: 'Short Period (s)' }}\r\n                    placeholder='5'\r\n                    onChange ={(e,selectedOption) => {\r\n                        setSForAO(selectedOption.value)\r\n                        }}\r\n                />\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    label={{ children: 'Long Period (len)' }}\r\n                    placeholder='34'\r\n                    onChange ={(e,selectedOption) => {\r\n                        setLenForAO(selectedOption.value)\r\n                        }}\r\n                />\r\n            </React.Fragment>\r\n        </div> \r\n    )\r\n\r\n    const KamacontentPanel = (\r\n        <div class='content active'>\r\n            <React.Fragment>\r\n                <Checkbox onClick={() => {\r\n                    setDisplayKama(!displayKama)\r\n                    }} label=\"Kaufman's Adaptive Moving Average (KAMA)\">\r\n                </Checkbox>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    label={{ children: 'number of periods for the efficiency ratio (n)' }}\r\n                    placeholder='10'\r\n                    onChange ={(e,selectedOption) => {\r\n                        setNForKama(selectedOption.value)\r\n                        }}\r\n                />\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    label={{ children: 'number of periods for the fastest EMA constant' }}\r\n                    placeholder='2'\r\n                    onChange ={(e,selectedOption) => {\r\n                        setPow1ForKama(selectedOption.value)\r\n                        }}\r\n                />\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    label={{ children: 'number of periods for the slowest EMA constant' }}\r\n                    placeholder='30'\r\n                    onChange ={(e,selectedOption) => {\r\n                        setPow2ForKama(selectedOption.value)\r\n                        }}\r\n                />\r\n            </React.Fragment>\r\n        </div> \r\n    )\r\n\r\n    const ROCcontentPanel = (\r\n        <div class='content active'>\r\n            <React.Fragment>\r\n                <Checkbox onClick={() => {\r\n                    setDisplayROC(!displayROC)\r\n                    }} label=\"Rate of Change (ROC) Indicator\">\r\n                </Checkbox>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    label={{ children: 'number of periods (n)' }}\r\n                    placeholder='12'\r\n                    onChange ={(e,selectedOption) => {\r\n                        setNForROC(selectedOption.value)\r\n                        }}\r\n                />\r\n            </React.Fragment>\r\n        </div> \r\n    )\r\n\r\n    const level1MomentumMenuPanels = [\r\n        { key: 'RSI', title: 'Relative Strength Index', content: RSIcontentPanel, index: 0 },\r\n        { key: 'TSI', title: 'True Strength Index', content: TSIcontentPanel, index: 1 },\r\n        { key: 'UO', title: 'Ultimate Oscillator', content: UOcontentPanel, index: 2 },\r\n        { key: 'Stoch', title: 'Stochastic Oscillator', content: StochcontentPanel, index: 3 },\r\n        { key: 'StochSignal', title: 'Stochastic Oscillator Signal', content: StochSignalcontentPanel, index: 4 },\r\n        { key: 'WR', title: 'Williams %R', content: WRcontentPanel, index: 5 },\r\n        { key: 'AO', title: 'Awesome Oscillator', content: AOcontentPanel, index: 6 },\r\n        { key: 'Kama', title: 'Kaufmans Adaptive Moving Average', content: KamacontentPanel, index: 7 },\r\n        { key: 'ROC', title: 'Rate-of-Change (ROC) indicator', content: ROCcontentPanel, index: 8 },\r\n    ]\r\n\r\n    // function handleMomentumItemClick(e,itemProps) {\r\n    //     const { index } = itemProps\r\n    //     const { activeIndex } = activeMomentumMenuItem\r\n    //     const newIndex = activeIndex === index ? -1 : index\r\n    //     setActiveMomentumMenuItem({ activeIndex: newIndex })\r\n    // }\r\n\r\n    const Level1MomentumContent = (\r\n            <div className=\"no-padding\">\r\n              {/* <Accordion.Accordion panels={level1MomentumMenuPanels} onTitleClick={handleMomentumItemClick(e,itemProps)} value={activeIndex} /> */}\r\n              <Accordion.Accordion panels={level1MomentumMenuPanels} className='no-padding'/>\r\n            </div>\r\n        )\r\n\r\n    const rootPanels = [\r\n            { key: 'panel-1-Momentum', title: 'Momentum Indicators', content: { content: Level1MomentumContent } },\r\n            //{ key: 'panel-2', title: 'Level 2', content: { content: Level2Content } },\r\n        ]\r\n\t//console.log(NforRSI)\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n            <Grid celled>\r\n                <Grid.Column width = {4}>\r\n                    <Grid.Row>\r\n                        <Grid.Row stretched>\r\n                            <Segment>\r\n                                <Form>\r\n                                    <Input \r\n                                        placeholder=\"Add ticker ex) APPL\" \r\n                                        value={ticker}\r\n                                        name='ticker'\r\n                                        onChange={(e) => setTicker(e.target.value)}\r\n                                        isClearable\r\n                                    />\r\n                                    <Button animated primary onClick={handleTickerFormSubmit}>\r\n                                        <Button.Content visible>Go!</Button.Content>\r\n                                        <Button.Content hidden>\r\n                                            <Icon name='arrow right' />\r\n                                        </Button.Content>\r\n                                    </Button>\r\n                                </Form>\r\n                            </Segment>\r\n                            <Segment>\r\n                                <Menu>\r\n                                    <Menu.Item\r\n                                    name='5d'\r\n                                    active={activeItemDateMenu === '5d'}\r\n                                    onClick={() => handleDateClick(8, '5d')}\r\n                                    >\r\n                                    5 d\r\n                                    </Menu.Item>\r\n                                    <Menu.Item\r\n                                    name='1m'\r\n                                    active={activeItemDateMenu === '1m'}\r\n                                    onClick={() => handleDateClick(30, '1m')}\r\n                                    >\r\n                                    1 m\r\n                                    </Menu.Item>\r\n                                    <Menu.Item\r\n                                    name='6m'\r\n                                    active={activeItemDateMenu === '6m'}\r\n                                    onClick={() => handleDateClick(180, '6m')}\r\n                                    >\r\n                                    6 m\r\n                                    </Menu.Item>\r\n                                    <Menu.Item\r\n                                    name='1y'\r\n                                    active={activeItemDateMenu === '1y'}\r\n                                    onClick={() => handleDateClick(365, '1y')}\r\n                                    >\r\n                                    1 y\r\n                                    </Menu.Item>\r\n                                \r\n                                </Menu>\r\n                            </Segment>\r\n                            <Segment>\r\n                                Custom Dates\r\n                                <br/>Start: <DatePicker \r\n                                selected={startDate} \r\n                                maxDate={new Date()} \r\n                                onChange={date => handleStartDateClick(date)}\r\n                                placeholderText='MM/DD/YYYY'\r\n                                isClearable\r\n                                showYearDropdown\r\n                                scrollableMonthYearDropdown />\r\n                                \r\n                                <br/>  End:  <DatePicker \r\n                                selected={endDate} \r\n                                maxDate={new Date()}\r\n                                onChange={date => handleEndDateClick(date)}\r\n                                placeholderText='MM/DD/YYYY'\r\n                                isClearable\r\n                                showYearDropdown\r\n                                scrollableMonthYearDropdown />\r\n                            <br/> \r\n                            </Segment>\r\n                            <Segment>\r\n                                <Form>\r\n                                    <Form.Field>\r\n                                        {/* Line <Radio toggle value={displayPriceChart} checked={!displayPriceChart} onChange={handlePriceClick}/> Candle Stick */}\r\n                                        <Button toggle active={displayPriceChart} onClick={handlePriceClickLine}>\r\n                                            Line Chart\r\n                                        </Button>\r\n                                        <Button toggle active={!displayPriceChart} onClick={handlePriceClickCandle}>\r\n                                            Candlecd Stick\r\n                                        </Button>\r\n                                    </Form.Field>\r\n                                </Form>\r\n                            {/* <Button toggle active={displayPriceChart} onClick={setDisplayPriceChart(!displayPriceChart)}>\r\n                                Line Chart\r\n                            </Button>\r\n                            <Button toggle active={!displayPriceChart} onClick={setDisplayPriceChart(!displayPriceChart)}>\r\n                                Candle Stick\r\n                            </Button> */}\r\n                            </Segment>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <Accordion defaultActiveIndex={0} panels={rootPanels} styled />\r\n                            {/* <Accordion>\r\n                                <Accordion.Title\r\n                                    onClick={() => {\r\n                                        setActiveMomentumMenuItem(!activeMomentumMenuItem)\r\n                                    }}\r\n                                >\r\n                                    <h3>Momentum Indicators {activeMomentumMenuItem ? \"-\" : \"+\"}</h3>\r\n                                </Accordion.Title>\r\n                                <Accordion.Content active={activeMomentumMenuItem}>\r\n                                    <React.Fragment>\r\n                                    <Accordion>\r\n                                        <Accordion.Title\r\n                                        onClick={() => {\r\n                                            setActiveRSIMenuItem(!activeRSIMenuItem)\r\n                                        }}\r\n                                        >\r\n                                        <Accordion.Content active={activeRSIMenuItem}>\r\n                                            <React.Fragment>\r\n                                            <Checkbox defaultChecked onClick={() => {\r\n                                                setDisplayRSIcheckbox(!displayRSIcheckbox)\r\n                                                }} label=\"Relative Strength Index\">\r\n                                            </Checkbox>\r\n                                                <Form.Field\r\n                                                    control={Select}\r\n                                                    options={momentumNtradingDayOptions}\r\n                                                    label={{ children: 'over how many trading days?' }}\r\n                                                    placeholder='10'\r\n                                                    onChange ={(e,selectedOption) => {\r\n                                                        console.log(selectedOption.value)\r\n                                                        setNforRSI(selectedOption.value)\r\n                                                        }}\r\n                                                />\r\n                                                </React.Fragment>\r\n                                            </Accordion.Content>\r\n                                        </Accordion>\r\n                                    </React.Fragment>\r\n                                    \r\n                                    \r\n                                    <React.Fragment>\r\n                                        <Checkbox onClick={() => {\r\n                                            setDisplayTSIcheckbox(!displayTSIcheckbox)\r\n                                            }} label=\"True Strength Index\">\r\n                                        </Checkbox>\r\n                                        <Form.Field\r\n                                            control={Select}\r\n                                            options={momentumNtradingDayOptions}\r\n                                            label={{ children: 'EMA Smoothing Period (r)' }}\r\n                                            placeholder='25'\r\n                                            onChange ={(e,selectedOption) => {\r\n                                                console.log(selectedOption.value)\r\n                                                setrForTSI(selectedOption.value)\r\n                                                }}\r\n                                        />\r\n                                        <Form.Field\r\n                                            control={Select}\r\n                                            options={momentumNtradingDayOptions}\r\n                                            label={{ children: 'EMA Smoothing Period for Smoothed Mom (s)' }}\r\n                                            placeholder='13'\r\n                                            onChange ={(e,selectedOption) => {\r\n                                                console.log(selectedOption.value)\r\n                                                setsForTSI(selectedOption.value)\r\n                                                }}\r\n                                        />\r\n                                    </React.Fragment>\r\n                                    <React.Fragment>\r\n                                        <Checkbox onClick={() => {\r\n                                            setUOcheckbox(!displayUOcheckbox)\r\n                                            }} label=\"Ultimate Oscillator\">\r\n                                        </Checkbox>\r\n                                        <Form.Field\r\n                                            control={Select}\r\n                                            options={momentumNtradingDayOptions}\r\n                                            label={{ children: 'Short Period (s)' }}\r\n                                            placeholder='7'\r\n                                            onChange ={(e,selectedOption) => {\r\n                                                console.log(selectedOption.value)\r\n                                                setsForUO(selectedOption.value)\r\n                                                }}\r\n                                        />\r\n                                        <Form.Field\r\n                                            control={Select}\r\n                                            options={momentumNtradingDayOptions}\r\n                                            label={{ children: 'Medium Period (m)' }}\r\n                                            placeholder='14'\r\n                                            onChange ={(e,selectedOption) => {\r\n                                                console.log(selectedOption.value)\r\n                                                setmForUO(selectedOption.value)\r\n                                                }}\r\n                                        />\r\n                                        <Form.Field\r\n                                            control={Select}\r\n                                            options={momentumNtradingDayOptions}\r\n                                            label={{ children: 'Long Period (l)' }}\r\n                                            placeholder='28'\r\n                                            onChange ={(e,selectedOption) => {\r\n                                                console.log(selectedOption.value)\r\n                                                setlenForUO(selectedOption.value)\r\n                                                }}\r\n                                        />\r\n                                        <Form.Field\r\n                                            control={Select}\r\n                                            options={momentumNtradingDayOptions}\r\n                                            label={{ children: 'Weight of Short BP Average (ws)' }}\r\n                                            placeholder='4'\r\n                                            onChange ={(e,selectedOption) => {\r\n                                                console.log(selectedOption.value)\r\n                                                setwsForUO(selectedOption.value)\r\n                                                }}\r\n                                        />\r\n                                        <Form.Field\r\n                                            control={Select}\r\n                                            options={momentumNtradingDayOptions}\r\n                                            label={{ children: 'Weight of Medium BP Average (wm)' }}\r\n                                            placeholder='2'\r\n                                            onChange ={(e,selectedOption) => {\r\n                                                console.log(selectedOption.value)\r\n                                                setwmForUO(selectedOption.value)\r\n                                                }}\r\n                                        />\r\n                                        <Form.Field\r\n                                            control={Select}\r\n                                            options={momentumNtradingDayOptions}\r\n                                            label={{ children: 'Weight of Long BP Average (wl)' }}\r\n                                            placeholder='1'\r\n                                            onChange ={(e,selectedOption) => {\r\n                                                console.log(selectedOption.value)\r\n                                                setwlForUO(selectedOption.value)\r\n                                                }}\r\n                                        />\r\n                                    </React.Fragment>\r\n                                </Accordion.Content>\r\n                            </Accordion> */}\r\n                        </Grid.Row>\r\n                    </Grid.Row>\r\n                    \r\n                </Grid.Column>\r\n                <Grid.Column width = {12}>\r\n                    \r\n                    \r\n                        \r\n                    <React.Fragment>\r\n                        <svg ref={stockPriceLineChartNode}></svg>\r\n                    </React.Fragment>\r\n                    <React.Fragment>\r\n                        <svg ref={momentumIndicatorsChartNode}></svg>\r\n                    </React.Fragment>\r\n                    <React.Fragment>\r\n                        <svg ref={showVolumeNode}></svg>\r\n                    </React.Fragment>\r\n                    \r\n                    <Accordion>                          \r\n                        <Accordion.Title\r\n                            onClick={() => {\r\n                                setActiveEarningsMenuItem(!activeEarningsMenuItem)\r\n                            }}\r\n                        >\r\n                            <h3>Earnings {activeEarningsMenuItem ? \"-\" : \"+\"}</h3>\r\n                        </Accordion.Title>\r\n                        <Accordion.Content active={activeEarningsMenuItem}>\r\n                            <React.Fragment>\r\n                                <svg ref={earningsChartNode}></svg>\r\n                            </React.Fragment>\r\n                        </Accordion.Content>\r\n                        <Accordion.Title\r\n                            onClick={() => {\r\n                                setActiveFinancialsMenuItem(!activeFinancialsMenuItem)\r\n                            }}\r\n                        >\r\n                            <h3>Financials {activeFinancialsMenuItem ? \"-\" : \"+\"}</h3>\r\n                        </Accordion.Title>\r\n                        <Accordion.Content active={activeFinancialsMenuItem}>{Object.keys(financials).map(function(key,index) {\r\n                                if (financials.length > 0) {\r\n                                return(\r\n                                <Segment.Group>\r\n                                    <Segment.Group horizontal>\r\n                                        <Segment>Gross Profit (M$): {financials[key].grossProfit}</Segment>\r\n                                        <Segment>Operating Revenue (M$): {financials[key].operatingRevenue}</Segment>\r\n                                        <Segment>Total Revenue (M$): {financials[key].totalRevenue}</Segment>\r\n                                    </Segment.Group>\r\n                                    <Segment.Group horizontal>\r\n                                        <Segment>Total Assets (M$): {financials[key].totalAssets}</Segment>\r\n                                        <Segment>Total Liabilities (M$): {financials[key].totalLiabilities}</Segment>\r\n                                        <Segment>Total Cash (M$): {financials[key].totalCash}</Segment>\r\n                                    </Segment.Group>\r\n                                    <Segment.Group horizontal>\r\n                                        <Segment>Net Income (M$): {financials[key].netIncome}</Segment>\r\n                                        <Segment>Research and Development (M$): {financials[key].researchAndDevelopment}</Segment>\r\n                                        <Segment>Cash Flow (M$): {financials[key].cashFlow}</Segment>\r\n                                    </Segment.Group>\r\n                                    <Segment.Group horizontal>\r\n                                        <Segment>Total Debt (M$): {financials[key].totalDebt}</Segment>\r\n                                        <Segment>Short Term Debt (M$): {financials[key].shortTermDebt}</Segment>\r\n                                        <Segment>Long Term Debt (M$): {financials[key].longTermDebt}</Segment>\r\n                                    </Segment.Group>\r\n                                </Segment.Group>\r\n                            )}}\r\n                            )}\r\n                        </Accordion.Content>\r\n                    </Accordion>\r\n                </Grid.Column>\r\n            </Grid>    \r\n        </div>\t\r\n\t);\r\n} ","import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Container } from \"semantic-ui-react\"\nimport { StockData } from './components/StockData';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      {/* <Container style={{marginTop: 40}}>\n        <StockData />\n      </Container> */}\n      <StockData />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}