{"version":3,"sources":["logo.svg","components/charts/volumeBarChart.js","components/charts/earningChart.js","components/charts/stockPriceLineChart.js","components/StockData.js","components/charts/momentumIndicatorsChart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createVolumeBarChart","data","showVolumeNode","svg","select","current","selectAll","remove","margin","parseDate","d3","attr","innerHeight","x","scaleBand","domain","range","date","length","filter","d","getUTCDay","padding","y","scaleLinear","volume","rangeRound","append","call","g","tickValues","every","tickFormat","ticks","join","bandwidth","open","close","node","createEarningsChart","earningsChartNode","innerWidth","yScale","Math","min","consensusEPS","actualEPS","max","xScale","map","fiscalPeriod","enter","createStockPriceLineChart","stockPriceLineChartNode","low","high","clone","lineGenerator","line","curve","curveLinear","StockData","currentDate","Date","setTime","getTime","useState","startDate","setStartDate","endDate","setEndDate","ticker","setTicker","financials","setFinancials","earnings","setEarnings","activeItemDateMenu","setActiveItemDateMenu","activeFinancialsMenuItem","setActiveFinancialsMenuItem","activeEarningsMenuItem","setActiveEarningsMenuItem","activeMomentumMenuItem","setActiveMomentumMenuItem","stockData","setStockData","displayRSIcheckbox","setDisplayRSIcheckbox","NforRSI","setNforRSI","useRef","momentumIndicatorsChartNode","convertDatesToString","initialDate","String","getFullYear","getMonth","getDate","getAndSetStockData","stockTicker","theStartDate","theEndDate","startDateConverted","endDateConverted","fetch","then","response","json","createMomentumIndicatorsChartFunction","getAndSetFinancials","getAndSetEarnings","handleDateClick","minusDays","name","dateOffset","dataWithN","method","headers","body","JSON","stringify","dataForRSIfromAPI","console","log","rsi","createMomentumIndicatorsChart","catch","error","useEffect","Menu","Form","Input","placeholder","value","onChange","e","target","isClearable","Button","animated","primary","onClick","Content","visible","hidden","Icon","Item","active","position","selected","maxDate","handleStartDateClick","placeholderText","showYearDropdown","scrollableMonthYearDropdown","handleEndDateClick","Fragment","ref","Accordion","Title","Checkbox","defaultChecked","label","Field","control","Select","options","key","text","children","selectedOption","Object","keys","index","Segment","Group","horizontal","grossProfit","operatingRevenue","totalRevenue","totalAssets","totalLiabilities","totalCash","netIncome","researchAndDevelopment","cashFlow","totalDebt","shortTermDebt","longTermDebt","App","className","Container","style","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"js/main.559eeefc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/logo.5d5d9eef.svg\";","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { scaleLinear, scaleBand, scalePoint, tickFormat } from 'd3-scale'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\n\r\nexport function createVolumeBarChart(data,showVolumeNode) {\r\n    const svg = select(showVolumeNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n    const margin = ({top: 30, right: 30, bottom: 50, left: 40})\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    const height = 150;\r\n    const width = 700;\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    const x = scaleBand()\r\n        .domain(d3.utcDay\r\n            .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n            .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2)\r\n\r\n    // d3.min(data, d => d.volume)-(d3.max(data, d => d.volume)-d3.min(data, d => d.volume))/10\r\n    const y = scaleLinear()\r\n        .domain([0, d3.max(data, d => d.volume)])\r\n        .rangeRound([0,innerHeight])\r\n    //console.log(y.domain())\r\n    const xAxis = g => g\r\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .tickValues(d3.utcMonday\r\n                .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n            .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n        .call(g => g.select(\".domain\").remove())\r\n    \r\n\r\n    const yAxis = g => g\r\n        .attr(\"transform\", `translate(${margin.left},0)`)\r\n        .call(d3.axisLeft(y).ticks(0))\r\n        //     .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n        // .call(g => g.selectAll(\".tick line\").clone()\r\n        //     .attr(\"stroke-width\", 0))\r\n            //.attr(\"x2\", width - margin.left - margin.right))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    // yAxis.select('.domain')\r\n    //     .attr('stroke-width', 0);\r\n\r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n        \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n\r\n    const g = svg.append(\"g\")\r\n        // .attr(\"stroke\", \"black\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n        .attr(\"transform\", data => `translate(${x(parseDate(data.date))},0)`);\r\n\r\n    g.append(\"rect\")\r\n        .attr('width', d=>(x.bandwidth()+x.padding()))\r\n        .attr('height',d=>y(d.volume))\r\n        .attr(\"fill\", d => d.open > d.close ? d3.schemeSet1[0]\r\n            : d.close > d.open ? d3.schemeSet1[2]\r\n            : d3.schemeSet1[8])\r\n        .attr('transform',`translate(${x.bandwidth()},${innerHeight})  rotate(180)`)\r\n\r\n    return svg.node();\r\n}","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { scaleLinear, scaleBand, scalePoint } from 'd3-scale'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\n\r\nexport function createEarningsChart(data,earningsChartNode) {\r\n    // https://www.youtube.com/watch?v=UDDGcgxficY \r\n    // stopped video at 3:41\r\n    // https://observablehq.com/d/8974f775c6a0ae5d\r\n    const svg = select(earningsChartNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n    const margin = ({top: 30, right: 30, bottom: 50, left: 40})\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    const xLabel = 'Fiscal Period';\r\n    const yLabel = 'Earnings Per Share'\r\n    const width = 700;\r\n    const height = 350;\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    const yScale = scaleLinear()\r\n        .domain([d3.min(data,d => Math.min(d.consensusEPS,d.actualEPS)),d3.max(data,d => Math.max(d.consensusEPS,d.actualEPS))])\r\n        .range([innerHeight,0])\r\n\r\n    const yAxis = d3.axisLeft(yScale)\r\n\r\n    const xScale = scaleBand()\r\n        .domain(data.map(d => d.fiscalPeriod))\r\n        .range([0,innerWidth])\r\n        \r\n    \r\n    const xAxis = d3.axisBottom(xScale);\r\n\r\n    const g = svg.append('g')\r\n        .attr('transform',`translate(${margin.left},${margin.top})`);\r\n\r\n    g.append('g').call(d3.axisLeft(yScale))\r\n        .select(\".domain\").remove();\r\n    g.append('g').call(d3.axisBottom(xScale))\r\n        .attr('transform',`translate(0,${innerHeight})`)\r\n        .select(\".domain\").remove();\r\n\r\n    g.selectAll('circle')\r\n        .data(data)\r\n        .enter()\r\n        .append('circle')\r\n            .attr('cx', d => ((xScale.bandwidth()/2)+xScale(d.fiscalPeriod)))\r\n            .attr('cy', d => yScale(d.consensusEPS))\r\n            .attr('r',30)\r\n            .attr('fill','green')\r\n            .attr('width', xScale.bandwidth())\r\n        \r\n    return svg.node();\r\n\r\n}","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport * as d3 from \"d3\"\r\nimport {\r\n    select,\r\n    csv,\r\n    scaleLinear,\r\n    scaleBand,\r\n    scaleTime,\r\n    extent,\r\n    axisLeft,\r\n    axisBottom,\r\n    line,\r\n    curveBasis,\r\n    curveLinear\r\n  } from 'd3';\r\n\r\nexport function createStockPriceLineChart(data,stockPriceLineChartNode) {\r\n    \r\n    const svg = select(stockPriceLineChartNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n\r\n    const height = 350;\r\n    const width = 700;\r\n    //const margin = ({top: 20, right: 30, bottom: 30, left: 80})\r\n    //const formatSecond = d3.timeFormat(\":%S\")\r\n    function parseSec(date) {\r\n        return new Date(date * 1000);\r\n    }\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    //new Date(secs * 1000);\r\n    const margin = ({top: 50, right: 30, bottom: 50, left: 40})\r\n    //const parseDate = d3.utcParse(\"%s\")// d3.utcParse(\"%a %b %d %Y %X %LZ\")// d3.utcParse(\"%Y-%m-%d\")\r\n    //console.log(parseDate((data[data.length - 1].date)) + 1)\r\n    const x = scaleBand()\r\n        .domain(d3.utcDay\r\n            .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n            .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2)\r\n\r\n    const y = scaleLinear()\r\n        .domain([d3.min(data, d => d.low), d3.max(data, d => d.high)])\r\n        .rangeRound([height - margin.bottom, margin.top])\r\n\r\n    \r\n\r\n    const xAxis = g => g\r\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .tickValues(d3.utcMonday\r\n                .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n            .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n        .call(g => g.select(\".domain\").remove())\r\n    \r\n\r\n    const yAxis = g => g\r\n        .attr(\"transform\", `translate(${margin.left},0)`)\r\n        .call(d3.axisLeft(y)\r\n            .tickFormat(d3.format(\"$~f\"))\r\n            .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n        .call(g => g.selectAll(\".tick line\").clone()\r\n            .attr(\"stroke-opacity\", 0)\r\n            .attr(\"x2\", width - margin.left - margin.right))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n\r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n        \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n    \r\n    const g = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"black\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n        // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n    const lineGenerator = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.close))\r\n        .curve(curveLinear);\r\n\r\n    g.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr('d', lineGenerator(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',5)\r\n\r\n    // const g2 = svg.append(\"g\")\r\n    //     .attr(\"stroke-linecap\", \"round\")\r\n    //     .attr(\"stroke\", \"red\")\r\n    //     .selectAll(\"g\")\r\n    //     .data(data)\r\n    //     .join(\"g\")\r\n    //     // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n    \r\n    // const lineGenerator2 = line()\r\n    //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n    //     .y(d => y(d.rsi))\r\n    //     .curve(curveLinear);\r\n\r\n    // g2.append('path')\r\n    //     .attr('class', 'line-path')\r\n    //     .attr('d', lineGenerator2(data))\r\n    //     .attr('fill','none')\r\n    //     .attr('stroke-width',5)\r\n    return svg.node();\r\n}","import React, {useState, useEffect, useRef} from 'react';\r\nimport '../App.css'\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { List, Header, Form, Input, Button, Container, Icon, Menu, Segment, Accordion, Checkbox, Select } from \"semantic-ui-react\"\r\nimport { createCandleStickChart } from './charts/candleStickChart.js'\r\nimport { createVolumeBarChart } from './charts/volumeBarChart.js'\r\nimport { createEarningsChart } from './charts/earningChart.js'\r\nimport { createStockPriceLineChart } from './charts/stockPriceLineChart';\r\nimport { createMomentumIndicatorsChart } from './charts/momentumIndicatorsChart'\r\n\r\nexport const StockData = () => {\r\n\tvar currentDate = new Date();\r\n\tvar dateOffset = (24*60*60*1000) * 182; \r\n\tvar newDate = currentDate.setTime(currentDate.getTime() - dateOffset);\r\n\t\r\n\tconst [startDate, setStartDate] = useState(currentDate);\r\n\tconst [endDate, setEndDate] = useState(new Date());\r\n\tconst [ticker, setTicker] = useState('AAPL');\r\n\tconst [financials, setFinancials] = useState([])\r\n\tconst [earnings, setEarnings] = useState([])\r\n\tconst [activeItemDateMenu, setActiveItemDateMenu] = useState('');\r\n\tconst [activeFinancialsMenuItem, setActiveFinancialsMenuItem] = useState()\r\n\tconst [activeEarningsMenuItem, setActiveEarningsMenuItem] = useState()\r\n\tconst [activeMomentumMenuItem, setActiveMomentumMenuItem] = useState()\r\n\tconst [stockData, setStockData] = useState([]);\r\n\t//getAndSetStockData(ticker,currentDate,endDate);\r\n\t\r\n\tconst [displayRSIcheckbox, setDisplayRSIcheckbox] = useState(true)\r\n\tconst [NforRSI, setNforRSI] = useState(10)\r\n\t// const [dataForRSI, setDataForRSI] = useState([])\r\n\t// if (stockData.length > 0) {\r\n\t// \tgetAndSetRSIdata(stockData);\r\n\t// \tconsole.log(dataForRSI)\r\n\t// }\r\n\t\r\n\tconst candleChartNode = useRef(null);\r\n\tconst earningsChartNode = useRef(null);\r\n\tconst showVolumeNode = useRef(null);\r\n\tconst stockPriceLineChartNode = useRef(null);\r\n\tconst momentumIndicatorsChartNode = useRef(null);\r\n\r\n\tif (stockData.length < 1 && earnings.length < 1){\r\n\t\tgetAndSetStockData(ticker,startDate,endDate)\r\n\t\tgetAndSetEarnings(ticker)\r\n\t}\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (stockData.length > 0) {\r\n\t\t\tcreateStockPriceLineChart(stockData,stockPriceLineChartNode);\r\n\t\t\tcreateVolumeBarChart(stockData,showVolumeNode);\r\n\t\t\tcreateMomentumIndicatorsChartFunction(NforRSI)\r\n\t\t}\r\n\t\t// if (dataForRSI.length > 0) {\r\n\t\t// \tcreateMomentumIndicatorsChartFunction(momentumIndicatorsChartNode,displayRSIcheckbox,NforRSI)\r\n\t\t// }\r\n\t\tif (earnings.length > 0) {\r\n\t\t\t//console.log(earnings)\r\n\t\t\tcreateEarningsChart(earnings,earningsChartNode)\r\n\t\t}\r\n\t},[stockData,displayRSIcheckbox,NforRSI])\r\n\r\n\t// function getAndSetStockData(stockTicker,theStartDate,theEndDate) {\r\n\t// \tfetch(\"/get_stock_data/\"+stockTicker+\"/\"+theStartDate.getFullYear()+\"/\"+(theStartDate.getMonth()+1)+\"/\"+theStartDate.getDate()+\"/\"+theEndDate.getFullYear()+\"/\"+(theEndDate.getMonth()+1)+\"/\"+theEndDate.getDate()).then(response => \r\n\t// \t\tresponse.json().then(data => {\r\n\t// \t\t\tsetStockData(data);\r\n\t// \t\t})\r\n\t// \t)\r\n\t// }\r\n\tfunction convertDatesToString(initialDate) {\r\n\t\tconst convertedDate = String(initialDate.getFullYear())+\"-\"+String(initialDate.getMonth() + 1)+\"-\"+String(initialDate.getDate())\r\n\t\treturn convertedDate\r\n\t}\r\n\r\n\tfunction getAndSetStockData(stockTicker,theStartDate,theEndDate) {\r\n\t\t// const startDateConvertedSecs = parseInt(theStartDate.getTime() / 1000);\r\n\t\t// const endDateConvertedSecs = parseInt(theEndDate.getTime() / 1000);\r\n\t\tconst startDateConverted = convertDatesToString(theStartDate) // String(theStartDate.getFullYear())+\"-\"+String(theStartDate.getMonth() + 1)+\"-\"+String(theStartDate.getDate())\r\n\t\tconst endDateConverted = convertDatesToString(theEndDate) //String(theEndDate.getFullYear())+\"-\"+String(theEndDate.getMonth() + 1)+\"-\"+String(theEndDate.getDate())\r\n\t\tfetch(\"/get_stock_data/\"+stockTicker+\"/\"+startDateConverted+\"/\"+endDateConverted).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tif (stockData.length < 1) {\r\n\t\t\t\t\tcreateStockPriceLineChart(data,stockPriceLineChartNode);\r\n\t\t\t\t\tcreateVolumeBarChart(data,showVolumeNode);\r\n\t\t\t\t\tcreateMomentumIndicatorsChartFunction();\r\n\t\t\t\t}\r\n\t\t\t\tsetStockData(data);\r\n\r\n\t\t\t})\r\n\t\t)\r\n\t}\r\n\r\n\tfunction getAndSetFinancials(stockTicker) {\r\n\t\tfetch(\"/get_financial_data/\"+stockTicker).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tsetFinancials(data)\r\n\t\t\t}))\r\n\t}\r\n\r\n\tfunction getAndSetEarnings(stockTicker) {\r\n\t\tfetch(\"/get_earnings_data/\"+stockTicker).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tif (earnings.length < 1) {\r\n\t\t\t\t\tcreateEarningsChart(data,earningsChartNode)\r\n\t\t\t\t}\r\n\t\t\t\tsetEarnings(data)\r\n\t\t\t}))\r\n\t}\r\n\r\n\tfunction handleStartDateClick(date) {\r\n\t\tif (date !== startDate) {\r\n\t\t\tsetStartDate(date)\r\n\t\t\t\r\n\t\t}\r\n\t\tgetAndSetStockData(ticker,date,endDate)\r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\t}\r\n\t\r\n\tfunction handleDateClick(minusDays, name) {\r\n\t\tsetActiveItemDateMenu(name)\r\n\t\t\r\n\t\tvar currentDate = new Date();\r\n\t\tvar dateOffset = (24*60*60*1000) * minusDays; \r\n\t\tvar newDate = currentDate.setTime(currentDate.getTime() - dateOffset);\r\n\t\tsetStartDate(currentDate);\r\n\t\tgetAndSetStockData(ticker,currentDate,endDate) \r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\t}\r\n\r\n\tfunction handleEndDateClick(date) {\r\n\t\tsetEndDate(date)\r\n\t\tgetAndSetStockData(ticker,startDate,date) \r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\r\n\t}\r\n\r\n\tfunction handleTickerFormSubmit() {\r\n\t\tgetAndSetStockData(ticker,startDate,endDate) \r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\t}\r\n\r\n\tfunction createMomentumIndicatorsChartFunction(NforRSI) {\r\n\t\t\r\n\t\tconst dataWithN = [...stockData,{'N':NforRSI}]\r\n\t\tif (dataWithN.length > 1) {\r\n\t\t\t\r\n\t\t\tfetch('/calculate_RSI/', {\r\n\t\t\t\tmethod: 'POST', // or 'PUT'\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(dataWithN),\r\n\t\t\t\t})\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(dataForRSIfromAPI => {\r\n\t\t\t\t\tcreateMomentumIndicatorsChart(dataForRSIfromAPI,momentumIndicatorsChartNode,displayRSIcheckbox)\r\n\t\t\t\t\t\r\n\t\t\t\t// if (dataForRSI.length < 1) {\r\n\t\t\t\t// \tcreateMomentumIndicatorsChart(dataForRSIfromAPI,momentumIndicatorsChartNode,displayRSIcheckbox,NforRSI)\r\n\t\t\t\t// }\r\n\t\t\t\t// setDataForRSI(dataForRSIfromAPI)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\t// function getAndSetRSIdata(stockDataForRSI) {\r\n\r\n\t// \t// Creating a XHR object \r\n\t// \tlet xhr = new XMLHttpRequest(); \r\n\t// \tlet url = '/calculate_RSI/'; \r\n\t\r\n\t// \t// open a connection \r\n\t// \txhr.open('POST', url, false); \r\n\t\r\n\t// \t// Set the request header i.e. which type of content you are sending \r\n\t// \txhr.setRequestHeader(\"Content-Type\", \"application/json\"); \r\n\t\r\n\t// \t// Create a state change callback \r\n\t// \txhr.onload = function () { \r\n\t// \t\tif (xhr.readyState === 4 && xhr.status === 200) { \r\n\t\r\n\t// \t\t\t// Print received data from server \r\n\t// \t\t\tconst result = xhr.response; \r\n\t// \t\t\tsetDataForRSI(result)\r\n\t\t\t\r\n\t// \t\t} \r\n\t// \t}; \r\n\t\r\n\t// \t// Converting JSON data to string \r\n\t// \tconst data = JSON.stringify(stockDataForRSI); \r\n\t// \tconsole.log(data)\r\n\t// \t// Sending data with the request \r\n\t// \txhr.send(data); \r\n\t// }\r\n\t\r\n\tconst momentumNtradingDayOptions = [\r\n\t\t{ key: 'two', text: '2', value: 2 },\r\n\t\t{ key: 'three', text: '3', value: 3 },\r\n\t\t{ key: 'four', text: '4', value: 4 },\r\n\t\t{ key: 'five', text: '5', value: 5 },\r\n\t\t{ key: 'six', text: '6', value: 6 },\r\n\t\t{ key: 'seven', text: '7', value: 7 },\r\n\t\t{ key: 'eight', text: '8', value: 8 },\r\n\t\t{ key: 'nine', text: '9', value: 9 },\r\n\t\t{ key: 'ten', text: '10', value: 10 },\r\n\t\t{ key: 'eleven', text: '11', value: 11 },\r\n\t\t{ key: 'twelve', text: '12', value: 12 },\r\n\t\t{ key: 'thirteen', text: '13', value: 13 },\r\n\t\t{ key: 'fourteen', text: '14', value: 14 },\r\n\t\t{ key: 'fifteen', text: '15', value: 15 },\r\n\t\t{ key: 'sixteen', text: '16', value: 16 },\r\n\t\t{ key: 'seventeen', text: '17', value: 17 },\r\n\t\t{ key: 'eighteen', text: '18', value: 18 },\r\n\t\t{ key: 'ninteen', text: '19', value: 19 },\r\n\t\t{ key: 'twenty', text: '20', value: 20 },\r\n\t  ]\r\n\t  \r\n\t \r\n\tconsole.log(NforRSI)\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Menu>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<Input \r\n\t\t\t\t\t\tplaceholder=\"Add ticker ex) APPL\" \r\n\t\t\t\t\t\tvalue={ticker}\r\n\t\t\t\t\t\tname='ticker'\r\n\t\t\t\t\t\tonChange={(e) => setTicker(e.target.value)}\r\n\t\t\t\t\t\tisClearable\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button animated primary onClick={handleTickerFormSubmit}>\r\n\t\t\t\t\t\t<Button.Content visible>Go!</Button.Content>\r\n\t\t\t\t\t\t<Button.Content hidden>\r\n\t\t\t\t\t\t\t<Icon name='arrow right' />\r\n\t\t\t\t\t\t</Button.Content>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\tname='5d'\r\n\t\t\t\tactive={activeItemDateMenu === '5d'}\r\n\t\t\t\tonClick={() => handleDateClick(8, '5d')}\r\n\t\t\t\t>\r\n\t\t\t\t5 d\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\tname='1m'\r\n\t\t\t\tactive={activeItemDateMenu === '1m'}\r\n\t\t\t\tonClick={() => handleDateClick(30, '1m')}\r\n\t\t\t\t>\r\n\t\t\t\t1 m\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\tname='6m'\r\n\t\t\t\tactive={activeItemDateMenu === '6m'}\r\n\t\t\t\tonClick={() => handleDateClick(180, '6m')}\r\n\t\t\t\t>\r\n\t\t\t\t6 m\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\tname='1y'\r\n\t\t\t\tactive={activeItemDateMenu === '1y'}\r\n\t\t\t\tonClick={() => handleDateClick(365, '1y')}\r\n\t\t\t\t>\r\n\t\t\t\t1 y\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\tname='StartDate'\r\n\t\t\t\tposition='right'\r\n\t\t\t\t>\r\n\t\t\t\tCustom:\r\n\t\t\t\t<DatePicker \r\n\t\t\t\tselected={startDate} \r\n\t\t\t\tmaxDate={new Date()} \r\n\t\t\t\tonChange={date => handleStartDateClick(date)}\r\n\t\t\t\tplaceholderText='MM/DD/YYYY'\r\n\t\t\t\tisClearable\r\n\t\t\t\tshowYearDropdown\r\n\t\t\t\tscrollableMonthYearDropdown />\r\n\t\t\t\tTo: \r\n\t\t\t\t<DatePicker \r\n\t\t\t\tselected={endDate} \r\n\t\t\t\tmaxDate={new Date()}\r\n\t\t\t\tonChange={date => handleEndDateClick(date)}\r\n\t\t\t\tplaceholderText='MM/DD/YYYY'\r\n\t\t\t\tisClearable\r\n\t\t\t\tshowYearDropdown\r\n\t\t\t\tscrollableMonthYearDropdown />\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t</Menu>\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<svg ref={stockPriceLineChartNode}></svg>\r\n\t\t\t</React.Fragment>\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<svg ref={momentumIndicatorsChartNode}></svg>\r\n\t\t\t</React.Fragment>\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<svg ref={showVolumeNode}></svg>\r\n\t\t\t</React.Fragment>\r\n\t\t\t<Accordion>\r\n\r\n\r\n\t\t\t\t<Accordion.Title\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetActiveMomentumMenuItem(!activeMomentumMenuItem)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<h3>Momentum Indicators {activeMomentumMenuItem ? \"-\" : \"+\"}</h3>\r\n\t\t\t\t</Accordion.Title>\r\n\t\t\t\t<Accordion.Content active={activeMomentumMenuItem}>\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Checkbox defaultChecked onClick={() => {\r\n\t\t\t\t\t\t\tsetDisplayRSIcheckbox(!displayRSIcheckbox)\r\n\t\t\t\t\t\t\t}} label=\"Relative Strength Index\">\r\n\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t\t<Form.Field\r\n\t\t\t\t\t\t\tcontrol={Select}\r\n\t\t\t\t\t\t\toptions={momentumNtradingDayOptions}\r\n\t\t\t\t\t\t\tlabel={{ children: 'over how many trading days?' }}\r\n\t\t\t\t\t\t\tplaceholder='10'\r\n\t\t\t\t\t\t\tonChange ={(e,selectedOption) => {\r\n\t\t\t\t\t\t\t\tconsole.log(selectedOption.value)\r\n\t\t\t\t\t\t\t\tsetNforRSI(selectedOption.value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t{/* <Form.Group widths='equal'>\r\n\t\t\t\t\t\t<Form.Field control={Checkbox} onClick={() => {\r\n\t\t\t\t\t\t\tsetDisplayRSIcheckbox(!displayRSIcheckbox)\r\n\t\t\t\t\t\t}} label='Relative Strength Index'/>\r\n\t\t\t\t\t</Form.Group> */}\r\n\t\t\t\t</Accordion.Content>\r\n\r\n\t\t\t\t<Accordion.Title\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetActiveEarningsMenuItem(!activeEarningsMenuItem)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<h3>Earnings {activeEarningsMenuItem ? \"-\" : \"+\"}</h3>\r\n\t\t\t\t</Accordion.Title>\r\n\t\t\t\t<Accordion.Content active={activeEarningsMenuItem}>\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<svg ref={earningsChartNode}></svg>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t</Accordion.Content>\r\n\t\t\t\t<Accordion.Title\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetActiveFinancialsMenuItem(!activeFinancialsMenuItem)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<h3>Financials {activeFinancialsMenuItem ? \"-\" : \"+\"}</h3>\r\n\t\t\t\t</Accordion.Title>\r\n\t\t\t\t<Accordion.Content active={activeFinancialsMenuItem}>{Object.keys(financials).map(function(key,index) {\r\n\t\t\t\t\t\tif (financials.length > 0) {\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<Segment.Group>\r\n\t\t\t\t\t\t\t<Segment.Group horizontal>\r\n\t\t\t\t\t\t\t\t<Segment>Gross Profit (M$): {financials[key].grossProfit}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Operating Revenue (M$): {financials[key].operatingRevenue}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Total Revenue (M$): {financials[key].totalRevenue}</Segment>\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t\t<Segment.Group horizontal>\r\n\t\t\t\t\t\t\t\t<Segment>Total Assets (M$): {financials[key].totalAssets}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Total Liabilities (M$): {financials[key].totalLiabilities}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Total Cash (M$): {financials[key].totalCash}</Segment>\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t\t<Segment.Group horizontal>\r\n\t\t\t\t\t\t\t\t<Segment>Net Income (M$): {financials[key].netIncome}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Research and Development (M$): {financials[key].researchAndDevelopment}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Cash Flow (M$): {financials[key].cashFlow}</Segment>\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t\t<Segment.Group horizontal>\r\n\t\t\t\t\t\t\t\t<Segment>Total Debt (M$): {financials[key].totalDebt}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Short Term Debt (M$): {financials[key].shortTermDebt}</Segment>\r\n\t\t\t\t\t\t\t\t<Segment>Long Term Debt (M$): {financials[key].longTermDebt}</Segment>\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t)}}\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Accordion.Content>\r\n\t\t\t</Accordion>\r\n\t\t</div>\r\n\t\t\r\n\t);\r\n} \r\n   \r\n","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport * as d3 from \"d3\"\r\nimport {\r\n    select,\r\n    csv,\r\n    scaleLinear,\r\n    scaleBand,\r\n    scaleTime,\r\n    extent,\r\n    axisLeft,\r\n    axisBottom,\r\n    line,\r\n    curveBasis,\r\n    curveLinear\r\n  } from 'd3';\r\n\r\n\r\n\r\n  \r\n\r\nexport function createMomentumIndicatorsChart(data,momentumIndicatorsChartNode,displayRSIcheckbox) {\r\n\r\n    \r\n    console.log(data)\r\n\r\n    const svg = select(momentumIndicatorsChartNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n\r\n    //console.log(displayRSIcheckbox)\r\n\r\n    const height = 150;\r\n    const width = 700;\r\n    //const margin = ({top: 20, right: 30, bottom: 30, left: 80})\r\n\r\n    const margin = ({top: 50, right: 30, bottom: 50, left: 40})\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    \r\n    const x = scaleBand()\r\n        .domain(d3.utcDay\r\n            .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n            .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2)\r\n\r\n    const y = scaleLinear()\r\n        .domain([d3.min(data, d => d.rsi), d3.max(data, d => d.rsi)])\r\n        .rangeRound([height - margin.bottom, margin.top])\r\n\r\n    const xAxis = g => g\r\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .tickValues(d3.utcMonday\r\n                .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n            .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    const yAxis = g => g\r\n        .attr(\"transform\", `translate(${margin.left},0)`)\r\n        .call(d3.axisLeft(y)\r\n            .tickFormat(d3.format(\"~f\"))\r\n            .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n        .call(g => g.selectAll(\".tick line\").clone()\r\n            .attr(\"stroke-opacity\", 0)\r\n            .attr(\"x2\", width - margin.left - margin.right))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n\r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n        \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n\r\n    const g = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"red\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n        // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n    const lineGenerator = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.rsi))\r\n        .curve(curveLinear);\r\n\r\n    if (displayRSIcheckbox) {\r\n        g.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"rsi\")\r\n        .attr('d', lineGenerator(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',5)\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".rsi\").remove()\r\n    }\r\n\r\n    // g.append('path')\r\n    //     .attr('class', 'line-path')\r\n    //     .attr('d', lineGenerator(data))\r\n    //     .attr('fill','none')\r\n    //     .attr('stroke-width',5)\r\n\r\n    // svg.selectAll(\"g\").remove()\r\n\r\n\r\n    return svg.node();\r\n\r\n}","import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Container } from \"semantic-ui-react\"\nimport { StockData } from './components/StockData';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Container style={{marginTop: 40}}>\n        <StockData />\n      </Container>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}