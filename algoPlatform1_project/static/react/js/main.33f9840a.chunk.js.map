{"version":3,"sources":["redux/charts/chartsReducer.js","redux/charts/chartsTypes.js","redux/dates/datesReducer.js","redux/dates/datesTypes.js","redux/momentum/momentumReducer.js","redux/momentum/momentumTypes.js","redux/tickers/tickerReducer.js","redux/tickers/tickerTypes.js","redux/stockDataRequest/stockDataReducer.js","redux/stockDataRequest/stockDataTypes.js","redux/rootReducer.js","redux/store.js","redux/dates/datesActions.js","redux/stockDataRequest/stockDataActions.js","components/SelectTickerContainer.js","redux/tickers/tickerActions.js","components/SelectDatesFromMenuContainer.js","components/SelectCustomDatesContainer.js","components/SelectLineOrCandleContainer.js","redux/charts/chartsActions.js","components/LineCandleGraphContainer.js","components/accordion/momentum/RSIcontentpanel.js","redux/momentum/momentumActions.js","components/accordion/momentum/TSIcontentpanel.js","components/MomentumMenuContainer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","displayLine","chartsReducer","state","action","type","payload","currentDateInit","Date","setTime","getTime","startDate","endDate","datesReducer","displayRSI","nForRSI","displayTSI","rForTSI","momentumReducer","tickers","tickerReducer","loading","stockData","error","apiString","StockDataReducer","rootReducer","combineReducers","tickersFromRootReducer","datesFromRootReducer","chartsFromRootReducer","momentumFromRootReducer","stockDataFromRootReducer","stockDataReducer","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","addStartDate","date","addEndDate","fetchStockDataSuccess","data","fetchStockDataFailure","connect","dispatch","addTickerDispatch","newTicker","ticker","addTicker","props","useState","setNewTicker","Form","Input","placeholder","value","name","onChange","e","target","isClearable","Button","animated","primary","onClick","Content","visible","hidden","Icon","addStartDateDispatch","addEndDateDispatch","activeItemDateMenu","setActiveItemDateMenu","setStartDate","handleDateClick","minusDays","currentDate","Menu","widths","Item","active","setEndDate","Header","as","selected","maxDate","handleStartDateClick","placeholderText","showYearDropdown","scrollableMonthYearDropdown","handleEndDateClick","addLineCandleDispatch","display","displayPriceChart","setDisplayPriceChart","Field","toggle","event","fetchStockData","APIstring","axios","method","url","then","response","catch","message","convertDatesToString","initialDate","String","getFullYear","getMonth","getDate","useEffect","console","log","map","nForRSIdispatch","selectedValue","Grid","columns","Column","width","control","Select","options","key","text","compact","selectedOption","rForTSIdispatch","displayRSIdispatch","n","displayTSIdispatch","title","activeRSIAccodianMenuItem","setRSIActiveAccordionMenuItem","activeTSIAccodianMenuItem","setTSIActiveAccordionMenuItem","displayUOCheckbox","setDisplayUOCheckbox","setsForUO","setmForUO","setlenForUO","setwsForUO","setwmForUO","setwlForUO","activeUOAccodianMenuItem","setUOActiveAccordionMenuItem","displayStochCheckbox","setDisplayStochCheckbox","setNForStoch","setd_nForStoch","activeStochAccodianMenuItem","setStochActiveAccordionMenuItem","displayStochSignalCheckbox","setDisplayStochSignalCheckbox","setNForStochSignal","setd_nForStochSignal","activeStochSignalAccodianMenuItem","setStochSignalActiveAccordionMenuItem","displayWR","setDisplayWR","setLBPForWR","activeWRAccodianMenuItem","setWRActiveAccordionMenuItem","displayAO","setDisplayAO","setSForAO","setLenForAO","activeAOAccodianMenuItem","setAOActiveAccordionMenuItem","displayKama","setDisplayKama","setNForKama","setPow1ForKama","setPow2ForKama","activeKamaAccodianMenuItem","setKamaActiveAccordionMenuItem","displayROC","setDisplayROC","setNForROC","activeROCAccodianMenuItem","setROCActiveAccordionMenuItem","RSIAccordionTitle","Checkbox","borderless","index","defaultChecked","stopPropagation","TSIAccordionTitle","UOAccordionTitle","createAccordionTile","StochAccordionTitle","StochSignalAccordionTitle","WRAccordionTitle","AOAccordionTitle","KamaAccordionTitle","ROCAccordionTitle","momentumNtradingDayOptions","UOcontentPanel","createContentPanelAccordion","StochcontentPanel","StochSignalcontentPanel","WRcontentPanel","AOcontentPanel","ROCcontentPanel","set","place","length","Row","trigger","Group","stretched","id","Accordion","vertical","fluid","Title","content","App","className","celled","SelectLineOrCandleContainer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.33f9840a.chunk.js","sourcesContent":["import { ADD_LINE_CANDLE } from './chartsTypes'\r\n\r\nconst initialState = {\r\n  displayLine: true\r\n}\r\n\r\nconst chartsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_LINE_CANDLE: return {\r\n      //...state,\r\n      displayLine: action.payload\r\n    }\r\n\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default chartsReducer","export const ADD_LINE_CANDLE = 'ADD_LINE_CANDLE'\r\n","import { ADD_START_DATE, ADD_END_DATE } from './datesTypes'\r\n\r\nvar currentDateInit = new Date()\r\nvar newDate = currentDateInit.setTime(currentDateInit.getTime() - (24*60*60*1000) * 182);\r\nconst initialState = {\r\n  startDate: currentDateInit,\r\n  endDate: (new Date())\r\n}\r\n\r\nconst datesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_START_DATE: return {\r\n      //...state,\r\n      startDate: action.payload\r\n    }\r\n    case ADD_END_DATE: return {\r\n      //...state,\r\n      endDate: action.payload\r\n    }\r\n\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default datesReducer","export const ADD_START_DATE = 'ADD_START_DATE'\r\nexport const ADD_END_DATE = 'ADD_END_DATE'","import { nForRSI } from './momentumActions'\r\nimport { DISPLAY_RSI, N_FOR_RSI, DISPLAY_TSI, R_FOR_TSI } from './momentumTypes'\r\n\r\nconst initialState = {\r\n  displayRSI: true,\r\n  nForRSI: 10,\r\n  displayTSI: false,\r\n  rForTSI: 25\r\n}\r\n\r\nconst momentumReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case DISPLAY_RSI: return {\r\n      displayRSI: action.payload\r\n    }\r\n    case N_FOR_RSI: return {\r\n      nForRSI: action.payload\r\n    }\r\n    case DISPLAY_TSI: return {\r\n      displayTSI: action.payload\r\n    }\r\n    case R_FOR_TSI: return {\r\n      rForTSI: action.payload\r\n    }\r\n\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default momentumReducer","export const DISPLAY_RSI = 'DISPLAY_RSI'\r\nexport const N_FOR_RSI = 'N_FOR_RSI'\r\nexport const DISPLAY_TSI = 'DISPLAY_TSI'\r\nexport const R_FOR_TSI = 'R_FOR_TSI'\r\n","import { ADD_TICKER } from './tickerTypes'\r\n\r\nconst initialState = {\r\n  tickers: 'AAPL'\r\n}\r\n\r\nconst tickerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TICKER: return {\r\n      //...state,\r\n      tickers: action.payload\r\n    }\r\n\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default tickerReducer","export const ADD_TICKER = 'ADD_TICKER'","import {\r\n  FETCH_STOCK_DATA_REQUEST,\r\n  FETCH_STOCK_DATA_SUCCESS,\r\n  FETCH_STOCK_DATA_FAILURE,\r\n  REQUEST_API_CALL_INFO\r\n} from './stockDataTypes'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  stockData: [],\r\n  error: '',\r\n  apiString: 'AAPL/2020-4-21/2020-10-20'\r\n}\r\n\r\n// function selectedAPIstring(state = 'AAPL/2020-4-21/2020-10-20', action) {\r\n//   switch (action.type) {\r\n//     case SELECT_API_STRING:\r\n//       return action.apiString\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\nconst StockDataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_STOCK_DATA_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case FETCH_STOCK_DATA_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        stockData: action.payload,\r\n        error: ''\r\n      }\r\n    case FETCH_STOCK_DATA_FAILURE:\r\n      return {\r\n        loading: false,\r\n        stockData: [],\r\n        error: action.payload\r\n      }\r\n    case REQUEST_API_CALL_INFO:\r\n      return {\r\n        apiString: action.payload\r\n      }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default StockDataReducer","export const FETCH_STOCK_DATA_REQUEST = 'FETCH_STOCK_DATA_REQUEST'\r\nexport const FETCH_STOCK_DATA_SUCCESS = 'FETCH_STOCK_DATA_SUCCESS'\r\nexport const FETCH_STOCK_DATA_FAILURE = 'FETCH_STOCK_DATA_FAILURE'\r\nexport const REQUEST_API_CALL_INFO = 'REQUEST_API_CALL_INFO'","import { combineReducers } from 'redux'\r\nimport chartsReducer from './charts/chartsReducer'\r\nimport datesReducer from './dates/datesReducer'\r\nimport momentumReducer from './momentum/momentumReducer'\r\nimport tickerReducer from './tickers/tickerReducer'\r\nimport stockDataReducer from './stockDataRequest/stockDataReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  tickersFromRootReducer: tickerReducer,\r\n  datesFromRootReducer: datesReducer,\r\n  chartsFromRootReducer: chartsReducer,\r\n  momentumFromRootReducer: momentumReducer,\r\n  stockDataFromRootReducer: stockDataReducer\r\n\r\n})\r\n\r\nexport default rootReducer","  \r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(logger, thunk))\r\n)\r\n\r\nexport default store","  \r\nimport { ADD_START_DATE, ADD_END_DATE } from './datesTypes'\r\n\r\nexport const addStartDate = (date) => {\r\n\r\n  return {\r\n    type: ADD_START_DATE,\r\n    payload: date\r\n  }\r\n}\r\n\r\nexport const addEndDate = (date) => {\r\n\r\n  return {\r\n    type: ADD_END_DATE,\r\n    payload: date\r\n  }\r\n}","  \r\nimport axios from 'axios'\r\nimport {\r\n  FETCH_STOCK_DATA_REQUEST,\r\n  FETCH_STOCK_DATA_SUCCESS,\r\n  FETCH_STOCK_DATA_FAILURE,\r\n  REQUEST_API_CALL_INFO\r\n} from './stockDataTypes'\r\n\r\n\r\n// export const requestAPIstockData = (n) => {\r\n//   return {\r\n//     type: REQUEST_API_CALL_INFO,\r\n//     payload: n\r\n//   }\r\n// }\r\n\r\nexport function fetchStockData(apiString) {\r\n  \r\n  return function (dispatch) {\r\n    //dispatch(requestAPIstockData(apiString))\r\n    axios({\r\n      method: 'get',\r\n      url: \"/get_stock_data/\"+apiString,\r\n    })\r\n      .then(response => {\r\n        const stockData = response.data \r\n        dispatch(fetchStockDataSuccess(stockData))\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchStockDataFailure(error.message))\r\n      })\r\n  }\r\n}\r\n\r\nexport const fetchStockDataRequest = () => {\r\n  return {\r\n    type: FETCH_STOCK_DATA_REQUEST,\r\n  }\r\n}\r\n\r\nexport const fetchStockDataSuccess = data => {\r\n  return {\r\n    type: FETCH_STOCK_DATA_SUCCESS,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const fetchStockDataFailure = error => {\r\n  return {\r\n    type: FETCH_STOCK_DATA_FAILURE,\r\n    payload: error\r\n  }\r\n}\r\n","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTicker } from '../redux'\r\nimport { Input, Form, Icon, Button} from \"semantic-ui-react\"\r\n\r\n\r\nfunction SelectTickerContainer(props) {\r\n  const [newTicker, setNewTicker] = useState('')\r\n\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Input \r\n            placeholder=\"Add ticker ex) APPL\" \r\n            value={newTicker}\r\n            name='newTicker'\r\n            onChange={(e) => setNewTicker(e.target.value)}\r\n            isClearable\r\n        />\r\n        <Button animated primary onClick={(e) => props.addTickerDispatch(newTicker)}>\r\n            <Button.Content visible>Go!</Button.Content>\r\n            <Button.Content hidden>\r\n                <Icon name='arrow right' />\r\n            </Button.Content>\r\n        </Button>\r\n    </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tickers: state.tickersFromRootReducer.tickers\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addTickerDispatch: newTicker => dispatch(addTicker(newTicker))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SelectTickerContainer)","  \r\nimport { ADD_TICKER } from './tickerTypes'\r\n\r\nexport const addTicker = (ticker = 'AAPL') => {\r\n\r\n  return {\r\n    type: ADD_TICKER,\r\n    payload: ticker\r\n  }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addEndDate, addStartDate } from '../redux'\r\nimport {  Menu} from \"semantic-ui-react\"\r\n \r\n\r\n\r\n\r\nfunction SelectDatesFromMenuContainer(props) {\r\n  const [activeItemDateMenu, setActiveItemDateMenu] = useState('6m');\r\n  var currentDateInit = new Date()\r\n  var newDate = currentDateInit.setTime(currentDateInit.getTime() - (24*60*60*1000) * 182);\r\n  const [startDate, setStartDate] = useState(currentDateInit);\r\n  const [endDate, setEndDate] = useState(new Date())\r\n\r\n\r\n  function handleDateClick(minusDays, name) {\r\n      setActiveItemDateMenu(name)\r\n      var currentDate = new Date() //theRealCurrentDate2;\r\n      var dateOffset = (24*60*60*1000) * minusDays; \r\n      var newDate = currentDate.setTime(currentDate.getTime() - ((24*60*60*1000) * minusDays));\r\n      setStartDate( currentDate);\r\n      props.addStartDateDispatch(currentDate)\r\n      props.addEndDateDispatch(endDate)\r\n      // getAndSetStockData(ticker,currentDate,endDate) \r\n      // getAndSetFinancials(ticker);\r\n      // getAndSetEarnings(ticker);\r\n      }\r\n\r\n  return (\r\n    <div>\r\n        <Menu widths={4}>\r\n            <Menu.Item\r\n            name='5d'\r\n            active={activeItemDateMenu === '5d'}\r\n            onClick={() => handleDateClick(8, '5d')}\r\n            >\r\n            5 d\r\n            </Menu.Item>\r\n            <Menu.Item\r\n            name='1m'\r\n            active={activeItemDateMenu === '1m'}\r\n            onClick={() => handleDateClick(30, '1m')}\r\n            >\r\n            1 m\r\n            </Menu.Item>\r\n            \r\n            <Menu.Item\r\n            name='6m'\r\n            active={activeItemDateMenu === '6m'}\r\n            onClick={() => handleDateClick(180, '6m')}\r\n            >\r\n            6 m\r\n            </Menu.Item>\r\n            \r\n            <Menu.Item\r\n            name='1y'\r\n            active={activeItemDateMenu === '1y'}\r\n            onClick={() => handleDateClick(365, '1y')}\r\n            >\r\n            1 y\r\n            </Menu.Item>\r\n            \r\n        </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     startDate: state.datesFromRootReducer.startDate,\r\n//     endDate: state.datesFromRootReducer.endDate\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addStartDateDispatch: startDate => dispatch(addStartDate(startDate)),\r\n    addEndDateDispatch: endDate => dispatch(addEndDate(endDate))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  //mapStateToProps,\r\n  null,\r\n  mapDispatchToProps\r\n)(SelectDatesFromMenuContainer)","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { addEndDate, addStartDate } from '../redux'\r\nimport { Header} from \"semantic-ui-react\"\r\n\r\n\r\n\r\nfunction SelectCustomDatesContainer(props) {\r\n\r\n  var currentDateInit = new Date()\r\n  var newDate = currentDateInit.setTime(currentDateInit.getTime() - (24*60*60*1000) * 182);\r\n  const [startDate, setStartDate] = useState(currentDateInit);\r\n  const [endDate, setEndDate] = useState(new Date())\r\n  // var currentDate = new Date();\r\n\t// var dateOffset = (24*60*60*1000) * 182; \r\n\t// var newDate = currentDate.setTime(currentDate.getTime() - dateOffset);\r\n  // const [startDate, setStartDate] = useState(currentDate);\r\n  // const [endDate, setEndDate] = useState(new Date())\r\n  // var currentDate2 = new Date();\r\n  // const maxDateAllowed = currentDate2.setTime(currentDate.getTime() - (24*60*60*1000) * 365);\r\n\r\n  function handleStartDateClick(date) {\r\n\t\tif (date !== startDate) {\r\n      setStartDate(date)\r\n      props.addStartDateDispatch(date)\r\n\t\t}\r\n\t\t// getAndSetStockData(ticker,date,endDate)\r\n\t\t// getAndSetFinancials(ticker);\r\n\t\t// getAndSetEarnings(ticker);\r\n  }\r\n  \r\n  function handleEndDateClick(date) {\r\n\t\tif (date !== endDate) {\r\n      setEndDate(date)\r\n      props.addEndDateDispatch(date)\r\n\t\t}\r\n\t\t// getAndSetStockData(ticker,date,endDate)\r\n\t\t// getAndSetFinancials(ticker);\r\n\t\t// getAndSetEarnings(ticker);\r\n\t}\r\n\r\n  return (\r\n    <div>\r\n      <Header as='h4'>Custom Dates</Header>\r\n      <br/>Start:\r\n      <DatePicker \r\n          selected={startDate} \r\n          maxDate={new Date()} \r\n          onChange={date => handleStartDateClick(date)}\r\n          placeholderText='MM/DD/YYYY'\r\n          isClearable\r\n          showYearDropdown\r\n          scrollableMonthYearDropdown />\r\n      <br/>End:\r\n      <DatePicker \r\n          selected={endDate} \r\n          maxDate={new Date()} \r\n          onChange={date => handleEndDateClick(date)}\r\n          placeholderText='MM/DD/YYYY'\r\n          isClearable\r\n          showYearDropdown\r\n          scrollableMonthYearDropdown />\r\n    </div>\r\n  )\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     startDate: state.datesFromRootReducer.startDate,\r\n//     endDate: state.datesFromRootReducer.endDate\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addStartDateDispatch: startDate => dispatch(addStartDate(startDate)),\r\n    addEndDateDispatch: endDate => dispatch(addEndDate(endDate))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  // mapStateToProps,\r\n  null,\r\n  mapDispatchToProps\r\n)(SelectCustomDatesContainer)\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addLineChart} from '../redux'\r\nimport { Form, Button} from \"semantic-ui-react\"\r\n\r\n\r\n\r\nfunction SelectLineOrCandle(props) {\r\n  const [displayPriceChart, setDisplayPriceChart] = useState(true)\r\n  const handlePriceClickLine = (event, {value}) => {\r\n      if (displayPriceChart != true) {\r\n        setDisplayPriceChart(true)\r\n        props.addLineCandleDispatch(true)\r\n      }\r\n  }\r\n  const handlePriceClickCandle = (event, {value}) => {\r\n      if (displayPriceChart != false) {\r\n        setDisplayPriceChart(false)\r\n        props.addLineCandleDispatch(false)\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Form.Field>\r\n            <Button toggle active={displayPriceChart} onClick={handlePriceClickLine}>\r\n                Line Chart\r\n            </Button>\r\n            <Button toggle active={!displayPriceChart} onClick={handlePriceClickCandle}>\r\n                Candle Stick\r\n            </Button>\r\n        </Form.Field>\r\n    </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     startDate: state.datesFromRootReducer.startDate,\r\n//     endDate: state.datesFromRootReducer.endDate\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addLineCandleDispatch: display => dispatch(addLineChart(display))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  // mapStateToProps,\r\n  null,\r\n  mapDispatchToProps\r\n)(SelectLineOrCandle)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","  \r\nimport { ADD_LINE_CANDLE } from './chartsTypes'\r\n\r\nexport const addLineChart = (displayLine) => {\r\n\r\n  return {\r\n    type: ADD_LINE_CANDLE,\r\n    payload: displayLine\r\n  }\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchStockData } from '../redux'\r\n\r\nfunction LineCandleGraphContainer ({ tickers, startDate, endDate, fetchStockData, stockData }) {\r\n    function convertDatesToString(initialDate) {\r\n\t\tconst convertedDate = String(initialDate.getFullYear())+\"-\"+String(initialDate.getMonth() + 1)+\"-\"+String(initialDate.getDate())\r\n\t\treturn convertedDate\r\n\t}\r\n  useEffect(() => {\r\n      console.log(tickers)\r\n      console.log(convertDatesToString(startDate))\r\n      console.log(convertDatesToString(endDate))\r\n    //requestAPIstockData(tickers+convertDatesToString(startDate)+convertDatesToString(endDate))\r\n    fetchStockData(String(tickers+\"/\"+convertDatesToString(startDate)+\"/\"+convertDatesToString(endDate)))\r\n  }, [])\r\n  return stockData.loading ? (\r\n\r\n\r\n    <h2>Loading</h2>\r\n  ) : stockData.error ? (\r\n    <h2>{stockData.error}</h2>\r\n  ) : (\r\n    <div>\r\n      <h2>Stonk Data</h2>\r\n      <div>\r\n        {stockData &&\r\n          stockData.stockData &&\r\n          stockData.stockData.map(data => <p>{data.name}</p>)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tickers: state.tickersFromRootReducer.tickers,\r\n    startDate: state.datesFromRootReducer.startDate,\r\n    endDate: state.datesFromRootReducer.endDate,\r\n    stockData: state.stockDataFromRootReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //requestAPIstockData: (APIstring) => dispatch(requestAPIstockData(APIstring)),\r\n    fetchStockData: (APIstring) => dispatch(fetchStockData(APIstring))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LineCandleGraphContainer)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { nForRSI } from '../../../redux'\r\nimport { Grid, Menu, Form, Select} from \"semantic-ui-react\"\r\n\r\nfunction RSIcontentPanel(props) {\r\n\r\n    const momentumNtradingDayOptions = [\r\n        { key: 'one', text: '1', value: 1 },\r\n        { key: 'two', text: '2', value: 2 },\r\n        { key: 'three', text: '3', value: 3 },\r\n        { key: 'four', text: '4', value: 4 },\r\n        { key: 'five', text: '5', value: 5 },\r\n        { key: 'six', text: '6', value: 6 },\r\n        { key: 'seven', text: '7', value: 7 },\r\n        { key: 'eight', text: '8', value: 8 },\r\n        { key: 'nine', text: '9', value: 9 },\r\n        { key: 'ten', text: '10', value: 10 },\r\n        { key: 'eleven', text: '11', value: 11 },\r\n        { key: 'twelve', text: '12', value: 12 },\r\n        { key: 'thirteen', text: '13', value: 13 },\r\n        { key: 'fourteen', text: '14', value: 14 },\r\n        { key: 'fifteen', text: '15', value: 15 },\r\n        { key: 'sixteen', text: '16', value: 16 },\r\n        { key: 'seventeen', text: '17', value: 17 },\r\n        { key: 'eighteen', text: '18', value: 18 },\r\n        { key: 'ninteen', text: '19', value: 19 },\r\n        { key: 'twenty', text: '20', value: 20 },\r\n        { key: 'twentyone', text: '21', value: 21 },\r\n        { key: 'twentytwo', text: '22', value: 22 },\r\n        { key: 'twentythree', text: '23', value: 23 },\r\n        { key: 'twentyfour', text: '24', value: 24 },\r\n        { key: 'twentyfive', text: '25', value: 25 },\r\n        { key: 'twentysix', text: '26', value: 26 },\r\n        { key: 'twentyseven', text: '27', value: 27 },\r\n        { key: 'twentyeight', text: '28', value: 28 },\r\n        { key: 'twentynine', text: '29', value: 29 },\r\n        { key: 'thirty', text: '30', value: 30 },\r\n        { key: 'thirtyone', text: '31', value: 31 },\r\n        { key: 'thirtytwo', text: '32', value: 32 },\r\n        { key: 'thirtythree', text: '33', value: 33 },\r\n        { key: 'thirtyfour', text: '34', value: 34 },\r\n        { key: 'thirtyfive', text: '35', value: 35 }\r\n    ]\r\n    return (\r\n    <Grid columns='equal'>\r\n            <Grid.Column>\r\n                <br/>'Period in Trading Days (n):'\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='10'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        props.nForRSIdispatch(selectedOption.value)\r\n                        }}\r\n                />\r\n            </Grid.Column>\r\n        </Grid>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    nForRSI: state.momentumFromRootReducer.nForRSI\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    nForRSIdispatch: selectedValue => dispatch(nForRSI(selectedValue))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RSIcontentPanel)","  \r\nimport { DISPLAY_RSI, N_FOR_RSI, DISPLAY_TSI, R_FOR_TSI } from './momentumTypes'\r\n\r\nexport const displayRSI = (n) => {\r\n  return {\r\n    type: DISPLAY_RSI,\r\n    payload: n\r\n  }\r\n}\r\nexport const nForRSI = (n) => {\r\n  return {\r\n    type: N_FOR_RSI,\r\n    payload: n\r\n  }\r\n}\r\nexport const displayTSI = (n) => {\r\n  return {\r\n    type: DISPLAY_TSI,\r\n    payload: n\r\n  }\r\n}\r\nexport const rForTSI = (n) => {\r\n  return {\r\n    type: R_FOR_TSI,\r\n    payload: n\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { rForTSI } from '../../../redux'\r\nimport { Grid, Menu, Form, Select} from \"semantic-ui-react\"\r\n\r\nfunction TSIcontentPanel(props) {\r\n\r\n    const momentumNtradingDayOptions = [\r\n        { key: 'one', text: '1', value: 1 },\r\n        { key: 'two', text: '2', value: 2 },\r\n        { key: 'three', text: '3', value: 3 },\r\n        { key: 'four', text: '4', value: 4 },\r\n        { key: 'five', text: '5', value: 5 },\r\n        { key: 'six', text: '6', value: 6 },\r\n        { key: 'seven', text: '7', value: 7 },\r\n        { key: 'eight', text: '8', value: 8 },\r\n        { key: 'nine', text: '9', value: 9 },\r\n        { key: 'ten', text: '10', value: 10 },\r\n        { key: 'eleven', text: '11', value: 11 },\r\n        { key: 'twelve', text: '12', value: 12 },\r\n        { key: 'thirteen', text: '13', value: 13 },\r\n        { key: 'fourteen', text: '14', value: 14 },\r\n        { key: 'fifteen', text: '15', value: 15 },\r\n        { key: 'sixteen', text: '16', value: 16 },\r\n        { key: 'seventeen', text: '17', value: 17 },\r\n        { key: 'eighteen', text: '18', value: 18 },\r\n        { key: 'ninteen', text: '19', value: 19 },\r\n        { key: 'twenty', text: '20', value: 20 },\r\n        { key: 'twentyone', text: '21', value: 21 },\r\n        { key: 'twentytwo', text: '22', value: 22 },\r\n        { key: 'twentythree', text: '23', value: 23 },\r\n        { key: 'twentyfour', text: '24', value: 24 },\r\n        { key: 'twentyfive', text: '25', value: 25 },\r\n        { key: 'twentysix', text: '26', value: 26 },\r\n        { key: 'twentyseven', text: '27', value: 27 },\r\n        { key: 'twentyeight', text: '28', value: 28 },\r\n        { key: 'twentynine', text: '29', value: 29 },\r\n        { key: 'thirty', text: '30', value: 30 },\r\n        { key: 'thirtyone', text: '31', value: 31 },\r\n        { key: 'thirtytwo', text: '32', value: 32 },\r\n        { key: 'thirtythree', text: '33', value: 33 },\r\n        { key: 'thirtyfour', text: '34', value: 34 },\r\n        { key: 'thirtyfive', text: '35', value: 35 }\r\n    ]\r\n    return (\r\n    <Grid columns='equal'>\r\n            <Grid.Column>\r\n                <br/>'EMA Smoothing Period (r):'\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='25'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        props.rForTSIdispatch(selectedOption.value)\r\n                        }}\r\n                />\r\n            </Grid.Column>\r\n        </Grid>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    rForTSI: state.momentumFromRootReducer.rForTSI\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    rForTSIdispatch: selectedValue => dispatch(rForTSI(selectedValue))\r\n  }\r\n}\r\n\r\n  \r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TSIcontentPanel)\r\n","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { displayRSI, displayTSI } from '../redux'\r\nimport { Grid, Menu, Accordion, Item, Checkbox, Form, Select} from \"semantic-ui-react\"\r\nimport Collapsible from 'react-collapsible';\r\nimport RSIcontentPanel from './accordion/momentum/RSIcontentpanel'\r\nimport TSIcontentPanel from './accordion/momentum/TSIcontentpanel'\r\n\r\nfunction MomentumMenuContainer(props) {\r\n    function headerCollapsible(title) {\r\n        return (\r\n            <Item.Group>\r\n            <Item>\r\n                <Item.Content>\r\n                    <Item.Header as='a'>{title}</Item.Header><br/>\r\n                </Item.Content>\r\n            </Item>\r\n        </Item.Group>\r\n        )\r\n    }\r\n    \r\n\tconst [NforRSI, setNforRSI] = useState(10)\r\n    const [activeRSIAccodianMenuItem, setRSIActiveAccordionMenuItem] = useState(-1)\r\n\r\n\tconst [displayTSIcheckbox, setDisplayTSIcheckbox] = useState(false)\r\n\tconst [rForTSI, setrForTSI] = useState(25)\r\n    const [sForTSI, setsForTSI] = useState(13)\r\n    const [activeTSIAccodianMenuItem, setTSIActiveAccordionMenuItem] = useState(-1)\r\n\r\n\tconst [displayUOCheckbox, setDisplayUOCheckbox] = useState(false)\r\n\tconst [sForUO, setsForUO] = useState(7)\r\n\tconst [mForUO, setmForUO] = useState(14)\r\n\tconst [lenForUO, setlenForUO] = useState(28)\r\n\tconst [wsForUO, setwsForUO] = useState(4)\r\n\tconst [wmForUO, setwmForUO] = useState(2)\r\n    const [wlForUO, setwlForUO] = useState(1)\r\n    const [activeUOAccodianMenuItem, setUOActiveAccordionMenuItem] = useState(-1)\r\n    \r\n    const [displayStochCheckbox, setDisplayStochCheckbox] = useState(false)\r\n    const [nForStoch, setNForStoch] = useState(14)\r\n    const [d_nForStoch, setd_nForStoch] = useState(3)\r\n    const [activeStochAccodianMenuItem, setStochActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayStochSignalCheckbox, setDisplayStochSignalCheckbox] = useState(false)\r\n    const [nForStochSignal, setNForStochSignal] = useState(14)\r\n    const [d_nForStochSignal, setd_nForStochSignal] = useState(3)\r\n    const [activeStochSignalAccodianMenuItem, setStochSignalActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayWR, setDisplayWR] = useState(false)\r\n    const [lbpForWR, setLBPForWR] = useState(14)\r\n    const [activeWRAccodianMenuItem, setWRActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayAO, setDisplayAO] = useState(false)\r\n    const [sForAO, setSForAO] = useState(5)\r\n    const [lenForAO, setLenForAO] = useState(34)\r\n    const [activeAOAccodianMenuItem, setAOActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayKama, setDisplayKama] = useState(false)\r\n    const [nForKama, setNForKama] = useState(10)\r\n    const [pow1ForKama, setPow1ForKama] = useState(2)\r\n    const [pow2ForKama, setPow2ForKama] = useState(30)\r\n    const [activeKamaAccodianMenuItem, setKamaActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayROC, setDisplayROC] = useState(false)\r\n    const [nForROC, setNForROC] = useState(12)\r\n    const [activeROCAccodianMenuItem, setROCActiveAccordionMenuItem] = useState(-1)\r\n\r\n    \r\n\r\n    const RSIAccordionTitle = (\r\n        <Grid columns='equal'>\r\n        <Grid.Column width={2}>\r\n                <Checkbox borderless index={1} defaultChecked onClick={(event) => {\r\n                            event.stopPropagation()\r\n                            props.displayRSIdispatch(!props.displayRSI)\r\n\r\n\r\n                        }}>\r\n                </Checkbox>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n            <h5>Relative Strength Index</h5>\r\n        </Grid.Column>\r\n        </Grid>)\r\n        \r\n    const TSIAccordionTitle = (\r\n        <Grid columns='equal'>\r\n        <Grid.Column width={2}>\r\n                <Checkbox borderless index={1} onClick={(event) => {\r\n                            event.stopPropagation()\r\n                            props.displayTSIdispatch(!props.displayTSI)\r\n\r\n\r\n                        }}>\r\n                </Checkbox>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n            <h5>True Strength Index</h5>\r\n        </Grid.Column>\r\n        </Grid>)\r\n    //const TSIAccordionTitle = createAccordionTile(setDisplayTSIcheckbox,displayTSIcheckbox,'True Strength Index')\r\n    const UOAccordionTitle = createAccordionTile(setDisplayUOCheckbox,displayUOCheckbox,'Ultimate Oscillator')\r\n    const StochAccordionTitle = createAccordionTile(setDisplayStochCheckbox,displayStochCheckbox,'Stochastic Oscillator')\r\n    const StochSignalAccordionTitle = createAccordionTile(setDisplayStochSignalCheckbox,displayStochSignalCheckbox,'Stochastic Oscillator Signal')\r\n    const WRAccordionTitle = createAccordionTile(setDisplayWR,displayWR,'Williams %R')\r\n    const AOAccordionTitle = createAccordionTile(setDisplayAO,displayAO,'Awesome Oscillator') \r\n    const KamaAccordionTitle = createAccordionTile(setDisplayKama,displayKama,'Kaufmans Adaptive Moving Average')\r\n    const ROCAccordionTitle = createAccordionTile(setDisplayROC,displayROC,'Rate-of-Change (ROC) indicator') \r\n    \r\n    const momentumNtradingDayOptions = [\r\n\t\t{ key: 'one', text: '1', value: 1 },\r\n\t\t{ key: 'two', text: '2', value: 2 },\r\n\t\t{ key: 'three', text: '3', value: 3 },\r\n\t\t{ key: 'four', text: '4', value: 4 },\r\n\t\t{ key: 'five', text: '5', value: 5 },\r\n\t\t{ key: 'six', text: '6', value: 6 },\r\n\t\t{ key: 'seven', text: '7', value: 7 },\r\n\t\t{ key: 'eight', text: '8', value: 8 },\r\n\t\t{ key: 'nine', text: '9', value: 9 },\r\n\t\t{ key: 'ten', text: '10', value: 10 },\r\n\t\t{ key: 'eleven', text: '11', value: 11 },\r\n\t\t{ key: 'twelve', text: '12', value: 12 },\r\n\t\t{ key: 'thirteen', text: '13', value: 13 },\r\n\t\t{ key: 'fourteen', text: '14', value: 14 },\r\n\t\t{ key: 'fifteen', text: '15', value: 15 },\r\n\t\t{ key: 'sixteen', text: '16', value: 16 },\r\n\t\t{ key: 'seventeen', text: '17', value: 17 },\r\n\t\t{ key: 'eighteen', text: '18', value: 18 },\r\n\t\t{ key: 'ninteen', text: '19', value: 19 },\r\n\t\t{ key: 'twenty', text: '20', value: 20 },\r\n\t\t{ key: 'twentyone', text: '21', value: 21 },\r\n\t\t{ key: 'twentytwo', text: '22', value: 22 },\r\n\t\t{ key: 'twentythree', text: '23', value: 23 },\r\n\t\t{ key: 'twentyfour', text: '24', value: 24 },\r\n\t\t{ key: 'twentyfive', text: '25', value: 25 },\r\n\t\t{ key: 'twentysix', text: '26', value: 26 },\r\n\t\t{ key: 'twentyseven', text: '27', value: 27 },\r\n\t\t{ key: 'twentyeight', text: '28', value: 28 },\r\n\t\t{ key: 'twentynine', text: '29', value: 29 },\r\n        { key: 'thirty', text: '30', value: 30 },\r\n        { key: 'thirtyone', text: '31', value: 31 },\r\n\t\t{ key: 'thirtytwo', text: '32', value: 32 },\r\n\t\t{ key: 'thirtythree', text: '33', value: 33 },\r\n\t\t{ key: 'thirtyfour', text: '34', value: 34 },\r\n\t\t{ key: 'thirtyfive', text: '35', value: 35 }\r\n\t]\r\n\r\n    //const RSIcontentPanel = createContentPanelAccordion(['Period in Trading Days (n):'],['12'],[nForRSIdispatch(selectedOption.value)])\r\n    // const RSIcontentPanel = (\r\n    //     <Grid columns='equal'>\r\n    //             <Grid.Column>\r\n    //                 <br/>'Period in Trading Days (n):'\r\n    //             </Grid.Column>\r\n    //             <Grid.Column width={4}>\r\n    //                 <Form.Field\r\n    //                     control={Select}\r\n    //                     options={momentumNtradingDayOptions}\r\n    //                     placeholder='12'\r\n    //                     compact\r\n    //                     onChange ={(e,selectedOption) => {\r\n    //                         props.nForRSIdispatch(selectedOption.value)\r\n    //                         }}\r\n    //                 />\r\n    //             </Grid.Column>\r\n    //         </Grid>\r\n    // )\r\n    //const TSIcontentPanel = createContentPanelAccordion(['EMA Smoothing Period (r):'],['25'],[setrForTSI])\r\n    const UOcontentPanel =  createContentPanelAccordion(['Short Period (s):','Medium Period (m): ','Long Period (l)','Weight of Short BP Average (ws):','Weight of Medium BP Average (wm):','Weight of Long BP Average'],['7','14','28','4','2','1'],[setsForUO,setmForUO,setlenForUO,setwsForUO,setwmForUO,setwlForUO])\r\n    const StochcontentPanel = createContentPanelAccordion(['Period of Trading Days:','Simple Moving Average Period:'],['14','3'],[setNForStoch,setd_nForStoch])\r\n    const StochSignalcontentPanel = createContentPanelAccordion(['Period of Trading Days:','Simple Moving Average Period:'],['14','3'],[setNForStochSignal,setd_nForStochSignal])\r\n    const WRcontentPanel =  createContentPanelAccordion(['Lookback Period:'],['14'],[setLBPForWR])\r\n    const AOcontentPanel = createContentPanelAccordion(['Short Period (s):','Long Period (l):'],['5','34'],[setSForAO,setLenForAO])\r\n    const KamacontentPanel = createContentPanelAccordion(['Periods for Efficiency Ratio (n):','Periods for Fast EMA Constant:','Periods for Slow EMA Constant:'],['10','2','30'],[setNForKama,setPow1ForKama,setPow2ForKama])\r\n    const ROCcontentPanel = createContentPanelAccordion(['Number of Periods (n):'],['12'],[setNForROC])\r\n    \r\n    \r\n\t  \r\n\r\n\r\n    function createAccordionTile(set,state,title){\r\n        return(\r\n        <Grid columns='equal'>\r\n        <Grid.Column width={2}>\r\n                <Checkbox borderless index={1} onClick={(event) => {\r\n                            event.stopPropagation()\r\n                            set(!state)\r\n                        }}>\r\n                </Checkbox>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n            <h5>{title}</h5>\r\n        </Grid.Column>\r\n        </Grid>)\r\n    }\r\n\r\n\r\n\t\r\n\r\n    function createContentPanelAccordion(title,place,set) {\r\n        // for (var i = 0; i < title.length; i++) {\r\n        //     return (\r\n\r\n        //     )\r\n        if (title.length == 1) {\r\n            return (\r\n            <Grid columns='equal'>\r\n                <Grid.Column>\r\n                    <br/>{title[0]}\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder={place[0]}\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            set[0](selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid>\r\n            )\r\n        } else if (title.length == 2) {\r\n            return (\r\n            <Grid columns='equal'>\r\n                <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>{title[0]}\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder={place[0]}\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            set[0](selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>{title[1]}\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder={place[1]}\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            set[1](selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            )\r\n        } else if (title.length == 3) {\r\n            return (\r\n                <Grid columns='equal'>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[0]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[0]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[0](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[1]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[1]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[1](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[2]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[2]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[2](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                )\r\n        } else if (title.length == 4) {\r\n            return (\r\n                <Grid columns='equal'>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[0]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[0]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[0](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[1]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[1]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[1](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[2]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[2]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[2](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[3]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[3]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[3](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                )\r\n    \r\n        } else if (title.length == 5) {\r\n            return (\r\n                <Grid columns='equal'>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[0]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[0]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[0](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[1]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[1]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[1](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[2]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[2]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[2](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[3]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[3]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[3](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[4]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[4]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[4](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                )\r\n        } else if (title.length == 6) {\r\n            return (\r\n                <Grid columns='equal'>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[0]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[0]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[0](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[1]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[1]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[1](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[2]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[2]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[2](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[3]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[3]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[3](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[4]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[4]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[4](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[5]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[5]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[5](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                )    \r\n        } else {}\r\n        }\r\n\r\n  return (\r\n    <div>\r\n        <Grid>\r\n        <Collapsible trigger={headerCollapsible('Momentum')}>\r\n            <Grid.Row stretched>\r\n                <div id=\"accordionIndicators\">\r\n                <Accordion as={Menu} vertical fluid borderless>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeRSIAccodianMenuItem === 0}\r\n                            content={RSIAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setRSIActiveAccordionMenuItem(index.index === activeRSIAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeRSIAccodianMenuItem === 0} content={<RSIcontentPanel/>} />\r\n\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeTSIAccodianMenuItem === 0}\r\n                            content={TSIAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setTSIActiveAccordionMenuItem(index.index === activeTSIAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeTSIAccodianMenuItem === 0} content={<TSIcontentPanel/>} />\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeUOAccodianMenuItem === 0}\r\n                            content={UOAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setUOActiveAccordionMenuItem(index.index === activeUOAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeUOAccodianMenuItem === 0} content={UOcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeAOAccodianMenuItem === 0}\r\n                            content={AOAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setAOActiveAccordionMenuItem(index.index === activeAOAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeAOAccodianMenuItem === 0} content={AOcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeStochAccodianMenuItem === 0}\r\n                            content={StochAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setStochActiveAccordionMenuItem(index.index === activeStochAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeStochAccodianMenuItem === 0} content={StochcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeStochSignalAccodianMenuItem === 0}\r\n                            content={StochSignalAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setStochSignalActiveAccordionMenuItem(index.index === activeStochSignalAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeStochSignalAccodianMenuItem === 0} content={StochSignalcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeWRAccodianMenuItem === 0}\r\n                            content={WRAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setWRActiveAccordionMenuItem(index.index === activeWRAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeWRAccodianMenuItem === 0} content={WRcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeKamaAccodianMenuItem === 0}\r\n                            content={KamaAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setKamaActiveAccordionMenuItem(index.index === activeKamaAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeKamaAccodianMenuItem === 0} content={ROCcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeROCAccodianMenuItem === 0}\r\n                            content={ROCAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setROCActiveAccordionMenuItem(index.index === activeROCAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeROCAccodianMenuItem === 0} content={ROCcontentPanel} />\r\n                    </Menu.Item>\r\n                </Accordion>\r\n                </div>\r\n            </Grid.Row>\r\n        </Collapsible>\r\n        </Grid>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n    displayRSI: state.momentumFromRootReducer.displayRSI,\r\n    nForRSI: state.momentumFromRootReducer.nForRSI\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    displayRSIdispatch: n => dispatch(displayRSI(n)),\r\n    displayTSIdispatch: n => dispatch(displayTSI(n))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MomentumMenuContainer)\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport './App.css'\r\nimport store from './redux/store'\r\nimport SelectTickerContainer from './components/SelectTickerContainer'\r\nimport SelectDatesFromMenuContainer from './components/SelectDatesFromMenuContainer'\r\nimport SelectCustomDatesContainer from './components/SelectCustomDatesContainer'\r\nimport SelectLineOrCandleContainer from './components/SelectLineOrCandleContainer'\r\nimport LineCandleGraphContainer from './components/LineCandleGraphContainer'\r\nimport { Grid} from \"semantic-ui-react\"\r\nimport MomentumMenuContainer from './components/MomentumMenuContainer'\r\n\r\n\r\nfunction App () {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className='App'>\r\n        <Grid celled>\r\n          <Grid.Column width = {4}>\r\n            <Grid.Row stretched>\r\n              <SelectTickerContainer /><br/>\r\n              <SelectDatesFromMenuContainer /><br/>\r\n              <SelectCustomDatesContainer /><br/>\r\n              <SelectLineOrCandleContainer /><br/>\r\n              <MomentumMenuContainer />\r\n            </Grid.Row>\r\n            \r\n            \r\n          </Grid.Column>\r\n          <Grid.Column width = {12}>\r\n            <LineCandleGraphContainer />\r\n          </Grid.Column>\r\n        </Grid>\r\n        \r\n        \r\n        {/* <ItemContainer cake />\r\n        <ItemContainer />\r\n        <NewCakeContainer />\r\n        <UsersContainer />\r\n        <HooksCakeContainer />\r\n        <IceCreamContainer /> */}\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n// import React, { useEffect, useState } from 'react';\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n// import { Container } from \"semantic-ui-react\"\r\n// import { StockData } from './components/StockData';\r\n// import { exampleRedux } from './components/exampleRedux'\r\n// import { Provider } from 'react-redux'\r\n// import store from './components/redux/store'\r\n// function App() {\r\n\r\n//   return (\r\n//     <Provider store={store}>\r\n//       <div className=\"App\">\r\n//       {/* <Container style={{marginTop: 40}}>\r\n//         <StockData />\r\n//       </Container> \r\n//       <StockData />*/}\r\n//         <exampleRedux />\r\n//       </div>\r\n//     </Provider>\r\n    \r\n//   );\r\n// }\r\n\r\n// export default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}