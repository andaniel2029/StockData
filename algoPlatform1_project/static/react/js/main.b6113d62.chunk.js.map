{"version":3,"sources":["logo.svg","components/AccordionExampleMenu.js","components/charts/volumeBarChart.js","components/charts/stockPriceLineChart.js","components/charts/momentumIndicatorsChart.js","components/StockData.js","components/charts/earningChart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ColorForm","Form","Group","grouped","Checkbox","label","name","value","SizeForm","Radio","type","Component","createVolumeBarChart","data","showVolumeNode","svg","select","current","selectAll","remove","margin","parseDate","d3","attr","innerHeight","x","scaleBand","domain","range","date","length","filter","d","getUTCDay","padding","y","scaleLinear","volume","rangeRound","append","call","g","tickValues","every","tickFormat","ticks","join","bandwidth","open","close","node","createStockPriceLineChart","stockPriceLineChartNode","displayPriceChart","displayEMA","displayAIdown","displayAIup","displayIchimuku","displayDPO","displayCCI","displaySMA","displayMACD","displayMACDsignal","displayADX","displayADXpos","displayADXneg","displayVIpos","displayVIneg","displayTRIX","displayMassIndex","min","max","console","log","i","clone","lineGenerator","line","curve","curveLinear","low","high","gEMA","lineGeneratorEMA","ema","gMACD","lineGeneratorMACD","macd","gMACDsignal","lineGeneratorMACDsignal","macdSignal","gAIdown","lineGeneratorAIdown","AIdown","gAIup","lineGeneratorAIup","AIup","gIchimuku","lineGeneratorIchimuku","ichimoku","gDPO","lineGeneratorDPO","dpo","gCCI","lineGeneratorCCI","cci","gSMA","lineGeneratorSMA","sma","gADX","lineGeneratorADX","adx","gADXpos","lineGeneratorADXpos","adxPositive","gADXneg","lineGeneratorADXneg","adxNegative","gVIneg","lineGeneratorVIneg","VInegative","gVIpos","lineGeneratorVIpos","VIpositive","gTRIX","lineGeneratorTRIX","trix","gMI","lineGeneratorMI","massIndex","createMomentumIndicatorsChart","momentumIndicatorsChartNode","displayRSIcheckbox","displayTSIcheckbox","displayUOcheckbox","displayStochCheckbox","displayStochSignalCheckbox","displayWR","displayAO","displayKama","displayROC","gRSI","lineGeneratorRSI","rsi","gTSI","lineGeneratorTSI","tsi","gUO","lineGeneratorUO","UO","gStoch","lineGeneratorStoch","stoch","gStochSignal","lineGeneratorStochSignal","stoch_signal","gWR","lineGeneratorWR","wr","gAO","lineGeneratorAO","ao","gKama","lineGeneratorKama","kama","gROC","lineGeneratorROC","roc","StockData","currentDate","Date","setTime","getTime","useState","startDate","setStartDate","endDate","ticker","setTicker","financials","setFinancials","earnings","setEarnings","activeItemDateMenu","setActiveItemDateMenu","activeFinancialsMenuItem","setActiveFinancialsMenuItem","activeEarningsMenuItem","setActiveEarningsMenuItem","stockData","setStockData","setDisplayPriceChart","setDisplayRSIcheckbox","NforRSI","setNforRSI","activeRSIAccodianMenuItem","setRSIActiveAccordionMenuItem","setDisplayTSIcheckbox","rForTSI","setrForTSI","sForTSI","setsForTSI","activeTSIAccodianMenuItem","setTSIActiveAccordionMenuItem","displayUOCheckbox","setDisplayUOCheckbox","sForUO","setsForUO","mForUO","setmForUO","lenForUO","setlenForUO","wsForUO","setwsForUO","wmForUO","setwmForUO","wlForUO","setwlForUO","activeUOAccodianMenuItem","setUOActiveAccordionMenuItem","setDisplayStochCheckbox","nForStoch","setNForStoch","d_nForStoch","setd_nForStoch","activeStochAccodianMenuItem","setStochActiveAccordionMenuItem","setDisplayStochSignalCheckbox","nForStochSignal","setNForStochSignal","d_nForStochSignal","setd_nForStochSignal","activeStochSignalAccodianMenuItem","setStochSignalActiveAccordionMenuItem","setDisplayWR","lbpForWR","setLBPForWR","activeWRAccodianMenuItem","setWRActiveAccordionMenuItem","setDisplayAO","sForAO","setSForAO","lenForAO","setLenForAO","activeAOAccodianMenuItem","setAOActiveAccordionMenuItem","setDisplayKama","nForKama","setNForKama","pow1ForKama","setPow1ForKama","pow2ForKama","setPow2ForKama","activeKamaAccodianMenuItem","setKamaActiveAccordionMenuItem","setDisplayROC","nForROC","setNForROC","activeROCAccodianMenuItem","setROCActiveAccordionMenuItem","setDisplayEMA","nForEMA","setNForEMA","activeEMAAccodianMenuItem","setEMAActiveAccordionMenuItem","setDisplaySMA","nForSMA","setNforSMA","activeSMAAccordionMenuItem","setActiveSMAAccordionMenuItem","setDisplayMACD","nSlowForMACD","setNslowForMACD","nFastForMACD","setNfastForMACD","activeMACDAccordionMenuItem","setActiveMACDAccordionMenuItem","setDisplayMACDsignal","nSlowForMACDsignal","setNslowForMACDsignal","nFastForMACDsignal","setNfastForMACDsignal","nSignForMACDsignal","setNsignForMACDsignal","activeMACDsignalAccordionMenuItem","setActiveMACDsignalAccordionMenuItem","setDisplayADX","nForADX","setNforADX","activeADXAccordionMenuItem","setActiveADXAccordionMenuItem","setDisplayADXpos","nForADXpos","setNforADXpos","activeADXposAccordionMenuItem","setActiveADXposAccordionMenuItem","setDisplayADXneg","nForADXneg","setNforADXneg","activeADXnegAccordionMenuItem","setActiveADXnegAccordionMenuItem","setDisplayVIpos","nForVIpos","setNforVIpos","activeVIposAccordionMenuItem","setActiveVIposAccordionMenuItem","setDisplayVIneg","nForVIneg","setNforVIneg","activeVInegAccordionMenuItem","setActiveVInegAccordionMenuItem","setDisplayTRIX","nForTRIX","setNforTRIX","activeTRIXAccordionMenuItem","setActiveTRIXAccordionMenuItem","setDisplayMassIndex","nForMassIndex","setNforMassIndex","n2ForMassIndex","setN2forMassIndex","activeMassIndexAccordionMenuItem","setActiveMassIndexAccordionMenuItem","setDisplayCCI","nForCCI","setNforCCI","cForCCI","activeCCIAccordionMenuItem","setActiveCCIAccordionMenuItem","setDisplayDPO","nForDPO","setNforDPO","activeDPOAccordionMenuItem","setActiveDPOAccordionMenuItem","setDisplayIchimoku","n1ForIchimoku","setN1forIchimoku","n2ForIchimoku","setN2forIchimoku","visualForIchimoku","activeIchimokuAccordionMenuItem","setActiveIchimokuAccordionMenuItem","setDisplayAIup","nForAIup","setNforAIup","activeAIupAccordionMenuItem","setActiveAIupAccordionMenuItem","setDisplayAIdown","nForAIdown","setNforAIdown","activeAIdownAccordionMenuItem","setActiveAIdownAccordionMenuItem","earningsChartNode","useRef","convertDatesToString","initialDate","String","getFullYear","getMonth","getDate","getAndSetStockData","stockTicker","theStartDate","theEndDate","startDateConverted","endDateConverted","fetch","then","response","json","createMomentumIndicatorsChartFunction","getAndSetFinancials","getAndSetEarnings","innerWidth","yScale","Math","consensusEPS","actualEPS","xScale","map","fiscalPeriod","enter","createEarningsChart","handleStartDateClick","handleDateClick","minusDays","dateOffset","useEffect","SMAparameters","MACDparameters","MACDsignalparameters","EMAparameters","ADXparameters","ADXposparameters","ADXnegparameters","VIposparameters","VInegparameters","TRIXparameters","MIparameters","CCIparameters","DPOparameters","Ichicomkuparameters","AIupparameters","AIdownparameters","method","headers","body","JSON","stringify","dataForTrendfromAPI","catch","error","createTrendIndicatorsChartFunction","RSIparameters","TSIparameters","UOparameters","StochParameters","StochSignalParameters","WRParameters","AOParameters","KamaParameters","ROCParameters","dataForMomfromAPI","momentumNtradingDayOptions","key","text","RSIcontentPanel","Grid","columns","Column","width","Field","control","Select","options","placeholder","compact","onChange","e","selectedOption","TSIcontentPanel","Row","UOcontentPanel","StochcontentPanel","StochSignalcontentPanel","WRcontentPanel","AOcontentPanel","KamacontentPanel","ROCcontentPanel","level1MomentumMenuPanels","title","content","as","index","Level1MomentumContent","className","Accordion","panels","EMAcontentPanel","SMAcontentPanel","MACDcontentPanel","MACDSignalcontentPanel","ADXcontentPanel","ADXposcontentPanel","ADXnegcontentPanel","VIposcontentPanel","VInegcontentPanel","TRIXcontentPanel","MassIndexcontentPanel","CCIcontentPanel","DPOcontentPanel","IchimukucontentPanel","AIupcontentPanel","AIdowncontentPanel","level1TrendMenuPanels","RSIAccordionTitle","borderless","defaultChecked","onClick","event","stopPropagation","TSIAccordionTitle","UOAccordionTitle","StochAccordionTitle","StochSignalAccordionTitle","WRAccordionTitle","AOAccordionTitle","KamaAccordionTitle","ROCAccordionTitle","EMAAccordionTitle","SMAAccordionTitle","MACDAccordionTitle","MACDsignalAccordionTitle","ADXAccordionTitle","ADXposAccordionTitle","ADXnegAccordionTitle","VIposAccordionTitle","VInegAccordionTitle","TRIXAccordionTitle","MassIndexAccordionTitle","CCIAccordionTitle","DPOAccordionTitle","IchimukuAccordionTitle","AIupAccordionTitle","AIdownAccordionTitle","celled","stretched","Input","target","isClearable","Button","animated","primary","Content","visible","hidden","Icon","Menu","widths","Item","active","Header","selected","maxDate","placeholderText","showYearDropdown","scrollableMonthYearDropdown","toggle","id","vertical","fluid","Title","Fragment","ref","Object","keys","Segment","horizontal","grossProfit","operatingRevenue","totalRevenue","totalAssets","totalLiabilities","totalCash","netIncome","researchAndDevelopment","cashFlow","totalDebt","shortTermDebt","longTermDebt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"js/main.b6113d62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport { Accordion, Form, Menu } from 'semantic-ui-react'\r\n\r\nconst ColorForm = (\r\n  <Form>\r\n    <Form.Group grouped>\r\n      <Form.Checkbox label='Red' name='color' value='red' />\r\n      <Form.Checkbox label='Orange' name='color' value='orange' />\r\n      <Form.Checkbox label='Green' name='color' value='green' />\r\n      <Form.Checkbox label='Blue' name='color' value='blue' />\r\n    </Form.Group>\r\n  </Form>\r\n)\r\n\r\nconst SizeForm = (\r\n  <Form>\r\n    <Form.Group grouped>\r\n      <Form.Radio label='Small' name='size' type='radio' value='small' />\r\n      <Form.Radio label='Medium' name='size' type='radio' value='medium' />\r\n      <Form.Radio label='Large' name='size' type='radio' value='large' />\r\n      <Form.Radio label='X-Large' name='size' type='radio' value='x-large' />\r\n    </Form.Group>\r\n  </Form>\r\n)\r\n\r\nexport default class AccordionExampleMenu extends Component {\r\n  state = { activeIndex: 0 }\r\n\r\n  handleClick = (e, titleProps) => {\r\n    const { index } = titleProps\r\n    const { activeIndex } = this.state\r\n    const newIndex = activeIndex === index ? -1 : index\r\n\r\n    this.setState({ activeIndex: newIndex })\r\n  }\r\n\r\n  render() {\r\n    const { activeIndex } = this.state\r\n\r\n    return (\r\n      <Accordion as={Menu} vertical>\r\n        <Menu.Item>\r\n          <Accordion.Title\r\n            active={activeIndex === 0}\r\n            content='Size'\r\n            index={0}\r\n            onClick={this.handleClick}\r\n          />\r\n          <Accordion.Content active={activeIndex === 0} content={SizeForm} />\r\n        </Menu.Item>\r\n\r\n        <Menu.Item>\r\n          <Accordion.Title\r\n            active={activeIndex === 1}\r\n            content='Colors'\r\n            index={1}\r\n            onClick={this.handleClick}\r\n          />\r\n          <Accordion.Content active={activeIndex === 1} content={ColorForm} />\r\n        </Menu.Item>\r\n      </Accordion>\r\n    )\r\n  }\r\n}","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { scaleLinear, scaleBand, scalePoint, tickFormat } from 'd3-scale'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\n\r\nexport function createVolumeBarChart(data,showVolumeNode) {\r\n    const svg = select(showVolumeNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n    const margin = ({top: 5, right: 30, bottom: 50, left: 40})\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    const height = 150;\r\n    const width = 700;\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    const x = scaleBand()\r\n        .domain(d3.utcDay\r\n            .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n            .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2)\r\n\r\n    // d3.min(data, d => d.volume)-(d3.max(data, d => d.volume)-d3.min(data, d => d.volume))/10\r\n    const y = scaleLinear()\r\n        .domain([0, d3.max(data, d => d.volume)])\r\n        .rangeRound([0,innerHeight])\r\n    //console.log(y.domain())\r\n    const xAxis = g => g\r\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .tickValues(d3.utcMonday\r\n                .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n            .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n        .call(g => g.select(\".domain\").remove())\r\n    \r\n\r\n    const yAxis = g => g\r\n        .attr(\"transform\", `translate(${margin.left},0)`)\r\n        .call(d3.axisLeft(y).ticks(0))\r\n        //     .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n        // .call(g => g.selectAll(\".tick line\").clone()\r\n        //     .attr(\"stroke-width\", 0))\r\n            //.attr(\"x2\", width - margin.left - margin.right))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    // yAxis.select('.domain')\r\n    //     .attr('stroke-width', 0);\r\n\r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n        \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n\r\n    const g = svg.append(\"g\")\r\n        // .attr(\"stroke\", \"black\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n        .attr(\"transform\", data => `translate(${x(parseDate(data.date))},0)`);\r\n\r\n    g.append(\"rect\")\r\n        .attr('width', d=>(x.bandwidth()+x.padding()))\r\n        .attr('height',d=>y(d.volume))\r\n        .attr(\"fill\", d => d.open > d.close ? d3.schemeSet1[0]\r\n            : d.close > d.open ? d3.schemeSet1[2]\r\n            : d3.schemeSet1[8])\r\n        .attr('transform',`translate(${x.bandwidth()},${innerHeight})  rotate(180)`)\r\n\r\n    return svg.node();\r\n}","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport * as d3 from \"d3\"\r\n\r\nimport {\r\n    select,\r\n    csv,\r\n    scaleLinear,\r\n    scaleBand,\r\n    scaleTime,\r\n    extent,\r\n    axisLeft,\r\n    axisBottom,\r\n    line,\r\n    curveBasis,\r\n    curveLinear\r\n  } from 'd3';\r\n\r\nexport function createStockPriceLineChart(data,stockPriceLineChartNode,displayPriceChart,displayEMA,displayAIdown,displayAIup,displayIchimuku,displayDPO,displayCCI,displaySMA,displayMACD,displayMACDsignal,displayADX,displayADXpos,displayADXneg,displayVIpos,displayVIneg,displayTRIX,displayMassIndex) {\r\n    var min = 0\r\n    var max = 0\r\n    console.log(displayEMA)\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i]['close'] < min) {\r\n            min = data[i]['close']\r\n        }\r\n        if (data[i]['close'] > max) {\r\n            max = data[i]['close']\r\n        }\r\n        if (displayEMA) {\r\n            if (data[i]['ema'] < min) {\r\n                min = data[i]['ema']\r\n            }\r\n            if (data[i]['ema'] > max) {\r\n                max = data[i]['ema']\r\n            }\r\n        }\r\n        if (displayAIdown) {\r\n           \r\n            if (data[i]['AIdown'] < min) {\r\n                min = data[i]['AIdown']\r\n            }\r\n            if (data[i]['AIdown'] > max) {\r\n                max = data[i]['AIdown']\r\n            }\r\n        }\r\n\r\n        \r\n        if (displayAIup) {\r\n            if (data[i]['AIup'] < min) {\r\n                min = data[i]['AIup']\r\n            }\r\n            if (data[i]['AIupuo'] > max) {\r\n                max = data[i]['AIup']\r\n            }\r\n        }\r\n        if (displayIchimuku) {\r\n            if (data[i]['ichimoku'] < min) {\r\n                min = data[i]['ichimoku']\r\n            }\r\n            if (data[i]['ichimoku'] > max) {\r\n                max = data[i]['ichimoku']\r\n            }\r\n        }\r\n        if (displayDPO) {\r\n            if (data[i]['dpo'] < min) {\r\n                min = data[i]['dpo']\r\n            }\r\n            if (data[i]['dpo'] > max) {\r\n                max = data[i]['dpo']\r\n            }\r\n        }\r\n        if (displayCCI) {\r\n            if (data[i]['cci'] < min) {\r\n                min = data[i]['cci']\r\n            }\r\n            if (data[i]['cci'] > max) {\r\n                max = data[i]['cci']\r\n            }\r\n        }\r\n        if (displaySMA) {\r\n            if (data[i]['sma'] < min) {\r\n                min = data[i]['sma']\r\n            }\r\n            if (data[i]['sma'] > max) {\r\n                max = data[i]['sma']\r\n            }\r\n        }\r\n        if (displayMACD) {\r\n            if (data[i]['macd'] < min) {\r\n                min = data[i]['macd']\r\n            }\r\n            if (data[i]['macd'] > max) {\r\n                max = data[i]['macd']\r\n            }\r\n        }\r\n        if (displayMACDsignal) {\r\n            if (data[i]['macdSignal'] < min) {\r\n                min = data[i]['macdSignal']\r\n            }\r\n            if (data[i]['macdSignal'] > max) {\r\n                max = data[i]['macdSignal']\r\n            }\r\n        }\r\n        if (displayADX) {\r\n            if (data[i]['adx'] < min) {\r\n                min = data[i]['adx']\r\n            }\r\n            if (data[i]['adx'] > max) {\r\n                max = data[i]['adx']\r\n            }\r\n        }\r\n        if (displayADXpos) {\r\n            if (data[i]['adxPositive'] < min) {\r\n                min = data[i]['adxPositive']\r\n            }\r\n            if (data[i]['adxPositive'] > max) {\r\n                max = data[i]['adxPositive']\r\n            }\r\n        }\r\n        if (displayADXneg) {\r\n            if (data[i]['adxNegative'] < min) {\r\n                min = data[i]['adxNegative']\r\n            }\r\n            if (data[i]['adxNegative'] > max) {\r\n                max = data[i]['adxNegative']\r\n            }\r\n        }\r\n        if (displayVIpos) {\r\n            if (data[i]['VIpositive'] < min) {\r\n                min = data[i]['VIpositive']\r\n            }\r\n            if (data[i]['VIpositive'] > max) {\r\n                max = data[i]['VIpositive']\r\n            }\r\n        }\r\n        if (displayVIneg) {\r\n            if (data[i]['VInegative'] < min) {\r\n                min = data[i]['VInegative']\r\n            }\r\n            if (data[i]['VInegative'] > max) {\r\n                max = data[i]['VInegative']\r\n            }\r\n        }\r\n        if (displayTRIX) {\r\n            if (data[i]['trix'] < min) {\r\n                min = data[i]['trix']\r\n            }\r\n            if (data[i]['trix'] > max) {\r\n                max = data[i]['trix']\r\n            }\r\n        }\r\n        if (displayMassIndex) {\r\n            if (data[i]['massIndex'] < min) {\r\n                min = data[i]['massIndex']\r\n            }\r\n            if (data[i]['massIndex'] > max) {\r\n                max = data[i]['massIndex']\r\n            }\r\n        }\r\n    }\r\n    if (min == 0 && max == 0) {\r\n        max = 80\r\n    }\r\n\r\n    const svg = select(stockPriceLineChartNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n\r\n    const height = 350;\r\n    const width = 700;\r\n    //const margin = ({top: 20, right: 30, bottom: 30, left: 80})\r\n    //const formatSecond = d3.timeFormat(\":%S\")\r\n    function parseSec(date) {\r\n        return new Date(date * 1000);\r\n    }\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    //new Date(secs * 1000);\r\n    const margin = ({top: 10, right: 30, bottom: 5, left: 40})\r\n    //const parseDate = d3.utcParse(\"%s\")// d3.utcParse(\"%a %b %d %Y %X %LZ\")// d3.utcParse(\"%Y-%m-%d\")\r\n    //console.log(parseDate((data[data.length - 1].date)) + 1)\r\n    const x = scaleBand()\r\n        .domain(d3.utcDay\r\n            .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n            .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2)\r\n\r\n    var y = scaleLinear()\r\n        .domain([min,max])\r\n        .rangeRound([height - margin.bottom, margin.top])\r\n            //d3.min(data, d => d.low), d3.max(data, d => d.high\r\n    \r\n\r\n    const xAxis = g => g\r\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .tickValues(d3.utcMonday\r\n                .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n            .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n        .call(g => g.select(\".domain\").remove())\r\n    \r\n\r\n    const yAxis = g => g\r\n        .attr(\"transform\", `translate(${margin.left},0)`)\r\n        .call(d3.axisLeft(y)\r\n            .tickFormat(d3.format(\"$~f\"))\r\n            .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n        .call(g => g.selectAll(\".tick line\").clone()\r\n            .attr(\"stroke-opacity\", 0)\r\n            .attr(\"x2\", width - margin.left - margin.right))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n\r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n        \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n    if (displayPriceChart) {\r\n        svg.selectAll(\"g\").selectAll(\".candleStick\").remove()\r\n\r\n        const g = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"black\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGenerator = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.close))\r\n            .curve(curveLinear);\r\n\r\n        g.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGenerator(data))\r\n            .attr('id','lineChart')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".lineChart\").remove()\r\n\r\n        const g = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"black\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        g.append(\"line\")\r\n            .attr(\"y1\", d => y(d.low))\r\n            .attr(\"y2\", d => y(d.high));\r\n\r\n        g.append(\"line\")\r\n            .attr(\"y1\", d => y(d.open))\r\n            .attr(\"y2\", d => y(d.close))\r\n            .attr(\"id\",\"candleStick\")\r\n            .attr(\"stroke-width\", x.bandwidth())\r\n            .attr(\"stroke\", d => d.open > d.close ? d3.schemeSet1[0]\r\n                : d.close > d.open ? d3.schemeSet1[2]\r\n                : d3.schemeSet1[8]);\r\n    }\r\n\r\n    if (displayEMA) {\r\n        const gEMA = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"blue\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorEMA = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.ema))\r\n            .curve(curveLinear);\r\n\r\n        gEMA.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorEMA(data))\r\n            .attr('id','ema')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".ema\").remove()\r\n    }\r\n    if (displayMACD) {\r\n        const gMACD = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"blue\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorMACD = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.macd))\r\n            .curve(curveLinear);\r\n\r\n        gMACD.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorMACD(data))\r\n            .attr('id','macd')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".macd\").remove()\r\n    }\r\n    if (displayMACDsignal) {\r\n        const gMACDsignal = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"yellow\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorMACDsignal = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.macdSignal))\r\n            .curve(curveLinear);\r\n\r\n        gMACDsignal.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorMACDsignal(data))\r\n            .attr('id','macdSignal')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".macdSignal\").remove()\r\n    }\r\n    if (displayAIdown) {\r\n        const gAIdown = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"green\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorAIdown = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.AIdown))\r\n            .curve(curveLinear);\r\n\r\n        gAIdown.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorAIdown(data))\r\n            .attr('id','AIdown')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".AIdown\").remove()\r\n    }\r\n    if (displayAIup) {\r\n        const gAIup = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"lightgreen\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorAIup = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.AIup))\r\n            .curve(curveLinear);\r\n\r\n        gAIup.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorAIup(data))\r\n            .attr('id','AIup')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".AIup\").remove()\r\n    }\r\n    if (displayIchimuku) {\r\n        const gIchimuku = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"lightblue\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorIchimuku = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.ichimoku))\r\n            .curve(curveLinear);\r\n\r\n        gIchimuku.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorIchimuku(data))\r\n            .attr('id','Ichimuku')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".Ichimuku\").remove()\r\n    }\r\n    if (displayDPO) {\r\n        const gDPO = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"red\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorDPO = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.dpo))\r\n            .curve(curveLinear);\r\n\r\n        gDPO.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorDPO(data))\r\n            .attr('id','dpo')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".dpo\").remove()\r\n    }\r\n    if (displayCCI) {\r\n        const gCCI = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"pink\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorCCI = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.cci))\r\n            .curve(curveLinear);\r\n\r\n        gCCI.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorCCI(data))\r\n            .attr('id','cci')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".cci\").remove()\r\n    }\r\n    if (displaySMA) {\r\n        const gSMA = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"purple\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorSMA = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.sma))\r\n            .curve(curveLinear);\r\n\r\n        gSMA.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorSMA(data))\r\n            .attr('id','sma')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".sma\").remove()\r\n    }\r\n    if (displayADX) {\r\n        const gADX = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"orange\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorADX = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.adx))\r\n            .curve(curveLinear);\r\n\r\n        gADX.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorADX(data))\r\n            .attr('id','adx')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".adx\").remove()\r\n    }\r\n    if (displayADXpos) {\r\n        const gADXpos = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"lightorange\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorADXpos = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.adxPositive))\r\n            .curve(curveLinear);\r\n\r\n        gADXpos.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorADXpos(data))\r\n            .attr('id','adxPos')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".adxPos\").remove()\r\n    }\r\n    if (displayADXneg) {\r\n        const gADXneg = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"darkorange\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorADXneg = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.adxNegative))\r\n            .curve(curveLinear);\r\n\r\n        gADXneg.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorADXneg(data))\r\n            .attr('id','adxNeg')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".adxNeg\").remove()\r\n    }\r\n    if (displayVIneg) {\r\n        const gVIneg = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"steelblue\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorVIneg = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.VInegative))\r\n            .curve(curveLinear);\r\n\r\n        gVIneg.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorVIneg(data))\r\n            .attr('id','VIneg')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".VIneg\").remove()\r\n    }\r\n    if (displayVIpos) {\r\n        const gVIpos = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"rgb(12,240,233)\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorVIpos = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.VIpositive))\r\n            .curve(curveLinear);\r\n\r\n        gVIpos.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorVIpos(data))\r\n            .attr('id','VIpos')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".VIpos\").remove()\r\n    }\r\n    if (displayTRIX) {\r\n        const gTRIX = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"rgba(198, 45, 205, 0.8)\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorTRIX = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.trix))\r\n            .curve(curveLinear);\r\n\r\n        gTRIX.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorTRIX(data))\r\n            .attr('id','trix')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".trix\").remove()\r\n    }\r\n    if (displayMassIndex) {\r\n        const gMI = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"darkred\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorMI = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.massIndex))\r\n            .curve(curveLinear);\r\n\r\n        gMI.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorMI(data))\r\n            .attr('id','mi')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".mi\").remove()\r\n    }\r\n\r\n\r\n// displayIchimuku,displayDPO,displayCCI,displaySMA,displayMACD,displayMACDsignal,displayADX,displayADXpos,displayADXneg,displayVIpos,displayVIneg,displayTRIX,displayMassIndex\r\n//   \r\n  return svg.node();\r\n}","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport * as d3 from \"d3\"\r\nimport {\r\n    select,\r\n    csv,\r\n    scaleLinear,\r\n    scaleBand,\r\n    scaleTime,\r\n    extent,\r\n    axisLeft,\r\n    axisBottom,\r\n    line,\r\n    curveBasis,\r\n    curveLinear\r\n  } from 'd3';\r\n\r\n\r\n\r\n  \r\n\r\nexport function createMomentumIndicatorsChart(data,momentumIndicatorsChartNode,displayRSIcheckbox,displayTSIcheckbox,displayUOcheckbox,displayStochCheckbox,displayStochSignalCheckbox,displayWR,displayAO,displayKama,displayROC) {\r\n\r\n    var min = 0\r\n    var max = 0\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (displayRSIcheckbox) {\r\n            if (data[i]['rsi'] < min) {\r\n                min = data[i]['rsi']\r\n            }\r\n            if (data[i]['rsi'] > max) {\r\n                max = data[i]['rsi']\r\n            }\r\n        }\r\n        if (displayTSIcheckbox) {\r\n            console.log(data[i]['tsi'])\r\n            if (data[i]['tsi'] < min) {\r\n                min = data[i]['tsi']\r\n                console.log(data[i]['tsi'])\r\n            }\r\n            if (data[i]['tsi'] > max) {\r\n                max = data[i]['tsi']\r\n            }\r\n        }\r\n        if (displayUOcheckbox) {\r\n            if (data[i]['uo'] < min) {\r\n                min = data[i]['uo']\r\n            }\r\n            if (data[i]['uo'] > max) {\r\n                max = data[i]['uo']\r\n            }\r\n        }\r\n        if (displayStochCheckbox) {\r\n            if (data[i]['stoch'] < min) {\r\n                min = data[i]['stoch']\r\n            }\r\n            if (data[i]['stoch'] > max) {\r\n                max = data[i]['stoch']\r\n            }\r\n        }\r\n        if (displayStochSignalCheckbox) {\r\n            if (data[i]['stoch_signal'] < min) {\r\n                min = data[i]['stoch_signal']\r\n            }\r\n            if (data[i]['stoch_signal'] > max) {\r\n                max = data[i]['stoch_signal']\r\n            }\r\n        }\r\n        if (displayWR) {\r\n            if (data[i]['wr'] < min) {\r\n                min = data[i]['wr']\r\n            }\r\n            if (data[i]['wr'] > max) {\r\n                max = data[i]['wr']\r\n            }\r\n        }\r\n        if (displayAO) {\r\n            if (data[i]['ao'] < min) {\r\n                min = data[i]['ao']\r\n            }\r\n            if (data[i]['ao'] > max) {\r\n                max = data[i]['ao']\r\n            }\r\n        }\r\n        if (displayKama) {\r\n            if (data[i]['kama'] < min) {\r\n                min = data[i]['kama']\r\n            }\r\n            if (data[i]['kama'] > max) {\r\n                max = data[i]['kama']\r\n            }\r\n        }\r\n        if (displayROC) {\r\n            if (data[i]['roc'] < min) {\r\n                min = data[i]['roc']\r\n            }\r\n            if (data[i]['roc'] > max) {\r\n                max = data[i]['roc']\r\n            }\r\n        }\r\n    }\r\n    if (min == 0 && max == 0) {\r\n        max = 80\r\n    }\r\n    \r\n    // function min_max(data,displayRSIcheckbox,displayTSIcheckbox,displayUOcheckbox,displayStochCheckbox,displayStochSignalCheckbox)  {\r\n    //     var min = 0\r\n    //     var max = 0\r\n    //     console.log(displayRSIcheckbox)\r\n    //     console.log(displayTSIcheckbox)\r\n    //     for (var i = 0; i < data.length; i++) {\r\n    //         if (displayRSIcheckbox) {\r\n    //             if (data[i]['rsi'] < min) {\r\n    //                 min = data[i]['rsi']\r\n    //             }\r\n    //             if (data[i]['rsi'] > max) {\r\n    //                 max = data[i]['rsi']\r\n    //             }\r\n    //         }\r\n    //         if (displayTSIcheckbox) {\r\n    //             console.log(data[i]['tsi'])\r\n    //             if (data[i]['tsi'] < min) {\r\n    //                 min = data[i]['tsi']\r\n    //                 console.log(data[i]['tsi'])\r\n    //             }\r\n    //             if (data[i]['tsi'] > max) {\r\n    //                 max = data[i]['tsi']\r\n    //             }\r\n    //         }\r\n    //         if (displayUOcheckbox) {\r\n    //             if (data[i]['uo'] < min) {\r\n    //                 min = data[i]['uo']\r\n    //             }\r\n    //             if (data[i]['uo'] > max) {\r\n    //                 max = data[i]['uo']\r\n    //             }\r\n    //         }\r\n    //         if (displayStochCheckbox) {\r\n    //             if (data[i]['stoch'] < min) {\r\n    //                 min = data[i]['stoch']\r\n    //             }\r\n    //             if (data[i]['stoch'] > max) {\r\n    //                 max = data[i]['stoch']\r\n    //             }\r\n    //         }\r\n    //         if (displayStochSignalCheckbox) {\r\n    //             if (data[i]['stoch_signal'] < min) {\r\n    //                 min = data[i]['stoch_signal']\r\n    //             }\r\n    //             if (data[i]['stoch_signal'] > max) {\r\n    //                 max = data[i]['stoch_signal']\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     if (min == 0 && max == 0) {\r\n    //         max = 80\r\n    //     }\r\n    //     return [min,max]\r\n    // }\r\n            \r\n    \r\n    //console.log(data)\r\n\r\n\r\n    const svg = select(momentumIndicatorsChartNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n\r\n    //console.log(displayRSIcheckbox)\r\n\r\n    const height = 150;\r\n    const width = 700;\r\n    //const margin = ({top: 20, right: 30, bottom: 30, left: 80})\r\n\r\n    const margin = ({top: 5, right: 30, bottom: 50, left: 40})\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    \r\n    const x = scaleBand()\r\n        .domain(d3.utcDay\r\n            .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n            .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2)\r\n\r\n    var y = scaleLinear()\r\n        //.domain([d3.min(data, d => d.rsi), d3.max(data, d => d.rsi)])\r\n        .domain([min,max])\r\n        .rangeRound([height - margin.bottom, margin.top])\r\n\r\n    const xAxis = g => g\r\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .tickValues(d3.utcMonday\r\n                .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n            .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    var yAxis = g => g\r\n        .attr(\"transform\", `translate(${margin.left},0)`)\r\n        .call(d3.axisLeft(y)\r\n            .tickFormat(d3.format(\"~f\"))\r\n            .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n        .call(g => g.selectAll(\".tick line\").clone()\r\n            .attr(\"stroke-opacity\", 0)\r\n            .attr(\"x2\", width - margin.left - margin.right))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n\r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n        \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n\r\n    const gRSI = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"red\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n        // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n    const lineGeneratorRSI = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.rsi))\r\n        .curve(curveLinear);\r\n\r\n    if (displayRSIcheckbox) {\r\n        gRSI.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"rsi\")\r\n        .attr('d', lineGeneratorRSI(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".rsi\").remove()\r\n    }\r\n\r\n    const gTSI = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"blue\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorTSI = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.tsi))\r\n        .curve(curveLinear);\r\n\r\n    if (displayTSIcheckbox) {\r\n        gTSI.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"tsi\")\r\n        .attr('d', lineGeneratorTSI(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".tsi\").remove()\r\n    }\r\n\r\n    const gUO = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"green\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorUO = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.UO))\r\n        .curve(curveLinear);\r\n\r\n    if (displayUOcheckbox) {\r\n        gUO.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"uo\")\r\n        .attr('d', lineGeneratorUO(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".uo\").remove()\r\n    }\r\n    \r\n    \r\n    const gStoch = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"purple\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorStoch = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.stoch))\r\n        .curve(curveLinear);\r\n\r\n    if (displayStochCheckbox) {\r\n        gStoch.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"stoch\")\r\n        .attr('d', lineGeneratorStoch(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".stoch\").remove()\r\n    }\r\n\r\n    \r\n    const gStochSignal = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"yellow\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorStochSignal = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.stoch_signal))\r\n        .curve(curveLinear);\r\n\r\n    if (displayStochSignalCheckbox) {\r\n        gStochSignal.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"stochSignal\")\r\n        .attr('d', lineGeneratorStochSignal(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".stochSignal\").remove()\r\n    }\r\n\r\n    const gWR = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"orange\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorWR = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.wr))\r\n        .curve(curveLinear);\r\n\r\n    if (displayWR) {\r\n        gWR.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"wr\")\r\n        .attr('d', lineGeneratorWR(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".wr\").remove()\r\n    }\r\n\r\n    const gAO = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"pink\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorAO = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.ao))\r\n        .curve(curveLinear);\r\n\r\n    if (displayAO) {\r\n        gAO.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"ao\")\r\n        .attr('d', lineGeneratorAO(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".ao\").remove()\r\n    }\r\n\r\n    const gKama = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"darkgreen\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorKama = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.kama))\r\n        .curve(curveLinear);\r\n\r\n    if (displayKama) {\r\n        gKama.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"kama\")\r\n        .attr('d', lineGeneratorKama(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".kama\").remove()\r\n    }\r\n\r\n    const gROC = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"lightblue\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorROC = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.roc))\r\n        .curve(curveLinear);\r\n\r\n    if (displayROC) {\r\n        gROC.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"roc\")\r\n        .attr('d', lineGeneratorROC(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".roc\").remove()\r\n    }\r\n\r\n    return svg.node();\r\n\r\n}","import React, {useState, useEffect, useRef} from 'react';\r\nimport \"semantic-ui-css/semantic.min.css\"\r\nimport '../App.css'\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { Label, List, Message, Header, Form, Input, Button, Radio, Grid, Container, Menu, Sidebar, Icon, Accordion, Segment,  Checkbox, Select } from \"semantic-ui-react\"\r\nimport AccordionExampleMenu from './AccordionExampleMenu'\r\nimport { createCandleStickChart } from './charts/candleStickChart.js'\r\nimport { createVolumeBarChart } from './charts/volumeBarChart.js'\r\nimport { createEarningsChart } from './charts/earningChart.js'\r\nimport { createStockPriceLineChart } from './charts/stockPriceLineChart';\r\nimport { createMomentumIndicatorsChart } from './charts/momentumIndicatorsChart'\r\n\r\nexport const StockData = () => {\r\n\tvar currentDate = new Date();\r\n\tvar dateOffset = (24*60*60*1000) * 182; \r\n\tvar newDate = currentDate.setTime(currentDate.getTime() - dateOffset);\r\n\t\r\n\tconst [startDate, setStartDate] = useState(currentDate);\r\n\tconst [endDate, setEndDate] = useState(new Date());\r\n\tconst [ticker, setTicker] = useState('AAPL');\r\n\tconst [financials, setFinancials] = useState([])\r\n\tconst [earnings, setEarnings] = useState([])\r\n\tconst [activeItemDateMenu, setActiveItemDateMenu] = useState('');\r\n\tconst [activeFinancialsMenuItem, setActiveFinancialsMenuItem] = useState()\r\n\tconst [activeEarningsMenuItem, setActiveEarningsMenuItem] = useState()\r\n\r\n\tconst [stockData, setStockData] = useState([]);\r\n    const [displayPriceChart, setDisplayPriceChart] = useState(true)\r\n    \r\n\tconst [displayRSIcheckbox, setDisplayRSIcheckbox] = useState(true)\r\n\tconst [NforRSI, setNforRSI] = useState(10)\r\n    const [activeRSIAccodianMenuItem, setRSIActiveAccordionMenuItem] = useState(-1)\r\n\r\n\tconst [displayTSIcheckbox, setDisplayTSIcheckbox] = useState(false)\r\n\tconst [rForTSI, setrForTSI] = useState(25)\r\n    const [sForTSI, setsForTSI] = useState(13)\r\n    const [activeTSIAccodianMenuItem, setTSIActiveAccordionMenuItem] = useState(-1)\r\n\r\n\tconst [displayUOCheckbox, setDisplayUOCheckbox] = useState(false)\r\n\tconst [sForUO, setsForUO] = useState(7)\r\n\tconst [mForUO, setmForUO] = useState(14)\r\n\tconst [lenForUO, setlenForUO] = useState(28)\r\n\tconst [wsForUO, setwsForUO] = useState(4)\r\n\tconst [wmForUO, setwmForUO] = useState(2)\r\n    const [wlForUO, setwlForUO] = useState(1)\r\n    const [activeUOAccodianMenuItem, setUOActiveAccordionMenuItem] = useState(-1)\r\n    \r\n    const [displayStochCheckbox, setDisplayStochCheckbox] = useState(false)\r\n    const [nForStoch, setNForStoch] = useState(14)\r\n    const [d_nForStoch, setd_nForStoch] = useState(3)\r\n    const [activeStochAccodianMenuItem, setStochActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayStochSignalCheckbox, setDisplayStochSignalCheckbox] = useState(false)\r\n    const [nForStochSignal, setNForStochSignal] = useState(14)\r\n    const [d_nForStochSignal, setd_nForStochSignal] = useState(3)\r\n    const [activeStochSignalAccodianMenuItem, setStochSignalActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayWR, setDisplayWR] = useState(false)\r\n    const [lbpForWR, setLBPForWR] = useState(14)\r\n    const [activeWRAccodianMenuItem, setWRActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayAO, setDisplayAO] = useState(false)\r\n    const [sForAO, setSForAO] = useState(5)\r\n    const [lenForAO, setLenForAO] = useState(34)\r\n    const [activeAOAccodianMenuItem, setAOActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayKama, setDisplayKama] = useState(false)\r\n    const [nForKama, setNForKama] = useState(10)\r\n    const [pow1ForKama, setPow1ForKama] = useState(2)\r\n    const [pow2ForKama, setPow2ForKama] = useState(30)\r\n    const [activeKamaAccodianMenuItem, setKamaActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayROC, setDisplayROC] = useState(false)\r\n    const [nForROC, setNForROC] = useState(12)\r\n    const [activeROCAccodianMenuItem, setROCActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayEMA, setDisplayEMA] = useState(false)\r\n    const [nForEMA, setNForEMA] = useState(12)\r\n    const [activeEMAAccodianMenuItem, setEMAActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displaySMA, setDisplaySMA] = useState(false)\r\n    const [nForSMA, setNforSMA] = useState(12)\r\n    const [activeSMAAccordionMenuItem, setActiveSMAAccordionMenuItem] = useState(-1)\r\n    \r\n    const [displayMACD, setDisplayMACD] = useState(false)\r\n    const [nSlowForMACD, setNslowForMACD] = useState(26)\r\n    const [nFastForMACD, setNfastForMACD] = useState(12)\r\n    const [activeMACDAccordionMenuItem, setActiveMACDAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayMACDsignal, setDisplayMACDsignal] = useState(false)\r\n    const [nSlowForMACDsignal, setNslowForMACDsignal] = useState(26)\r\n    const [nFastForMACDsignal, setNfastForMACDsignal] = useState(12)\r\n    const [nSignForMACDsignal, setNsignForMACDsignal] = useState(9)\r\n    const [activeMACDsignalAccordionMenuItem, setActiveMACDsignalAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayADX, setDisplayADX] = useState(false)\r\n    const [nForADX, setNforADX] = useState(14)\r\n    const [activeADXAccordionMenuItem, setActiveADXAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayADXpos, setDisplayADXpos] = useState(false)\r\n    const [nForADXpos, setNforADXpos] = useState(14)\r\n    const [activeADXposAccordionMenuItem, setActiveADXposAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayADXneg, setDisplayADXneg] = useState(false)\r\n    const [nForADXneg, setNforADXneg] = useState(14)\r\n    const [activeADXnegAccordionMenuItem, setActiveADXnegAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayVIpos, setDisplayVIpos] = useState(false)\r\n    const [nForVIpos, setNforVIpos] = useState(14)\r\n    const [activeVIposAccordionMenuItem, setActiveVIposAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayVIneg, setDisplayVIneg] = useState(false)\r\n    const [nForVIneg, setNforVIneg] = useState(14)\r\n    const [activeVInegAccordionMenuItem, setActiveVInegAccordionMenuItem] = useState(-1)\r\n    \r\n    const [displayTRIX, setDisplayTRIX] = useState(false)\r\n    const [nForTRIX, setNforTRIX] = useState(14)\r\n    const [activeTRIXAccordionMenuItem, setActiveTRIXAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayMassIndex, setDisplayMassIndex] = useState(false)\r\n    const [nForMassIndex, setNforMassIndex] = useState(9)\r\n    const [n2ForMassIndex, setN2forMassIndex] = useState(25)\r\n    const [activeMassIndexAccordionMenuItem, setActiveMassIndexAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayCCI, setDisplayCCI] = useState(false)\r\n    const [nForCCI, setNforCCI] = useState(20)\r\n    const [cForCCI, setCforCCI] = useState(0.015)\r\n    const [activeCCIAccordionMenuItem, setActiveCCIAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayDPO, setDisplayDPO] = useState(false)\r\n    const [nForDPO, setNforDPO] = useState(20)\r\n    const [activeDPOAccordionMenuItem, setActiveDPOAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayIchimuku, setDisplayIchimoku] = useState(false)\r\n    const [n1ForIchimoku, setN1forIchimoku] = useState(9)\r\n    const [n2ForIchimoku, setN2forIchimoku] = useState(26)\r\n    const [visualForIchimoku, setVisualForIchimoku] = useState(false)\r\n    const [activeIchimokuAccordionMenuItem, setActiveIchimokuAccordionMenuItem] = useState(-1)\r\n    \r\n    const [displayAIup, setDisplayAIup] = useState(false)\r\n    const [nForAIup, setNforAIup] = useState(25)\r\n    const [activeAIupAccordionMenuItem, setActiveAIupAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayAIdown, setDisplayAIdown] = useState(false)\r\n    const [nForAIdown, setNforAIdown] = useState(25)\r\n    const [activeAIdownAccordionMenuItem, setActiveAIdownAccordionMenuItem] = useState(-1)\r\n    \r\n\tconst earningsChartNode = useRef(null);\r\n\tconst showVolumeNode = useRef(null);\r\n\tconst stockPriceLineChartNode = useRef(null);\r\n    const momentumIndicatorsChartNode = useRef(null);\r\n\r\n\tif (stockData.length < 1 && earnings.length < 1){\r\n\t\tgetAndSetStockData(ticker,startDate,endDate)\r\n\t\t//getAndSetEarnings(ticker)\r\n\t}\r\nconsole.log(displayMACD)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (stockData.length > 0) {\r\n\t\t\t//createStockPriceLineChart(stockData,stockPriceLineChartNode,displayPriceChart);\r\n            createTrendIndicatorsChartFunction(stockData,stockPriceLineChartNode,displayPriceChart,displayEMA,displayAIdown,displayAIup,displayIchimuku,displayDPO,displayCCI,displaySMA,displayMACD,displayMACDsignal,displayADX,displayADXpos,displayADXneg,displayVIpos,displayVIneg,displayTRIX,displayMassIndex);\r\n            createVolumeBarChart(stockData,showVolumeNode);\r\n\t\t\tcreateMomentumIndicatorsChartFunction(stockData,momentumIndicatorsChartNode)\r\n\t\t}\r\n\r\n\t\tif (earnings.length > 0) {\r\n\t\t\t//console.log(earnings)\r\n\t\t\t//createEarningsChart(earnings,earningsChartNode)\r\n\t\t}\r\n\t},[stockData,displayRSIcheckbox,NforRSI,displayTSIcheckbox,rForTSI,sForTSI,displayUOCheckbox,sForUO,mForUO,lenForUO,wsForUO,wmForUO,wlForUO,displayStochCheckbox,nForStoch,d_nForStoch,,displayStochSignalCheckbox,nForStochSignal,d_nForStochSignal,displayWR,lbpForWR,displayAO,sForAO,lenForAO,displayKama,nForKama,pow1ForKama,pow2ForKama,displayROC,nForROC,displayPriceChart,displayEMA,displayAIdown,displayAIup,displayIchimuku,displayDPO,displayCCI,displaySMA,displayMACD,displayMACDsignal,displayADX,displayADXpos,displayADXneg,displayVIpos,displayVIneg,displayTRIX,displayMassIndex])\r\n\r\n\r\n\tfunction convertDatesToString(initialDate) {\r\n\t\tconst convertedDate = String(initialDate.getFullYear())+\"-\"+String(initialDate.getMonth() + 1)+\"-\"+String(initialDate.getDate())\r\n\t\treturn convertedDate\r\n\t}\r\n\r\n\tfunction getAndSetStockData(stockTicker,theStartDate,theEndDate) {\r\n\r\n\t\tconst startDateConverted = convertDatesToString(theStartDate) \r\n\t\tconst endDateConverted = convertDatesToString(theEndDate) \r\n\t\tfetch(\"/get_stock_data/\"+stockTicker+\"/\"+startDateConverted+\"/\"+endDateConverted).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tif (stockData.length < 1) {\r\n\t\t\t\t\tcreateStockPriceLineChart(data,stockPriceLineChartNode,displayPriceChart);\r\n\t\t\t\t\tcreateVolumeBarChart(data,showVolumeNode);\r\n\t\t\t\t\tcreateMomentumIndicatorsChartFunction(data,momentumIndicatorsChartNode);\r\n\t\t\t\t}\r\n\t\t\t\tsetStockData(data);\r\n\r\n\t\t\t})\r\n\t\t)\r\n\t}\r\n\r\n\tfunction getAndSetFinancials(stockTicker) {\r\n\t\tfetch(\"/get_financial_data/\"+stockTicker).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tsetFinancials(data)\r\n\t\t\t}))\r\n\t}\r\n\r\n\tfunction getAndSetEarnings(stockTicker) {\r\n\t\tfetch(\"/get_earnings_data/\"+stockTicker).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tif (earnings.length < 1) {\r\n\t\t\t\t\tcreateEarningsChart(data,earningsChartNode)\r\n\t\t\t\t}\r\n\t\t\t\tsetEarnings(data)\r\n\t\t\t}))\r\n\t}\r\n\r\n\tfunction handleStartDateClick(date) {\r\n\t\tif (date !== startDate) {\r\n\t\t\tsetStartDate(date)\r\n\t\t\t\r\n\t\t}\r\n\t\tgetAndSetStockData(ticker,date,endDate)\r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\t}\r\n\t\r\n\tfunction handleDateClick(minusDays, name) {\r\n\t\tsetActiveItemDateMenu(name)\r\n\t\t\r\n\t\tvar currentDate = new Date();\r\n\t\tvar dateOffset = (24*60*60*1000) * minusDays; \r\n\t\tvar newDate = currentDate.setTime(currentDate.getTime() - dateOffset);\r\n\t\tsetStartDate(currentDate);\r\n\t\tgetAndSetStockData(ticker,currentDate,endDate) \r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\t}\r\n\r\n\tfunction handleEndDateClick(date) {\r\n\t\tsetEndDate(date)\r\n\t\tgetAndSetStockData(ticker,startDate,date) \r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\r\n\t}\r\n\r\n\tfunction handleTickerFormSubmit() {\r\n\t\tgetAndSetStockData(ticker,startDate,endDate) \r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\t}\r\n\r\n    const handlePriceClickLine = (event, {value}) => setDisplayPriceChart(true)\r\n    const handlePriceClickCandle = (event, {value}) => setDisplayPriceChart(false)\r\n\r\n\r\n    function createTrendIndicatorsChartFunction(data, stockPriceLineChartNode) {\r\n        console.log(displayMACD)\r\n        const SMAparameters = {'displaySMA':displaySMA,'nForSMA':nForSMA}\r\n        const MACDparameters = {'displayMACD':displayMACD,'nSlow':nSlowForMACD,'nFast':nFastForMACD}\r\n        const MACDsignalparameters = {'displayMACDsignal':displayMACDsignal,'nSlow':nSlowForMACDsignal,'nFast':nFastForMACDsignal,'nSign':nSignForMACDsignal}\r\n        const EMAparameters = {'displayEMA':displayEMA,'nForEMA':nForEMA}\r\n        const ADXparameters = {'displayADX':displayADX,'nForADX':nForADX}\r\n        const ADXposparameters = {'displayADXpositive':displayADXpos,'nForADXpositive':nForADXpos}\r\n        const ADXnegparameters = {'displayADXnegative':displayADXneg,'nForADXnegative':nForADXneg}\r\n        const VIposparameters = {'displayVIpositive':displayVIpos,'nForVIpositive':nForVIpos}\r\n        const VInegparameters = {'displayVInegative':displayVIneg,'nForVInegative':nForVIneg}\r\n        const TRIXparameters = {'displayTRIX':displayTRIX,'nForTRIX':nForTRIX}\r\n        const MIparameters = {'displayMassIndex':displayMassIndex,'nForMassIndex':nForMassIndex,'n2ForMassIndex':n2ForMassIndex}\r\n        const CCIparameters = {'displayCCIcheck':displayCCI,'nForCCI':nForCCI,'cForCCI':cForCCI}\r\n        const DPOparameters = {'displayDPO':displayDPO,'nForDPO':nForDPO}\r\n        const Ichicomkuparameters = {'displayIchimoku':displayIchimuku,'n1ForIchimoku':n1ForIchimoku,'n2ForIchimoku':n2ForIchimoku,'visualForIchimoku':visualForIchimoku}\r\n        const AIupparameters = {'AIupChecked':displayAIup,'nForAIup':nForAIup}\r\n        const AIdownparameters = {'AIdownChecked':displayAIdown,'nForAIdown':nForAIdown}\r\n  \r\n        if (data.length > 1) {\r\n            fetch('/calculate_Trend_Indicators/', {\r\n\t\t\t\tmethod: 'POST', // or 'PUT'\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify([data,SMAparameters,MACDparameters,MACDsignalparameters,EMAparameters,ADXparameters,ADXposparameters,ADXnegparameters,VIposparameters,VInegparameters,TRIXparameters,MIparameters,CCIparameters,DPOparameters,Ichicomkuparameters,AIupparameters,AIdownparameters]),\r\n\t\t\t\t})\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(dataForTrendfromAPI => {\r\n\t\t\t\t\tcreateStockPriceLineChart(dataForTrendfromAPI,stockPriceLineChartNode,displayPriceChart,displayEMA,displayAIdown,displayAIup,displayIchimuku,displayDPO,displayCCI,displaySMA,displayMACD,displayMACDsignal,displayADX,displayADXpos,displayADXneg,displayVIpos,displayVIneg,displayTRIX,displayMassIndex)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t\t});\r\n        }else{\r\n\t\t\tcreateStockPriceLineChart(data,stockPriceLineChartNode,displayPriceChart,displayEMA);\r\n\t\t}\r\n    }\r\n\r\n\tfunction createMomentumIndicatorsChartFunction(data,momentumIndicatorsChartNode) {\r\n\t\t\r\n\t\tconst RSIparameters = {'N':NforRSI}\r\n\t\tconst TSIparameters = {'displayTSI':displayTSIcheckbox,'rTSI':rForTSI,'sTSI':sForTSI}\r\n\t\tconst UOparameters = {'displayUO':displayUOCheckbox,'sForUO':sForUO,'mForUO':mForUO,'lenForUO':lenForUO,'wsForUO':wsForUO,'wmForUO':wmForUO,'wlForUO':wlForUO}\r\n\t\tconst StochParameters = {'displayStoch':displayStochCheckbox,'nForStoch':nForStoch,'d_nForStoch':d_nForStoch}\r\n\t\tconst StochSignalParameters = {'displayStochSignal':displayStochSignalCheckbox,'nForStochSignal':nForStochSignal,'d_nForStochSignal':d_nForStochSignal}\r\n        const WRParameters = {'displayWR':displayWR,'lbpForWR':lbpForWR}\r\n        const AOParameters = {'displayAO':displayAO,'sForAO':sForAO,'lenForAO':lenForAO}\r\n        const KamaParameters = {'displayKama':displayKama,'nForKama':nForKama,'pow1ForKama':pow1ForKama,'pow2ForKama':pow2ForKama}\r\n        const ROCParameters = {'displayROC':displayROC,'nForROC':nForROC}\r\n        //console.log(ROCParameters)\r\n\t\tif (data.length > 1){\r\n\t\t\tfetch('/calculate_Momentum_Indicators/', {\r\n\t\t\t\tmethod: 'POST', // or 'PUT'\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify([data,RSIparameters,TSIparameters,UOparameters,StochParameters,StochSignalParameters,WRParameters,AOParameters,KamaParameters,ROCParameters]),\r\n\t\t\t\t})\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(dataForMomfromAPI => {\r\n\t\t\t\t\tcreateMomentumIndicatorsChart(dataForMomfromAPI,momentumIndicatorsChartNode,displayRSIcheckbox,displayTSIcheckbox,displayUOCheckbox,displayStochCheckbox,displayStochSignalCheckbox,displayWR,displayAO,displayKama,displayROC)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t\t});\r\n\t\t}else{\r\n\t\t\tcreateMomentumIndicatorsChart(data,momentumIndicatorsChartNode,displayRSIcheckbox,displayTSIcheckbox,displayUOCheckbox,displayStochCheckbox,displayStochSignalCheckbox,displayWR,displayAO,displayKama,displayROC)\r\n\t\t}\r\n    }\r\n \r\n\r\n\tconst momentumNtradingDayOptions = [\r\n\t\t{ key: 'one', text: '1', value: 1 },\r\n\t\t{ key: 'two', text: '2', value: 2 },\r\n\t\t{ key: 'three', text: '3', value: 3 },\r\n\t\t{ key: 'four', text: '4', value: 4 },\r\n\t\t{ key: 'five', text: '5', value: 5 },\r\n\t\t{ key: 'six', text: '6', value: 6 },\r\n\t\t{ key: 'seven', text: '7', value: 7 },\r\n\t\t{ key: 'eight', text: '8', value: 8 },\r\n\t\t{ key: 'nine', text: '9', value: 9 },\r\n\t\t{ key: 'ten', text: '10', value: 10 },\r\n\t\t{ key: 'eleven', text: '11', value: 11 },\r\n\t\t{ key: 'twelve', text: '12', value: 12 },\r\n\t\t{ key: 'thirteen', text: '13', value: 13 },\r\n\t\t{ key: 'fourteen', text: '14', value: 14 },\r\n\t\t{ key: 'fifteen', text: '15', value: 15 },\r\n\t\t{ key: 'sixteen', text: '16', value: 16 },\r\n\t\t{ key: 'seventeen', text: '17', value: 17 },\r\n\t\t{ key: 'eighteen', text: '18', value: 18 },\r\n\t\t{ key: 'ninteen', text: '19', value: 19 },\r\n\t\t{ key: 'twenty', text: '20', value: 20 },\r\n\t\t{ key: 'twentyone', text: '21', value: 21 },\r\n\t\t{ key: 'twentytwo', text: '22', value: 22 },\r\n\t\t{ key: 'twentythree', text: '23', value: 23 },\r\n\t\t{ key: 'twentyfour', text: '24', value: 24 },\r\n\t\t{ key: 'twentyfive', text: '25', value: 25 },\r\n\t\t{ key: 'twentysix', text: '26', value: 26 },\r\n\t\t{ key: 'twentyseven', text: '27', value: 27 },\r\n\t\t{ key: 'twentyeight', text: '28', value: 28 },\r\n\t\t{ key: 'twentynine', text: '29', value: 29 },\r\n        { key: 'thirty', text: '30', value: 30 },\r\n        { key: 'thirtyone', text: '31', value: 31 },\r\n\t\t{ key: 'thirtytwo', text: '32', value: 32 },\r\n\t\t{ key: 'thirtythree', text: '33', value: 33 },\r\n\t\t{ key: 'thirtyfour', text: '34', value: 34 },\r\n\t\t{ key: 'thirtyfive', text: '35', value: 35 }\r\n\t]\r\n\t  \r\n    \r\n\r\n    const RSIcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column>\r\n                <br/>Period in Trading Days (n):\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='10'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        setNforRSI(selectedOption.value)\r\n                        }}\r\n                />\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const TSIcontentPanel = (\r\n        \r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>EMA Smoothing Period (r):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='25'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setrForTSI(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>EMA Smoothing Period for Smoothed Mom (s)\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='13'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setsForTSI(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>        \r\n    )\r\n\r\n    const UOcontentPanel = (\r\n\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Short Period (s): \r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='7'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setsForUO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Medium Period (m): \r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='14'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setmForUO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Long Period (l)\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='28'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setlenForUO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Weight of Short BP Average (ws):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='4'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setwsForUO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>'Weight of Medium BP Average (wm):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='2'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setwmForUO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Weight of Long BP Average (wl):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='1'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setwlForUO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    const StochcontentPanel = (\r\n\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Period of Trading Days:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='14'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        setNForStoch(selectedOption.value)\r\n                        }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Simple Moving Average Period:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='3'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        setd_nForStoch(selectedOption.value)\r\n                    }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n        \r\n    )                    \r\n\r\n    const StochSignalcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Period of Trading Days:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='14'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        setNForStochSignal(selectedOption.value)\r\n                        }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Simple Moving Average Period:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='3'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        setd_nForStochSignal(selectedOption.value)\r\n                    }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )      \r\n    \r\n    \r\n    const WRcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Lookback Period:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='14'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        setLBPForWR(selectedOption.value)\r\n                        }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    const AOcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Short Period (s):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='5'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setSForAO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Long Period (l):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='34'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setLenForAO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    const KamacontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Periods for Efficiency Ratio (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='10'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNForKama(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Periods for Fast EMA Constant:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='2'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setPow1ForKama(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Periods for Slow EMA Constant:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='30'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setPow2ForKama(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    const ROCcontentPanel = (\r\n\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='12'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNForROC(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    const level1MomentumMenuPanels = [\r\n        { key: 'RSI', title: 'Relative Strength Index', content: {as: RSIcontentPanel}, index: 0 },\r\n        { key: 'TSI', title: 'True Strength Index', content: {as: TSIcontentPanel}, index: 1 },\r\n        { key: 'UO', title: 'Ultimate Oscillator', content: {as: UOcontentPanel}, index: 2 },\r\n        { key: 'Stoch', title: 'Stochastic Oscillator', content: {as: StochcontentPanel}, index: 3 },\r\n        { key: 'StochSignal', title: 'Stochastic Oscillator Signal', content: {as: StochSignalcontentPanel}, index: 4 },\r\n        { key: 'WR', title: 'Williams %R', content: {as: WRcontentPanel}, index: 5 },\r\n        { key: 'AO', title: 'Awesome Oscillator', content :{as: AOcontentPanel}, index: 6 },\r\n        { key: 'Kama', title: 'Kaufmans Adaptive Moving Average', content: {as: KamacontentPanel}, index: 7 },\r\n        { key: 'ROC', title: 'Rate-of-Change (ROC) indicator', content: {as: ROCcontentPanel}, index: 8 },\r\n    ]\r\n\r\n    const Level1MomentumContent = (\r\n        <div className=\"no-padding\">\r\n          {/* <Accordion.Accordion panels={level1MomentumMenuPanels} onTitleClick={handleMomentumItemClick(e,itemProps)} value={activeIndex} /> */}\r\n          <Accordion.Accordion panels={level1MomentumMenuPanels} className='no-padding'/>\r\n        </div>\r\n    )\r\n\r\n    const EMAcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='12'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNForEMA(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    const SMAcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='12'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNforSMA(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    const MACDcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Slow Periods:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='26'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNslowForMACD(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Fast Periods:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='12'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNfastForMACD(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    const MACDSignalcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Slow Periods:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='26'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNslowForMACDsignal(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Fast Periods:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='12'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNfastForMACDsignal(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>N Sign:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='12'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNsignForMACDsignal(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    const ADXcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='14'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNforADX(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n\r\n    const ADXposcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='14'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNforADXpos(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    const ADXnegcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='14'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNforADXneg(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n \r\n    \r\n    const VIposcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='14'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNforVIpos(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n    \r\n    const VInegcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='14'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNforVIneg(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n  \r\n    const TRIXcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='14'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNforTRIX(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n\r\n    const MassIndexcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n1):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='9'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNforMassIndex(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n2):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='25'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setN2forMassIndex(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    \r\n    const CCIcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='20'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNforCCI(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    const DPOcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='20'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNforDPO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    \r\n    const IchimukucontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n1):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='9'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setN1forIchimoku(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n2):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='26'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setN2forIchimoku(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n  \r\n    const AIupcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='25'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNforAIup(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n    \r\n  \r\n    const AIdowncontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='25'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNforAIdown(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n\r\n\r\n    const level1TrendMenuPanels = [\r\n        { key: 'EMA', title: 'Exponential Moving Average (EMA)', content: EMAcontentPanel, index: 0 },\r\n    ]\r\n    \r\n    const Level1TrendContent = (\r\n        <div className=\"no-padding\">\r\n          <Accordion.Accordion panels={level1TrendMenuPanels} className='no-padding'/>\r\n        </div>\r\n    )\r\n\r\n    const rootPanels = [\r\n            { key: 'panel-1-Momentum', title: 'Momentum Indicators', content: { content: Level1MomentumContent } },\r\n            { key: 'panel-1-Trend', title: 'Trend Indicators', content: { content: Level1TrendContent } },\r\n        ]\r\n\r\n    const RSIAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} defaultChecked onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayRSIcheckbox(!displayRSIcheckbox)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Relative Strength Index</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const TSIAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayTSIcheckbox(!displayTSIcheckbox)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>True Strength Index</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const UOAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayUOCheckbox(!displayUOCheckbox)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Ultimate Oscillator</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const StochAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayStochCheckbox(!displayStochCheckbox)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Stochastic Oscillator</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const StochSignalAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayStochSignalCheckbox(!displayStochSignalCheckbox)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Stochastic Oscillator Signal</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const WRAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayWR(!displayWR)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Williams %R</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const AOAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayAO(!displayAO)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Awesome Oscillator</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const KamaAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayKama(!displayKama)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Kaufmans Adaptive Moving Average</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const ROCAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayROC(!displayROC)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Rate-of-Change (ROC) indicator</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const EMAAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayEMA(!displayEMA)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Exponential Moving Average</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const SMAAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplaySMA(!displaySMA)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Simple Moving Average</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const MACDAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayMACD(!displayMACD)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Moving Average Convergence Divergence (MACD)</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const MACDsignalAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayMACDsignal(!displayMACDsignal)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Moving Average Convergence Divergence Signal</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const ADXAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayADX(!displayADX)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Average Directional Movement Index (ADX)</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const ADXposAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayADXpos(!displayADXpos)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Average Directional Movement Index (ADX) Positive</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const ADXnegAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayADXneg(!displayADXneg)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Average Directional Movement Index (ADX) Negative</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const VIposAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayVIpos(!displayVIpos)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Vortex Indicator (VI) Postive</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const VInegAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayVIneg(!displayVIneg)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Vortex Indicator (VI) Negative</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const TRIXAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayTRIX(!displayTRIX)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Trix (TRIX)</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const MassIndexAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayMassIndex(!displayMassIndex)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Mass Index (MI)</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const CCIAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayCCI(!displayCCI)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Commodity Channel Index (CCI)</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const DPOAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayDPO(!displayDPO)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Detrended Price Oscillator (DPO)</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const IchimukuAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayIchimoku(!displayIchimuku)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Tenkan-sen (Conversion Line)</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const AIupAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayAIup(!displayAIup)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Aroon Up Indicator (AI)</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const AIdownAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayAIdown(!displayAIdown)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Aroon Down Indicator (AI)</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n  \r\n    //console.log(stockData)\r\n\treturn (\r\n\t\t<div>\r\n            <Grid celled>\r\n                <Grid.Column width = {4}>\r\n                    <Grid.Row stretched>\r\n                        <Form>\r\n                            <Input \r\n                                placeholder=\"Add ticker ex) APPL\" \r\n                                value={ticker}\r\n                                name='ticker'\r\n                                onChange={(e) => setTicker(e.target.value)}\r\n                                isClearable\r\n                            />\r\n                            <Button animated primary onClick={handleTickerFormSubmit}>\r\n                                <Button.Content visible>Go!</Button.Content>\r\n                                <Button.Content hidden>\r\n                                    <Icon name='arrow right' />\r\n                                </Button.Content>\r\n                            </Button>\r\n                        </Form>\r\n                    </Grid.Row>\r\n                        <br/>\r\n                    <Grid.Row>\r\n                            \r\n                        <Menu widths={4}>\r\n                            <Menu.Item\r\n                            name='5d'\r\n                            active={activeItemDateMenu === '5d'}\r\n                            onClick={() => handleDateClick(8, '5d')}\r\n                            >\r\n                            5 d\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                            name='1m'\r\n                            active={activeItemDateMenu === '1m'}\r\n                            onClick={() => handleDateClick(30, '1m')}\r\n                            >\r\n                            1 m\r\n                            </Menu.Item>\r\n                            \r\n                            <Menu.Item\r\n                            name='6m'\r\n                            active={activeItemDateMenu === '6m'}\r\n                            onClick={() => handleDateClick(180, '6m')}\r\n                            >\r\n                            6 m\r\n                            </Menu.Item>\r\n                            \r\n                            <Menu.Item\r\n                            name='1y'\r\n                            active={activeItemDateMenu === '1y'}\r\n                            onClick={() => handleDateClick(365, '1y')}\r\n                            >\r\n                            1 y\r\n                            </Menu.Item>\r\n                            \r\n                        </Menu>\r\n                         \r\n                    </Grid.Row>\r\n                    <br/>\r\n                    <Grid.Row>\r\n                        <Header as='h4'>Custom Dates</Header>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <br/>Start:\r\n                        <DatePicker \r\n                            selected={startDate} \r\n                            maxDate={new Date()} \r\n                            onChange={date => handleStartDateClick(date)}\r\n                            placeholderText='MM/DD/YYYY'\r\n                            isClearable\r\n                            showYearDropdown\r\n                            scrollableMonthYearDropdown />\r\n                        <br/>End:\r\n                        <DatePicker \r\n                            selected={startDate} \r\n                            maxDate={new Date()} \r\n                            onChange={date => handleStartDateClick(date)}\r\n                            placeholderText='MM/DD/YYYY'\r\n                            isClearable\r\n                            showYearDropdown\r\n                            scrollableMonthYearDropdown />\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <br/> \r\n                    <br/>\r\n                   \r\n                        <Form>\r\n                            <Form.Field>\r\n                                \r\n                                <Button toggle active={displayPriceChart} onClick={handlePriceClickLine}>\r\n                                    Line Chart\r\n                                </Button>\r\n                                <Button toggle active={!displayPriceChart} onClick={handlePriceClickCandle}>\r\n                                    Candle Stick\r\n                                </Button>\r\n                            </Form.Field>\r\n                        </Form>\r\n                        \r\n                      \r\n                        \r\n                    </Grid.Row>\r\n                    <br/><br/>\r\n                    <Grid.Row stretched>\r\n                        <div id=\"accordionIndicators\">\r\n                            <Header as='h2'>Momentum</Header>\r\n                        <Accordion as={Menu} vertical fluid borderless>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeRSIAccodianMenuItem === 0}\r\n                                    content={RSIAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setRSIActiveAccordionMenuItem(index.index === activeRSIAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeRSIAccodianMenuItem === 0} content={RSIcontentPanel} />\r\n\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeTSIAccodianMenuItem === 0}\r\n                                    content={TSIAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setTSIActiveAccordionMenuItem(index.index === activeTSIAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeTSIAccodianMenuItem === 0} content={TSIcontentPanel} />\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeUOAccodianMenuItem === 0}\r\n                                    content={UOAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setUOActiveAccordionMenuItem(index.index === activeUOAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeUOAccodianMenuItem === 0} content={UOcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeAOAccodianMenuItem === 0}\r\n                                    content={AOAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setAOActiveAccordionMenuItem(index.index === activeAOAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeAOAccodianMenuItem === 0} content={AOcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeStochAccodianMenuItem === 0}\r\n                                    content={StochAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setStochActiveAccordionMenuItem(index.index === activeStochAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeStochAccodianMenuItem === 0} content={StochcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeStochSignalAccodianMenuItem === 0}\r\n                                    content={StochSignalAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setStochSignalActiveAccordionMenuItem(index.index === activeStochSignalAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeStochSignalAccodianMenuItem === 0} content={StochSignalcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeWRAccodianMenuItem === 0}\r\n                                    content={WRAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setWRActiveAccordionMenuItem(index.index === activeWRAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeWRAccodianMenuItem === 0} content={WRcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeKamaAccodianMenuItem === 0}\r\n                                    content={KamaAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setKamaActiveAccordionMenuItem(index.index === activeKamaAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeKamaAccodianMenuItem === 0} content={ROCcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeROCAccodianMenuItem === 0}\r\n                                    content={ROCAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setROCActiveAccordionMenuItem(index.index === activeROCAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeROCAccodianMenuItem === 0} content={ROCcontentPanel} />\r\n                            </Menu.Item>\r\n                        </Accordion>\r\n                        </div>\r\n                    </Grid.Row>\r\n                    <Grid.Row stretched>\r\n                        <div id=\"accordionIndicators\">\r\n                            <Header as='h2'>Trend</Header>\r\n                        <Accordion as={Menu} vertical fluid borderless>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeSMAAccordionMenuItem === 0}\r\n                                    content={SMAAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setActiveSMAAccordionMenuItem(index.index === activeSMAAccordionMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeSMAAccordionMenuItem === 0} content={SMAcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeMACDAccordionMenuItem === 0}\r\n                                    content={MACDAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setActiveMACDAccordionMenuItem(index.index === activeMACDAccordionMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeMACDAccordionMenuItem === 0} content={MACDcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeEMAAccodianMenuItem === 0}\r\n                                    content={EMAAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setEMAActiveAccordionMenuItem(index.index === activeEMAAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeEMAAccodianMenuItem === 0} content={EMAcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeMACDsignalAccordionMenuItem === 0}\r\n                                    content={MACDsignalAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setActiveMACDsignalAccordionMenuItem(index.index === activeMACDsignalAccordionMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeMACDsignalAccordionMenuItem === 0} content={MACDSignalcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeADXAccordionMenuItem === 0}\r\n                                    content={ADXAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setActiveADXAccordionMenuItem(index.index === activeADXAccordionMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeADXAccordionMenuItem === 0} content={ADXcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeADXposAccordionMenuItem === 0}\r\n                                    content={ADXposAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setActiveADXposAccordionMenuItem(index.index === activeADXposAccordionMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeADXposAccordionMenuItem === 0} content={ADXposcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeADXnegAccordionMenuItem === 0}\r\n                                    content={ADXnegAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setActiveADXnegAccordionMenuItem(index.index === activeADXnegAccordionMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeADXnegAccordionMenuItem === 0} content={ADXnegcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeVIposAccordionMenuItem === 0}\r\n                                    content={VIposAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setActiveVIposAccordionMenuItem(index.index === activeVIposAccordionMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeVIposAccordionMenuItem === 0} content={VIposcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeVInegAccordionMenuItem === 0}\r\n                                    content={VInegAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setActiveVInegAccordionMenuItem(index.index === activeVInegAccordionMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeVInegAccordionMenuItem === 0} content={VInegcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeTRIXAccordionMenuItem=== 0}\r\n                                    content={TRIXAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setActiveTRIXAccordionMenuItem(index.index === activeTRIXAccordionMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeTRIXAccordionMenuItem === 0} content={TRIXcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeMassIndexAccordionMenuItem=== 0}\r\n                                    content={MassIndexAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setActiveMassIndexAccordionMenuItem(index.index === activeMassIndexAccordionMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeMassIndexAccordionMenuItem === 0} content={MassIndexcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeCCIAccordionMenuItem=== 0}\r\n                                    content={CCIAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setActiveCCIAccordionMenuItem(index.index === activeCCIAccordionMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeCCIAccordionMenuItem === 0} content={CCIcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeDPOAccordionMenuItem=== 0}\r\n                                    content={DPOAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setActiveDPOAccordionMenuItem(index.index === activeDPOAccordionMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeDPOAccordionMenuItem === 0} content={DPOcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeIchimokuAccordionMenuItem=== 0}\r\n                                    content={IchimukuAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setActiveIchimokuAccordionMenuItem(index.index === activeIchimokuAccordionMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeIchimokuAccordionMenuItem === 0} content={IchimukucontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeAIupAccordionMenuItem=== 0}\r\n                                    content={AIupAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setActiveAIupAccordionMenuItem(index.index === activeAIupAccordionMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeAIupAccordionMenuItem === 0} content={AIupcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeAIdownAccordionMenuItem=== 0}\r\n                                    content={AIdownAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setActiveAIdownAccordionMenuItem(index.index === activeAIdownAccordionMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeAIdownAccordionMenuItem === 0} content={AIdowncontentPanel} />\r\n                            </Menu.Item>\r\n                        </Accordion>\r\n                        </div>\r\n                    </Grid.Row>\r\n                </Grid.Column>\r\n                <Grid.Column width = {12}>\r\n                    <React.Fragment>\r\n                        <svg ref={stockPriceLineChartNode}></svg>\r\n                    </React.Fragment>\r\n                    <React.Fragment>\r\n                        <svg ref={momentumIndicatorsChartNode}></svg>\r\n                    </React.Fragment>\r\n                    <React.Fragment>\r\n                        <svg ref={showVolumeNode}></svg>\r\n                    </React.Fragment>\r\n                    \r\n                    <Accordion>                          \r\n                        <Accordion.Title\r\n                            onClick={() => {\r\n                                setActiveEarningsMenuItem(!activeEarningsMenuItem)\r\n                            }}\r\n                        >\r\n                            <h3>Earnings {activeEarningsMenuItem ? \"-\" : \"+\"}</h3>\r\n                        </Accordion.Title>\r\n                        <Accordion.Content active={activeEarningsMenuItem}>\r\n                            <React.Fragment>\r\n                                <svg ref={earningsChartNode}></svg>\r\n                            </React.Fragment>\r\n                        </Accordion.Content>\r\n                        <Accordion.Title\r\n                            onClick={() => {\r\n                                setActiveFinancialsMenuItem(!activeFinancialsMenuItem)\r\n                            }}\r\n                        >\r\n                            <h3>Financials {activeFinancialsMenuItem ? \"-\" : \"+\"}</h3>\r\n                        </Accordion.Title>\r\n                        <Accordion.Content active={activeFinancialsMenuItem}>{Object.keys(financials).map(function(key,index) {\r\n                                if (financials.length > 0) {\r\n                                return(\r\n                                <Segment.Group>\r\n                                    <Segment.Group horizontal>\r\n                                        <Segment>Gross Profit (M$): {financials[key].grossProfit}</Segment>\r\n                                        <Segment>Operating Revenue (M$): {financials[key].operatingRevenue}</Segment>\r\n                                        <Segment>Total Revenue (M$): {financials[key].totalRevenue}</Segment>\r\n                                    </Segment.Group>\r\n                                    <Segment.Group horizontal>\r\n                                        <Segment>Total Assets (M$): {financials[key].totalAssets}</Segment>\r\n                                        <Segment>Total Liabilities (M$): {financials[key].totalLiabilities}</Segment>\r\n                                        <Segment>Total Cash (M$): {financials[key].totalCash}</Segment>\r\n                                    </Segment.Group>\r\n                                    <Segment.Group horizontal>\r\n                                        <Segment>Net Income (M$): {financials[key].netIncome}</Segment>\r\n                                        <Segment>Research and Development (M$): {financials[key].researchAndDevelopment}</Segment>\r\n                                        <Segment>Cash Flow (M$): {financials[key].cashFlow}</Segment>\r\n                                    </Segment.Group>\r\n                                    <Segment.Group horizontal>\r\n                                        <Segment>Total Debt (M$): {financials[key].totalDebt}</Segment>\r\n                                        <Segment>Short Term Debt (M$): {financials[key].shortTermDebt}</Segment>\r\n                                        <Segment>Long Term Debt (M$): {financials[key].longTermDebt}</Segment>\r\n                                    </Segment.Group>\r\n                                </Segment.Group>\r\n                            )}}\r\n                            )}\r\n                        </Accordion.Content>\r\n                    </Accordion>\r\n                </Grid.Column>\r\n            </Grid>    \r\n        </div>\t\r\n\t);\r\n} ","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { scaleLinear, scaleBand, scalePoint } from 'd3-scale'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\n\r\nexport function createEarningsChart(data,earningsChartNode) {\r\n    // https://www.youtube.com/watch?v=UDDGcgxficY \r\n    // stopped video at 3:41\r\n    // https://observablehq.com/d/8974f775c6a0ae5d\r\n    const svg = select(earningsChartNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n    const margin = ({top: 30, right: 30, bottom: 50, left: 40})\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    const xLabel = 'Fiscal Period';\r\n    const yLabel = 'Earnings Per Share'\r\n    const width = 700;\r\n    const height = 350;\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    const yScale = scaleLinear()\r\n        .domain([d3.min(data,d => Math.min(d.consensusEPS,d.actualEPS)),d3.max(data,d => Math.max(d.consensusEPS,d.actualEPS))])\r\n        .range([innerHeight,0])\r\n\r\n    const yAxis = d3.axisLeft(yScale)\r\n\r\n    const xScale = scaleBand()\r\n        .domain(data.map(d => d.fiscalPeriod))\r\n        .range([0,innerWidth])\r\n        \r\n    \r\n    const xAxis = d3.axisBottom(xScale);\r\n\r\n    const g = svg.append('g')\r\n        .attr('transform',`translate(${margin.left},${margin.top})`);\r\n\r\n    g.append('g').call(d3.axisLeft(yScale))\r\n        .select(\".domain\").remove();\r\n    g.append('g').call(d3.axisBottom(xScale))\r\n        .attr('transform',`translate(0,${innerHeight})`)\r\n        .select(\".domain\").remove();\r\n\r\n    g.selectAll('circle')\r\n        .data(data)\r\n        .enter()\r\n        .append('circle')\r\n            .attr('cx', d => ((xScale.bandwidth()/2)+xScale(d.fiscalPeriod)))\r\n            .attr('cy', d => yScale(d.consensusEPS))\r\n            .attr('r',30)\r\n            .attr('fill','green')\r\n            .attr('width', xScale.bandwidth())\r\n        \r\n    return svg.node();\r\n\r\n}","import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Container } from \"semantic-ui-react\"\nimport { StockData } from './components/StockData';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      {/* <Container style={{marginTop: 40}}>\n        <StockData />\n      </Container> */}\n      <StockData />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}