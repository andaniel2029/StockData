{"version":3,"sources":["redux/charts/chartsReducer.js","redux/charts/chartsTypes.js","redux/dates/datesReducer.js","redux/dates/datesTypes.js","redux/momentum/momentumActions.js","redux/momentum/momentumTypes.js","redux/momentum/momentumReducer.js","redux/trend/trendReducer.js","redux/trend/trendTypes.js","redux/tickers/tickerReducer.js","redux/tickers/tickerTypes.js","redux/stockDataRequest/stockDataReducer.js","redux/stockDataRequest/stockDataTypes.js","redux/rootReducer.js","redux/store.js","redux/tickers/tickerActions.js","redux/dates/datesActions.js","redux/trend/trendActions.js","redux/stockDataRequest/stockDataActions.js","components/SelectTickerContainer.js","components/SelectDatesFromMenuContainer.js","components/SelectCustomDatesContainer.js","components/SelectLineOrCandleContainer.js","redux/charts/chartsActions.js","components/LineCandleGraphContainer.js","components/charts/volumeBarChart.js","components/VolumeGraphContainer.js","components/accordion/momentum/RSIcontentpanel.js","components/accordion/momentum/TSIcontentpanel.js","components/MomentumMenuContainer.js","components/accordion/momentum/SMAcontentpanel.js","components/accordion/momentum/EMAcontentpanel.js","components/accordion/momentum/MACDcontentpanel.js","components/TrendMenuContainer.js","components/MomentumGraphContainer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","displayLine","chartsReducer","state","action","type","payload","currentDateInit","Date","setTime","getTime","startDate","endDate","datesReducer","fetchMomentumDataRequest","fetchMomentumDataSuccess","data","fetchMomentumDataFailure","error","displayRSI","nForRSI","displayTSI","rForTSI","sForTSI","momentumLoads","loading","momentumReducer","oldLoads","momentumData","displaySMA","nForSMA","displayEMA","nForEMA","displayMACD","nFastForMACD","nSlowForMACD","trendLoads","trendData","trendReducer","tickers","compInfo","compLoads","query","tickerReducer","comp_info","stockData","apiString","loads","StockDataReducer","rootReducer","combineReducers","tickersFromRootReducer","datesFromRootReducer","chartsFromRootReducer","momentumFromRootReducer","trendFromRootReducer","stockDataFromRootReducer","stockDataReducer","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","fetchCompInfoDataRequest","userInput","fetchCompInfoDataSuccess","fetchCompInfoDataFailure","addStartDate","date","addEndDate","fetchTrendDataSuccess","fetchTrendDataFailure","fetchStockDataSuccess","fetchStockDataFailure","connect","dispatch","addTickerDispatch","newTicker","ticker","addTicker","fetchCompInfoData","APIstring","console","log","axios","method","url","then","response","compData","catch","message","props","useState","setNewTicker","timeoutRef","useRef","handleSearchChange","useCallback","e","clearTimeout","current","value","target","String","Form","Grid","columns","Row","stretched","Column","Search","onResultSelect","result","symbol","onSearchChange","resultRenderer","name","Header","as","content","Label","results","width","Button","fluid","color","animated","onClick","Content","visible","hidden","Icon","addStartDateDispatch","addEndDateDispatch","activeItemDateMenu","setActiveItemDateMenu","setStartDate","handleDateClick","minusDays","currentDate","Menu","widths","Item","active","setEndDate","textAlign","selected","maxDate","onChange","handleStartDateClick","placeholderText","showYearDropdown","scrollableMonthYearDropdown","handleEndDateClick","addLineCandleDispatch","display","displayPriceChart","setDisplayPriceChart","Field","toggle","event","fetchStockData","fetchTrendData","fetch","headers","body","json","stockPriceLineChartNode","showVolumeNode","convertDatesToString","initialDate","getFullYear","getMonth","getDate","useEffect","SMAp","EMAp","MACDp","JSON","stringify","length","svg","select","selectAll","remove","parseDate","d3","margin","top","right","bottom","left","x","scaleBand","domain","range","filter","d","getUTCDay","padding","y","scaleLinear","low","high","rangeRound","attr","append","call","g","tickValues","every","tickFormat","ticks","clone","join","lineGenerator","line","bandwidth","close","curve","curveLinear","open","gSMA","lineGeneratorSMA","sma","node","createStockPriceLineChart","innerHeight","volume","createVolumeBarChart","Fragment","ref","nForRSIdispatch","selectedValue","control","Select","options","key","text","placeholder","compact","selectedOption","rForTSIdispatch","sForTSIdispatch","momentumNtradingDayOptions","displayRSIdispatch","varDisplayRSI","displayTSIdispatch","varDisplayTSI","activeRSIAccodianMenuItem","setRSIActiveAccordionMenuItem","activeTSIAccodianMenuItem","setTSIActiveAccordionMenuItem","displayUOCheckbox","setDisplayUOCheckbox","setsForUO","setmForUO","setlenForUO","setwsForUO","setwmForUO","setwlForUO","displayStochCheckbox","setDisplayStochCheckbox","setNForStoch","setd_nForStoch","displayStochSignalCheckbox","setDisplayStochSignalCheckbox","setNForStochSignal","setd_nForStochSignal","displayWR","setDisplayWR","setLBPForWR","displayAO","setDisplayAO","setSForAO","setLenForAO","displayKama","setDisplayKama","setNForKama","setPow1ForKama","setPow2ForKama","displayROC","setDisplayROC","setNForROC","RSIAccordionTitle","Checkbox","borderless","index","defaultChecked","stopPropagation","TSIAccordionTitle","createAccordionTile","set","title","createContentPanelAccordion","place","Accordion","vertical","Title","nForSMAdispatch","nForEMAdispatch","nFastForMACDdispatch","nSlowForMACDdispatch","displaySMAdispatch","varDisplaySMA","displayEMAdispatch","varDisplayEMA","displayMACDdispatch","varDisplayMACD","activeSMAAccordionMenuItem","setActiveSMAAccordionMenuItem","activeMACDAccordionMenuItem","setActiveMACDAccordionMenuItem","activeEMAAccodianMenuItem","setActiveEMAAccodianMenuItem","SMAAccordionTitle","MACDAccordionTitle","EMAAccordionTitle","displayEMADdispatch","fetchMomentumData","LegendLabels","displayParas","labels","colors","keysList","colorsList","i","push","legendColorList","LegendColors","momentumIndicatorsChartNode","RSIparameters","TSIparameters","Indicator","dataForInd","this","dataInd","rsi","calcD3LinePara","min","max","findMinMax","yRight","findMinMaxMACD","yAxisRight","style","enter","size","forEach","macd","d3line","gTSI","lineGeneratorTSI","tsi","gMACD","lineGeneratorMACD","createMomentumIndicatorsChart","App","activeMomentumAccodian","setMomentumAccordion","activeTrendAccodian","setTrendAccordion","className","celled","SelectLineOrCandleContainer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.3f892cd2.chunk.js","sourcesContent":["import { ADD_LINE_CANDLE } from './chartsTypes'\r\n\r\nconst initialState = {\r\n  displayLine: true\r\n}\r\n\r\nconst chartsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_LINE_CANDLE: return {\r\n      //...state,\r\n      displayLine: action.payload\r\n    }\r\n\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default chartsReducer","export const ADD_LINE_CANDLE = 'ADD_LINE_CANDLE'\r\n","import { ADD_START_DATE, ADD_END_DATE } from './datesTypes'\r\n\r\nvar currentDateInit = new Date()\r\nvar newDate = currentDateInit.setTime(currentDateInit.getTime() - (24*60*60*1000) * 182);\r\nconst initialState = {\r\n  startDate: currentDateInit,\r\n  endDate: (new Date())\r\n}\r\n\r\nconst datesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_START_DATE: return {\r\n      ...state,\r\n      startDate: action.payload\r\n    }\r\n    case ADD_END_DATE: return {\r\n      ...state,\r\n      endDate: action.payload\r\n    }\r\n\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default datesReducer","export const ADD_START_DATE = 'ADD_START_DATE'\r\nexport const ADD_END_DATE = 'ADD_END_DATE'","  \r\nimport { DISPLAY_RSI, N_FOR_RSI, DISPLAY_TSI, R_FOR_TSI, S_FOR_TSI, FETCH_MOMENTUM_DATA_REQUEST,\r\n  FETCH_MOMENTUM_DATA_SUCCESS,\r\n  FETCH_MOMENTUM_DATA_FAILURE } from './momentumTypes'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nexport const displayRSI = (n) => {\r\n  return {\r\n    type: DISPLAY_RSI,\r\n    payload: n\r\n  }\r\n}\r\nexport const nForRSI = (n) => {\r\n  return {\r\n    type: N_FOR_RSI,\r\n    payload: n\r\n  }\r\n}\r\nexport const displayTSI = (n) => {\r\n  return {\r\n    type: DISPLAY_TSI,\r\n    payload: n\r\n  }\r\n}\r\nexport const rForTSI = (n) => {\r\n  return {\r\n    type: R_FOR_TSI,\r\n    payload: n\r\n  }\r\n}\r\nexport const sForTSI = (n) => {\r\n  return {\r\n    type: S_FOR_TSI,\r\n    payload: n\r\n  }\r\n}\r\nexport function fetchMomentumData(apiString) {\r\n  return function (dispatch) {\r\n    dispatch(fetchMomentumDataRequest())\r\n    fetch('/calculate_Momentum_Indicators/', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: apiString,\r\n      })\r\n      .then(response => response.json())\r\n      .then(momentumData => {\r\n        dispatch(fetchMomentumDataSuccess(momentumData))\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchMomentumDataFailure(error.message))\r\n      });\r\n    \r\n\r\n    // axios({\r\n    //   method: 'post',\r\n    //   url: \"/calculate_Momentum_Indicators/\",\r\n    //   data: apiString\r\n    // })\r\n    //   .then(response => {\r\n    //     const momentumData = response.data \r\n    //     dispatch(fetchMomentumDataSuccess(momentumData))\r\n    //   })\r\n    //   .catch(error => {\r\n    //     dispatch(fetchMomentumDataFailure(error.message))\r\n    //   })\r\n  }\r\n}\r\n\r\n// export function fetchMomentumData(JSONmomentumString) {\r\n\r\n//   return function (dispatch) {\r\n\r\n//     axios({\r\n//       method: 'post',\r\n//       url: \"/calculate_Momentum_Indicators/\",\r\n//       data: JSONmomentumString,\r\n//     })\r\n//       .then(response => {\r\n//         const momentumData = response.data \r\n//         dispatch(fetchMomentumDataSuccess(momentumData))\r\n//       })\r\n//       .catch(error => {\r\n//         dispatch(fetchMomentumDataFailure(error.message))\r\n//       })\r\n//   }\r\n// }\r\n\r\n\r\nexport const fetchMomentumDataRequest = () => {\r\n  return {\r\n    type: FETCH_MOMENTUM_DATA_REQUEST,\r\n  }\r\n}\r\n\r\nexport const fetchMomentumDataSuccess = data => {\r\n  return {\r\n    type: FETCH_MOMENTUM_DATA_SUCCESS,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const fetchMomentumDataFailure = error => {\r\n  return {\r\n    type: FETCH_MOMENTUM_DATA_FAILURE,\r\n    payload: error\r\n  }\r\n}","export const DISPLAY_RSI = 'DISPLAY_RSI'\r\nexport const N_FOR_RSI = 'N_FOR_RSI'\r\nexport const DISPLAY_TSI = 'DISPLAY_TSI'\r\nexport const R_FOR_TSI = 'R_FOR_TSI'\r\nexport const S_FOR_TSI = 'S_FOR_TSI'\r\nexport const FETCH_MOMENTUM_DATA_REQUEST = 'FETCH_MOMENTUM_DATA_REQUEST'\r\nexport const FETCH_MOMENTUM_DATA_SUCCESS = 'FETCH_MOMENTUM_DATA_SUCCESS'\r\nexport const FETCH_MOMENTUM_DATA_FAILURE = 'FETCH_MOMENTUM_DATA_FAILURE'","import { nForRSI } from './momentumActions'\r\nimport { DISPLAY_RSI, N_FOR_RSI, DISPLAY_TSI, R_FOR_TSI, S_FOR_TSI,\r\n  FETCH_MOMENTUM_DATA_REQUEST,\r\n  FETCH_MOMENTUM_DATA_SUCCESS,\r\n  FETCH_MOMENTUM_DATA_FAILURE } from './momentumTypes'\r\n\r\nconst initialState = {\r\n  displayRSI: true,\r\n  nForRSI: 10,\r\n  displayTSI: false,\r\n  rForTSI: 25,\r\n  sForTSI: 13,\r\n  momentumLoads: 0,\r\n  loading: false\r\n}\r\n\r\nconst momentumReducer = (state = initialState, action) => {\r\n  const oldLoads = state.momentumLoads\r\n  switch (action.type) {\r\n    case DISPLAY_RSI: return {\r\n      ...state,\r\n      displayRSI: action.payload\r\n    }\r\n    case N_FOR_RSI: return {\r\n      ...state,\r\n      nForRSI: action.payload\r\n    }\r\n    case DISPLAY_TSI: return {\r\n      ...state,\r\n      displayTSI: action.payload\r\n    }\r\n    case R_FOR_TSI: return {\r\n      ...state,\r\n      rForTSI: action.payload\r\n    }\r\n    case S_FOR_TSI: return {\r\n      ...state,\r\n      sForTSI: action.payload\r\n    }\r\n    case FETCH_MOMENTUM_DATA_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case FETCH_MOMENTUM_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        momentumData: action.payload,\r\n        error: '',\r\n        momentumLoads: (oldLoads+1)\r\n      }\r\n    case FETCH_MOMENTUM_DATA_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        momentumData: [],\r\n        error: action.payload\r\n      }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default momentumReducer","//import { nForRSI } from './momentumActions'\r\nimport { DISPLAY_SMA, N_FOR_SMA, DISPLAY_EMA, N_FOR_EMA, DISPLAY_MACD, N_SLOW_FOR_MACD, N_FAST_FOR_MACD, FETCH_TREND_DATA_REQUEST,\r\n  FETCH_TREND_DATA_SUCCESS,\r\n  FETCH_TREND_DATA_FAILURE } from './trendTypes'\r\n\r\nconst initialState = {\r\n  displaySMA: false,\r\n  nForSMA: 20,\r\n  displayEMA: false,\r\n  nForEMA: 20,\r\n  displayMACD: false,\r\n  nFastForMACD: 26,\r\n  nSlowForMACD: 12,\r\n  trendLoads: 0,\r\n  trendData: []\r\n}\r\n\r\nconst trendReducer = (state = initialState, action) => {\r\n  const oldLoads = state.trendLoads\r\n  switch (action.type) {\r\n    case DISPLAY_SMA: return {\r\n      ...state,\r\n      displaySMA: action.payload\r\n    }\r\n    case N_FOR_SMA: return {\r\n      ...state,\r\n      nForSMA: action.payload\r\n    }\r\n    case DISPLAY_EMA: return {\r\n      ...state,\r\n      displayEMA: action.payload\r\n    }\r\n    case N_FOR_EMA: return {\r\n      ...state,\r\n      nForEMA: action.payload\r\n    }\r\n    case DISPLAY_MACD: return {\r\n      ...state,\r\n      displayMACD: action.payload\r\n    }\r\n    case N_FAST_FOR_MACD: return {\r\n      ...state,\r\n      nFastForMACD: action.payload\r\n    }\r\n    case N_SLOW_FOR_MACD: return {\r\n      ...state,\r\n      nSlowForMACD: action.payload\r\n    }\r\n    case FETCH_TREND_DATA_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case FETCH_TREND_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        trendData: action.payload,\r\n        error: '',\r\n        trendLoads: (oldLoads+1)\r\n      }\r\n    case FETCH_TREND_DATA_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        trendData: [],\r\n        error: action.payload\r\n      }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default trendReducer","export const DISPLAY_SMA = 'DISPLAY_SMA'\r\nexport const N_FOR_SMA = 'N_FOR_SMA'\r\nexport const DISPLAY_EMA = 'DISPLAY_EMA'\r\nexport const N_FOR_EMA = 'N_FOR_EMA'\r\nexport const DISPLAY_MACD = 'DISPLAY_MACD'\r\nexport const N_SLOW_FOR_MACD = 'N_SLOW_FOR_MACD'\r\nexport const N_FAST_FOR_MACD = 'N_FAST_FOR_MACD'\r\nexport const FETCH_TREND_DATA_REQUEST = 'FETCH_TREND_DATA_REQUEST'\r\nexport const FETCH_TREND_DATA_SUCCESS = 'FETCH_TREND_DATA_SUCCESS'\r\nexport const FETCH_TREND_DATA_FAILURE = 'FETCH_TREND_DATA_FAILURE'","import { ADD_TICKER, FETCH_COMP_INFO_REQUEST, FETCH_COMP_INFO_SUCCESS, FETCH_COMP_INFO_FAILURE  } from './tickerTypes'\r\n\r\nconst initialState = {\r\n  tickers: 'AAPL',\r\n  loading: false,\r\n  compInfo: [],\r\n  compLoads: 0,\r\n  query: ''\r\n}\r\n\r\nconst tickerReducer = (state = initialState, action) => {\r\n  const oldLoads = state.compLoads\r\n  switch (action.type) {\r\n    case ADD_TICKER: return {\r\n      //...state,\r\n      tickers: action.payload\r\n    }\r\n    case FETCH_COMP_INFO_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        query: action.payload\r\n      }\r\n    case FETCH_COMP_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        compInfo: action.payload,\r\n        error: '',\r\n        compLoads: (oldLoads+1)\r\n      }\r\n    case FETCH_COMP_INFO_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        comp_info: [],\r\n        error: action.payload\r\n      }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default tickerReducer","export const ADD_TICKER = 'ADD_TICKER'\r\nexport const FETCH_COMP_INFO_REQUEST = 'FETCH_COMP_INFO_REQUEST'\r\nexport const FETCH_COMP_INFO_SUCCESS = 'FETCH_COMP_INFO_SUCCESS'\r\nexport const FETCH_COMP_INFO_FAILURE = 'FETCH_COMP_INFO_FAILURE'","import {\r\n  FETCH_STOCK_DATA_REQUEST,\r\n  FETCH_STOCK_DATA_SUCCESS,\r\n  FETCH_STOCK_DATA_FAILURE,\r\n  REQUEST_API_CALL_INFO\r\n} from './stockDataTypes'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  stockData: [],\r\n  error: '',\r\n  apiString: 'AAPL/2020-4-21/2020-10-20',\r\n  loads: 0\r\n}\r\n\r\n// function selectedAPIstring(state = 'AAPL/2020-4-21/2020-10-20', action) {\r\n//   switch (action.type) {\r\n//     case SELECT_API_STRING:\r\n//       return action.apiString\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\nconst StockDataReducer = (state = initialState, action) => {\r\n  const oldLoads = state.loads\r\n  switch (action.type) {\r\n    \r\n    case FETCH_STOCK_DATA_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case FETCH_STOCK_DATA_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        stockData: action.payload,\r\n        error: '',\r\n        loads: (oldLoads+1)\r\n      }\r\n    case FETCH_STOCK_DATA_FAILURE:\r\n      return {\r\n        loading: false,\r\n        stockData: [],\r\n        error: action.payload\r\n      }\r\n    case REQUEST_API_CALL_INFO:\r\n      return {\r\n        apiString: action.payload\r\n      }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default StockDataReducer","export const FETCH_STOCK_DATA_REQUEST = 'FETCH_STOCK_DATA_REQUEST'\r\nexport const FETCH_STOCK_DATA_SUCCESS = 'FETCH_STOCK_DATA_SUCCESS'\r\nexport const FETCH_STOCK_DATA_FAILURE = 'FETCH_STOCK_DATA_FAILURE'\r\nexport const REQUEST_API_CALL_INFO = 'REQUEST_API_CALL_INFO'","import { combineReducers } from 'redux'\r\nimport chartsReducer from './charts/chartsReducer'\r\nimport datesReducer from './dates/datesReducer'\r\nimport momentumReducer from './momentum/momentumReducer'\r\nimport trendReducer from './trend/trendReducer'\r\nimport tickerReducer from './tickers/tickerReducer'\r\nimport stockDataReducer from './stockDataRequest/stockDataReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  tickersFromRootReducer: tickerReducer,\r\n  datesFromRootReducer: datesReducer,\r\n  chartsFromRootReducer: chartsReducer,\r\n  momentumFromRootReducer: momentumReducer,\r\n  trendFromRootReducer: trendReducer,\r\n  stockDataFromRootReducer: stockDataReducer\r\n\r\n})\r\n\r\nexport default rootReducer","  \r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(logger, thunk))\r\n)\r\n\r\nexport default store","  \r\nimport { ADD_TICKER, FETCH_COMP_INFO_REQUEST, FETCH_COMP_INFO_SUCCESS, FETCH_COMP_INFO_FAILURE } from './tickerTypes'\r\nimport axios from 'axios'\r\n\r\nexport const addTicker = (ticker = 'AAPL') => {\r\n  return {\r\n    type: ADD_TICKER,\r\n    payload: ticker\r\n  }\r\n}\r\n\r\n\r\nexport function fetchCompInfoData(APIstring) {\r\n  return function (dispatch) {\r\n    console.log('We really got Right inside the api call')\r\n    // fetch(\"/get_ticker_company_name/\"+APIstring)\r\n    //   .then(response => response.json())\r\n    //   .then(data => console.log(data));\r\n    axios({\r\n      method: 'get',\r\n      url: \"/get_ticker_company_name/\"+APIstring,\r\n    })\r\n      .then(response => {\r\n        const compData = response.data \r\n        console.log(compData)\r\n        dispatch(fetchCompInfoDataSuccess(compData))\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchCompInfoDataFailure(error.message))\r\n      })\r\n  }\r\n}\r\n    // fetch('/get_ticker_company_name/', {\r\n    //   method: 'POST', // or 'PUT'\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json',\r\n    //   },\r\n    //   body: apiString,\r\n    //   })\r\n    //   .then(response => response.json())\r\n    //   .then(CompInfoData => {\r\n    //     dispatch(fetchCompInfoDataSuccess(CompInfoData))\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     dispatch(fetchCompInfoDataFailure(error.message))\r\n    //   });\r\n//   }\r\n// }\r\n    \r\nexport const fetchCompInfoDataRequest = userInput => {\r\n  return {\r\n    type: FETCH_COMP_INFO_REQUEST,\r\n    payload: userInput\r\n  }\r\n}\r\n\r\nexport const fetchCompInfoDataSuccess = data => {\r\n  return {\r\n    type: FETCH_COMP_INFO_SUCCESS,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const fetchCompInfoDataFailure = error => {\r\n  return {\r\n    type: FETCH_COMP_INFO_FAILURE,\r\n    payload: error\r\n  }\r\n}","  \r\nimport { ADD_START_DATE, ADD_END_DATE } from './datesTypes'\r\n\r\nexport const addStartDate = (date) => {\r\n\r\n  return {\r\n    type: ADD_START_DATE,\r\n    payload: date\r\n  }\r\n}\r\n\r\nexport const addEndDate = (date) => {\r\n\r\n  return {\r\n    type: ADD_END_DATE,\r\n    payload: date\r\n  }\r\n}","  \r\nimport { DISPLAY_SMA, N_FOR_SMA, DISPLAY_EMA, N_FOR_EMA, DISPLAY_MACD, N_SLOW_FOR_MACD, N_FAST_FOR_MACD, FETCH_TREND_DATA_REQUEST,\r\n  FETCH_TREND_DATA_SUCCESS,\r\n  FETCH_TREND_DATA_FAILURE } from './trendTypes'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const displaySMA = (n) => {\r\n  return {\r\n    type: DISPLAY_SMA,\r\n    payload: n\r\n  }\r\n}\r\nexport const nForSMA = (n) => {\r\n  return {\r\n    type: N_FOR_SMA,\r\n    payload: n\r\n  }\r\n}\r\nexport const displayEMA = (n) => {\r\n  return {\r\n    type: DISPLAY_EMA,\r\n    payload: n\r\n  }\r\n}\r\nexport const nForEMA = (n) => {\r\n  return {\r\n    type: N_FOR_EMA,\r\n    payload: n\r\n  }\r\n}\r\nexport const displayMACD = (n) => {\r\n  return {\r\n    type: DISPLAY_MACD,\r\n    payload: n\r\n  }\r\n}\r\nexport const nSlowForMACD = (n) => {\r\n  return {\r\n    type: N_SLOW_FOR_MACD,\r\n    payload: n\r\n  }\r\n}\r\nexport const nFastForMACD = (n) => {\r\n  return {\r\n    type: N_FAST_FOR_MACD,\r\n    payload: n\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function fetchTrendData(apiString) {\r\n  //console.log(apiString)\r\n  return function (dispatch) {\r\n\r\n    fetch('/calculate_Trend_Indicators/', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: apiString,\r\n      })\r\n      .then(response => response.json())\r\n      .then(trendData => {\r\n        dispatch(fetchTrendDataSuccess(trendData))\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchTrendDataFailure(error.message))\r\n      });\r\n  }}\r\n  \r\n\r\nexport const fetchTrendDataRequest = () => {\r\n  return {\r\n    type: FETCH_TREND_DATA_REQUEST,\r\n  }\r\n}\r\n\r\nexport const fetchTrendDataSuccess = data => {\r\n  return {\r\n    type: FETCH_TREND_DATA_SUCCESS,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const fetchTrendDataFailure = error => {\r\n  return {\r\n    type: FETCH_TREND_DATA_FAILURE,\r\n    payload: error\r\n  }\r\n}\r\n//     // axios({\r\n//     //   method: 'post',\r\n//     //   url: \"/calculate_Momentum_Indicators/\",\r\n//     //   data: apiString\r\n//     // })\r\n//     //   .then(response => {\r\n//     //     const momentumData = response.data \r\n//     //     dispatch(fetchMomentumDataSuccess(momentumData))\r\n//     //   })\r\n//     //   .catch(error => {\r\n//     //     dispatch(fetchMomentumDataFailure(error.message))\r\n//     //   })\r\n//   }\r\n// }\r\n\r\n// export function fetchMomentumData(JSONmomentumString) {\r\n\r\n//   return function (dispatch) {\r\n\r\n//     axios({\r\n//       method: 'post',\r\n//       url: \"/calculate_Momentum_Indicators/\",\r\n//       data: JSONmomentumString,\r\n//     })\r\n//       .then(response => {\r\n//         const momentumData = response.data \r\n//         dispatch(fetchMomentumDataSuccess(momentumData))\r\n//       })\r\n//       .catch(error => {\r\n//         dispatch(fetchMomentumDataFailure(error.message))\r\n//       })\r\n//   }\r\n// }\r\n\r\n","  \r\nimport axios from 'axios'\r\nimport {\r\n  FETCH_STOCK_DATA_REQUEST,\r\n  FETCH_STOCK_DATA_SUCCESS,\r\n  FETCH_STOCK_DATA_FAILURE,\r\n  //REQUEST_API_CALL_INFO\r\n} from './stockDataTypes'\r\n\r\n\r\n// export const requestAPIstockData = (n) => {\r\n//   return {\r\n//     type: REQUEST_API_CALL_INFO,\r\n//     payload: n\r\n//   }\r\n// }\r\n\r\n\r\n// https://redux.js.org/advanced/async-actions\r\nexport function fetchStockData(apiString) {\r\n  return function (dispatch) {\r\n    axios({\r\n      method: 'get',\r\n      url: \"/get_stock_data/\"+apiString,\r\n    })\r\n      .then(response => {\r\n        const stockData = response.data \r\n        dispatch(fetchStockDataSuccess(stockData))\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchStockDataFailure(error.message))\r\n      })\r\n  }\r\n}\r\n\r\nexport const fetchStockDataRequest = () => {\r\n  return {\r\n    type: FETCH_STOCK_DATA_REQUEST,\r\n  }\r\n}\r\n\r\nexport const fetchStockDataSuccess = data => {\r\n  return {\r\n    type: FETCH_STOCK_DATA_SUCCESS,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const fetchStockDataFailure = error => {\r\n  return {\r\n    type: FETCH_STOCK_DATA_FAILURE,\r\n    payload: error\r\n  }\r\n}\r\n","import React, {useState, useRef, useCallback} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTicker, fetchCompInfoData, fetchCompInfoDataRequest } from '../redux'\r\nimport { Input, Form, Icon, Button, Grid, Search, Label, Header} from \"semantic-ui-react\"\r\nimport _ from 'lodash'\r\n\r\n\r\nfunction SelectTickerContainer(props) {\r\n  const [newTicker, setNewTicker] = useState('')\r\n  const timeoutRef = useRef()\r\n\r\n  const handleSearchChange = useCallback((e, data) => {\r\n    \r\n    clearTimeout(timeoutRef.current)\r\n    fetchCompInfoDataRequest(data.value)\r\n    setNewTicker(e.target.value)\r\n    props.fetchCompInfoData(String(data.value))\r\n    // timeoutRef.current = setTimeout(() => {\r\n    //   // const re = new RegExp(_.escapeRegExp(data.value), 'i')\r\n    //   // const isMatch = (result) => re.test(result.name)\r\n\r\n    //   console.log('We got Right before the api call')\r\n    //   fetchCompInfoData(String(data.value))\r\n    // }, 400)\r\n  }, [])\r\n\r\n  const resultRenderer = ({ name, symbol }) => {\r\n  return(\r\n    <Grid columns='equal'>\r\n      <Grid.Row stretched>\r\n        <Grid.Column>\r\n          <Header as='h5' content={name} />\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Label content={symbol} />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Grid columns='equal'>\r\n          <Grid.Row stretched>\r\n          <Grid.Column>\r\n            {/* <Input \r\n              placeholder=\"Add ticker ex) APPL\" \r\n              value={newTicker}\r\n              name='newTicker'\r\n              fluid\r\n              onChange={(e) => setNewTicker(e.target.value)}\r\n              isClearable\r\n            /> */}\r\n            <Search\r\n              loading={props.loading}\r\n              onResultSelect={(e, data) =>{\r\n                console.log(data.result.symbol)\r\n                props.addTickerDispatch(data.result.symbol)}\r\n                //dispatch({ type: 'UPDATE_SELECTION', selection: data.result.title })\r\n              }\r\n              onSearchChange={handleSearchChange}\r\n              resultRenderer={resultRenderer}\r\n              results={props.compInfo}\r\n              //value={newTicker}\r\n            />\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <Button fluid color='green' animated onClick={(e) => props.addTickerDispatch(newTicker)}>\r\n              <Button.Content visible>Go!</Button.Content>\r\n              <Button.Content hidden>\r\n                  <Icon name='arrow right' />\r\n              </Button.Content>\r\n            </Button>\r\n          </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n    </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tickers: state.tickersFromRootReducer.tickers,\r\n    loading: state.tickersFromRootReducer.loading,\r\n    compInfo: state.tickersFromRootReducer.compInfo,\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addTickerDispatch: newTicker => dispatch(addTicker(newTicker)),\r\n    fetchCompInfoData: (APIstring) => dispatch(fetchCompInfoData(APIstring)),\r\n    fetchCompInfoDataRequest: (userInput) => dispatch(fetchCompInfoDataRequest(userInput)),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SelectTickerContainer)\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addEndDate, addStartDate } from '../redux'\r\nimport {  Menu} from \"semantic-ui-react\"\r\n \r\n\r\n\r\n\r\nfunction SelectDatesFromMenuContainer(props) {\r\n  const [activeItemDateMenu, setActiveItemDateMenu] = useState('6m');\r\n  var currentDateInit = new Date()\r\n  var newDate = currentDateInit.setTime(currentDateInit.getTime() - (24*60*60*1000) * 182);\r\n  const [startDate, setStartDate] = useState(currentDateInit);\r\n  const [endDate, setEndDate] = useState(new Date())\r\n\r\n\r\n  function handleDateClick(minusDays, name) {\r\n      setActiveItemDateMenu(name)\r\n      var currentDate = new Date() //theRealCurrentDate2;\r\n      var dateOffset = (24*60*60*1000) * minusDays; \r\n      var newDate = currentDate.setTime(currentDate.getTime() - ((24*60*60*1000) * minusDays));\r\n      setStartDate( currentDate);\r\n      props.addStartDateDispatch(currentDate)\r\n      props.addEndDateDispatch(endDate)\r\n      // getAndSetStockData(ticker,currentDate,endDate) \r\n      // getAndSetFinancials(ticker);\r\n      // getAndSetEarnings(ticker);\r\n      }\r\n\r\n  return (\r\n    <div>\r\n        <Menu widths={4}>\r\n            <Menu.Item\r\n            name='5d'\r\n            active={activeItemDateMenu === '5d'}\r\n            onClick={() => handleDateClick(8, '5d')}\r\n            >\r\n            5 d\r\n            </Menu.Item>\r\n            <Menu.Item\r\n            name='1m'\r\n            active={activeItemDateMenu === '1m'}\r\n            onClick={() => handleDateClick(30, '1m')}\r\n            >\r\n            1 m\r\n            </Menu.Item>\r\n            \r\n            <Menu.Item\r\n            name='6m'\r\n            active={activeItemDateMenu === '6m'}\r\n            onClick={() => handleDateClick(180, '6m')}\r\n            >\r\n            6 m\r\n            </Menu.Item>\r\n            \r\n            <Menu.Item\r\n            name='1y'\r\n            active={activeItemDateMenu === '1y'}\r\n            onClick={() => handleDateClick(365, '1y')}\r\n            >\r\n            1 y\r\n            </Menu.Item>\r\n            \r\n        </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     startDate: state.datesFromRootReducer.startDate,\r\n//     endDate: state.datesFromRootReducer.endDate\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addStartDateDispatch: startDate => dispatch(addStartDate(startDate)),\r\n    addEndDateDispatch: endDate => dispatch(addEndDate(endDate))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  //mapStateToProps,\r\n  null,\r\n  mapDispatchToProps\r\n)(SelectDatesFromMenuContainer)","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { addEndDate, addStartDate } from '../redux'\r\nimport { Header, Grid} from \"semantic-ui-react\"\r\n\r\n\r\n\r\nfunction SelectCustomDatesContainer(props) {\r\n\r\n  var currentDateInit = new Date()\r\n  var newDate = currentDateInit.setTime(currentDateInit.getTime() - (24*60*60*1000) * 182);\r\n  const [startDate, setStartDate] = useState(currentDateInit);\r\n  const [endDate, setEndDate] = useState(new Date())\r\n  // var currentDate = new Date();\r\n\t// var dateOffset = (24*60*60*1000) * 182; \r\n\t// var newDate = currentDate.setTime(currentDate.getTime() - dateOffset);\r\n  // const [startDate, setStartDate] = useState(currentDate);\r\n  // const [endDate, setEndDate] = useState(new Date())\r\n  // var currentDate2 = new Date();\r\n  // const maxDateAllowed = currentDate2.setTime(currentDate.getTime() - (24*60*60*1000) * 365);\r\n\r\n  function handleStartDateClick(date) {\r\n\t\tif (date !== startDate) {\r\n      setStartDate(date)\r\n      props.addStartDateDispatch(date)\r\n\t\t}\r\n\t\t// getAndSetStockData(ticker,date,endDate)\r\n\t\t// getAndSetFinancials(ticker);\r\n\t\t// getAndSetEarnings(ticker);\r\n  }\r\n  \r\n  function handleEndDateClick(date) {\r\n\t\tif (date !== endDate) {\r\n      setEndDate(date)\r\n      props.addEndDateDispatch(date)\r\n\t\t}\r\n\t\t// getAndSetStockData(ticker,date,endDate)\r\n\t\t// getAndSetFinancials(ticker);\r\n\t\t// getAndSetEarnings(ticker);\r\n\t}\r\n\r\n  return (\r\n    <div>\r\n      <Header as='h3' textAlign='center'>\r\n            Custom Dates\r\n            {/* <Header.Content textAlign='center'></Header.Content> */}\r\n      </Header>\r\n      <Grid columns='equal'>\r\n        {/* <Grid.Row>\r\n          <Header as='h3' textAlign='center'>\r\n            Custom Dates\r\n            {/* <Header.Content textAlign='center'></Header.Content>\r\n          </Header>\r\n        </Grid.Row> */}\r\n        <Grid.Row stretched>\r\n          <Grid.Column width={4}>\r\n            <Header as='h5'>Start:</Header>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <DatePicker\r\n            fluid \r\n            selected={startDate} \r\n            maxDate={new Date()} \r\n            onChange={date => handleStartDateClick(date)}\r\n            placeholderText='MM/DD/YYYY'\r\n            //isClearable\r\n            showYearDropdown\r\n            scrollableMonthYearDropdown />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n          <Grid.Column width={4}>\r\n            <Header as='h5'>End:</Header>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <DatePicker \r\n            fluid\r\n            selected={endDate} \r\n            maxDate={new Date()} \r\n            onChange={date => handleEndDateClick(date)}\r\n            placeholderText='MM/DD/YYYY'\r\n            //isClearable\r\n            showYearDropdown\r\n            scrollableMonthYearDropdown />\r\n          </Grid.Column>\r\n      </Grid>\r\n      \r\n      {/* <br/>Start:\r\n      <DatePicker \r\n          selected={startDate} \r\n          maxDate={new Date()} \r\n          onChange={date => handleStartDateClick(date)}\r\n          placeholderText='MM/DD/YYYY'\r\n          isClearable\r\n          showYearDropdown\r\n          scrollableMonthYearDropdown />\r\n      <br/>End:\r\n      <DatePicker \r\n          selected={endDate} \r\n          maxDate={new Date()} \r\n          onChange={date => handleEndDateClick(date)}\r\n          placeholderText='MM/DD/YYYY'\r\n          isClearable\r\n          showYearDropdown\r\n          scrollableMonthYearDropdown /> */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     startDate: state.datesFromRootReducer.startDate,\r\n//     endDate: state.datesFromRootReducer.endDate\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addStartDateDispatch: startDate => dispatch(addStartDate(startDate)),\r\n    addEndDateDispatch: endDate => dispatch(addEndDate(endDate))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  // mapStateToProps,\r\n  null,\r\n  mapDispatchToProps\r\n)(SelectCustomDatesContainer)\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addLineChart} from '../redux'\r\nimport { Form, Button} from \"semantic-ui-react\"\r\n\r\nfunction SelectLineOrCandle(props) {\r\n  const [displayPriceChart, setDisplayPriceChart] = useState(true)\r\n  const handlePriceClickLine = (event, {value}) => {\r\n      if (displayPriceChart != true) {\r\n        setDisplayPriceChart(true)\r\n        props.addLineCandleDispatch(true)\r\n      }\r\n  }\r\n  const handlePriceClickCandle = (event, {value}) => {\r\n      if (displayPriceChart != false) {\r\n        setDisplayPriceChart(false)\r\n        props.addLineCandleDispatch(false)\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Form.Field>\r\n            <Button toggle active={displayPriceChart} color={displayPriceChart ? 'blue' : null} onClick={handlePriceClickLine}>\r\n                Line Chart\r\n            </Button>\r\n            <Button toggle active={!displayPriceChart} color={!displayPriceChart ? 'blue' : null} onClick={handlePriceClickCandle}>\r\n                Candle Stick\r\n            </Button>\r\n        </Form.Field>\r\n    </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     startDate: state.datesFromRootReducer.startDate,\r\n//     endDate: state.datesFromRootReducer.endDate\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addLineCandleDispatch: display => dispatch(addLineChart(display))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  // mapStateToProps,\r\n  null,\r\n  mapDispatchToProps\r\n)(SelectLineOrCandle)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","  \r\nimport { ADD_LINE_CANDLE } from './chartsTypes'\r\n\r\nexport const addLineChart = (displayLine) => {\r\n\r\n  return {\r\n    type: ADD_LINE_CANDLE,\r\n    payload: displayLine\r\n  }\r\n}\r\n\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchStockData } from '../redux'\r\nimport { createVolumeBarChart } from './charts/volumeBarChart.js'\r\nimport { fetchTrendData, displaySMA, nForSMA, displayEMA, displayMACD, nSlowForMACD, nFastForMACD } from '../redux';\r\nimport '../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport * as d3 from \"d3\"\r\n\r\nimport {\r\n    select,\r\n    csv,\r\n    scaleLinear,\r\n    scaleBand,\r\n    scaleTime,\r\n    extent,\r\n    axisLeft,\r\n    axisBottom,\r\n    line,\r\n    curveBasis,\r\n    curveLinear\r\n  } from 'd3';\r\n\r\nfunction LineCandleGraphContainer (props) {\r\n\r\n    const stockPriceLineChartNode = useRef(null);\r\n    const showVolumeNode = useRef(null);\r\n    const momentumIndicatorsChartNode = useRef(null);\r\n\r\n    function convertDatesToString(initialDate) {\r\n\t\tconst convertedDate = String(initialDate.getFullYear())+\"-\"+String(initialDate.getMonth() + 1)+\"-\"+String(initialDate.getDate())\r\n\t\treturn convertedDate\r\n\t}\r\n  useEffect(() => {\r\n    const SMAp = {'displaySMA':props.displaySMA,'nForSMA':props.nForSMA}\r\n    const EMAp = {'displayEMA':props.displayEMA,'nForEMA':props.nForEMA}\r\n    const MACDp = {'displayMACD':props.displayMACD,'nFastForMACD':props.nFastForMACD,'nSlowForMACD':props.nSlowForMACD}\r\n    \r\n    props.fetchStockData(String(props.tickers+\"/\"+convertDatesToString(props.startDate)+\"/\"+convertDatesToString(props.endDate)))\r\n    props.fetchTrendData(JSON.stringify([props.stockData,SMAp,EMAp,MACDp]))\r\n    // if (props.stockData.length > 1) {\r\n    //   createStockPriceLineChart(stockPriceLineChartNode)\r\n    // }  \r\n  }, [props.tickers,props.startDate,props.endDate,props.displaySMA,props.nForSMA,props.displayEMA,props.nForEMA,props.displayMACD,props.nFastForMACD,props.nSlowForMACD])\r\n\r\n  if (props.stockData.length > 1) {\r\n    createStockPriceLineChart(stockPriceLineChartNode)\r\n    createVolumeBarChart(props.stockData,showVolumeNode)\r\n    //createMomentumIndicatorsChartFunction(stockData,momentumIndicatorsChartNode)\r\n    }\r\n\r\n    function createStockPriceLineChart(stockPriceLineChartNode) {\r\n        const data = props.stockData\r\n        const trendData = props.trendData\r\n        // var min = 0\r\n            // var max = 0\r\n            // //console.log(displayEMA)\r\n            // for (var i = 0; i < data.length; i++) {\r\n            //     if (data[i]['close'] < min) {\r\n            //         min = data[i]['close']\r\n            //     }\r\n            //     if (data[i]['close'] > max) {\r\n            //         max = data[i]['close']\r\n            //     }\r\n            //     if (displayEMA) {\r\n            //         if (data[i]['ema'] < min) {\r\n            //             min = data[i]['ema']\r\n            //         }\r\n            //         if (data[i]['ema'] > max) {\r\n            //             max = data[i]['ema']\r\n            //         }\r\n            //     }\r\n            //     if (displayAIdown) {\r\n                   \r\n            //         if (data[i]['AIdown'] < min) {\r\n            //             min = data[i]['AIdown']\r\n            //         }\r\n            //         if (data[i]['AIdown'] > max) {\r\n            //             max = data[i]['AIdown']\r\n            //         }\r\n            //     }\r\n        \r\n                \r\n            //     if (displayAIup) {\r\n            //         if (data[i]['AIup'] < min) {\r\n            //             min = data[i]['AIup']\r\n            //         }\r\n            //         if (data[i]['AIupuo'] > max) {\r\n            //             max = data[i]['AIup']\r\n            //         }\r\n            //     }\r\n            //     if (displayIchimuku) {\r\n            //         if (data[i]['ichimoku'] < min) {\r\n            //             min = data[i]['ichimoku']\r\n            //         }\r\n            //         if (data[i]['ichimoku'] > max) {\r\n            //             max = data[i]['ichimoku']\r\n            //         }\r\n            //     }\r\n            //     if (displayDPO) {\r\n            //         if (data[i]['dpo'] < min) {\r\n            //             min = data[i]['dpo']\r\n            //         }\r\n            //         if (data[i]['dpo'] > max) {\r\n            //             max = data[i]['dpo']\r\n            //         }\r\n            //     }\r\n            //     if (displayCCI) {\r\n            //         if (data[i]['cci'] < min) {\r\n            //             min = data[i]['cci']\r\n            //         }\r\n            //         if (data[i]['cci'] > max) {\r\n            //             max = data[i]['cci']\r\n            //         }\r\n            //     }\r\n            //     if (displaySMA) {\r\n            //         if (data[i]['sma'] < min) {\r\n            //             min = data[i]['sma']\r\n            //         }\r\n            //         if (data[i]['sma'] > max) {\r\n            //             max = data[i]['sma']\r\n            //         }\r\n            //     }\r\n            //     if (displayMACD) {\r\n            //         if (data[i]['macd'] < min) {\r\n            //             min = data[i]['macd']\r\n            //         }\r\n            //         if (data[i]['macd'] > max) {\r\n            //             max = data[i]['macd']\r\n            //         }\r\n            //     }\r\n            //     if (displayMACDsignal) {\r\n            //         if (data[i]['macdSignal'] < min) {\r\n            //             min = data[i]['macdSignal']\r\n            //         }\r\n            //         if (data[i]['macdSignal'] > max) {\r\n            //             max = data[i]['macdSignal']\r\n            //         }\r\n            //     }\r\n            //     if (displayADX) {\r\n            //         if (data[i]['adx'] < min) {\r\n            //             min = data[i]['adx']\r\n            //         }\r\n            //         if (data[i]['adx'] > max) {\r\n            //             max = data[i]['adx']\r\n            //         }\r\n            //     }\r\n            //     if (displayADXpos) {\r\n            //         if (data[i]['adxPositive'] < min) {\r\n            //             min = data[i]['adxPositive']\r\n            //         }\r\n            //         if (data[i]['adxPositive'] > max) {\r\n            //             max = data[i]['adxPositive']\r\n            //         }\r\n            //     }\r\n            //     if (displayADXneg) {\r\n            //         if (data[i]['adxNegative'] < min) {\r\n            //             min = data[i]['adxNegative']\r\n            //         }\r\n            //         if (data[i]['adxNegative'] > max) {\r\n            //             max = data[i]['adxNegative']\r\n            //         }\r\n            //     }\r\n            //     if (displayVIpos) {\r\n            //         if (data[i]['VIpositive'] < min) {\r\n            //             min = data[i]['VIpositive']\r\n            //         }\r\n            //         if (data[i]['VIpositive'] > max) {\r\n            //             max = data[i]['VIpositive']\r\n            //         }\r\n            //     }\r\n            //     if (displayVIneg) {\r\n            //         if (data[i]['VInegative'] < min) {\r\n            //             min = data[i]['VInegative']\r\n            //         }\r\n            //         if (data[i]['VInegative'] > max) {\r\n            //             max = data[i]['VInegative']\r\n            //         }\r\n            //     }\r\n            //     if (displayTRIX) {\r\n            //         if (data[i]['trix'] < min) {\r\n            //             min = data[i]['trix']\r\n            //         }\r\n            //         if (data[i]['trix'] > max) {\r\n            //             max = data[i]['trix']\r\n            //         }\r\n            //     }\r\n            //     if (displayMassIndex) {\r\n            //         if (data[i]['massIndex'] < min) {\r\n            //             min = data[i]['massIndex']\r\n            //         }\r\n            //         if (data[i]['massIndex'] > max) {\r\n            //             max = data[i]['massIndex']\r\n            //         }\r\n            //     }\r\n            // }\r\n            // if (min == 0 && max == 0) {\r\n            //     max = 80\r\n            // }\r\n        \r\n            const svg = select(stockPriceLineChartNode.current);\r\n            svg.selectAll(\"g\").remove()\r\n        \r\n            const height = 220;\r\n            const width = 700;\r\n            //const margin = ({top: 20, right: 30, bottom: 30, left: 80})\r\n            //const formatSecond = d3.timeFormat(\":%S\")\r\n            function parseSec(date) {\r\n                return new Date(date * 1000);\r\n            }\r\n            const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n            //new Date(secs * 1000);\r\n            const margin = ({top: 1, right: 30, bottom: 20, left: 40})\r\n\r\n            const x = scaleBand()\r\n                .domain(d3.utcDay\r\n                    .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n                    .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n                .range([margin.left, width - margin.right])\r\n                .padding(0.2)\r\n        \r\n            var y = scaleLinear()\r\n                //.domain([min,max])\r\n                .domain([d3.min(data, d => d.low), d3.max(data, d => d.high)])\r\n                .rangeRound([height - margin.bottom, margin.top])\r\n                    //d3.min(data, d => d.low), d3.max(data, d => d.high\r\n            \r\n            \r\n            \r\n        \r\n            const xAxis = g => g\r\n                .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n                .call(d3.axisBottom(x)\r\n                    .tickValues(d3.utcMonday\r\n                        .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                        .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n                    .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n                .call(g => g.select(\".domain\").remove())\r\n            \r\n        \r\n            const yAxis = g => g\r\n                .attr(\"transform\", `translate(${margin.left},0)`)\r\n                .call(d3.axisLeft(y)\r\n                    .tickFormat(d3.format(\"$~f\"))\r\n                    .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n                .call(g => g.selectAll(\".tick line\").clone()\r\n                    .attr(\"stroke-opacity\", 0)\r\n                    .attr(\"x2\", width - margin.left - margin.right))\r\n                .call(g => g.select(\".domain\").remove())\r\n        \r\n            svg.attr(\"viewBox\", [0, 0, width, height])\r\n        \r\n            svg.append(\"g\")\r\n                .call(xAxis);\r\n                \r\n            svg.append(\"g\")\r\n                .call(yAxis);\r\n        \r\n    \r\n            if (props.displayLine) {\r\n                \r\n                svg.selectAll(\"g\").selectAll(\".candleStick\").remove()\r\n        \r\n                const g = svg.append(\"g\")\r\n                    .attr(\"stroke-linecap\", \"round\")\r\n                    .attr(\"stroke\", \"black\")\r\n                    .selectAll(\"g\")\r\n                    .data(data)\r\n                    .join(\"g\")\r\n                    // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n                const lineGenerator = line()\r\n                    .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n                    .y(d => y(d.close))\r\n                    .curve(curveLinear);\r\n        \r\n                g.append('path')\r\n                    .attr('class', 'line-path')\r\n                    .attr('d', lineGenerator(data))\r\n                    .attr('id','lineChart')\r\n                    .attr('fill','none')\r\n                    .attr('stroke-width',2)\r\n                    .attr('stroke-linecap','round')\r\n            }else{\r\n                svg.selectAll(\"g\").selectAll(\".lineChart\").remove()\r\n        \r\n                const g = svg.append(\"g\")\r\n                    .attr(\"stroke-linecap\", \"round\")\r\n                    .attr(\"stroke\", \"black\")\r\n                    .selectAll(\"g\")\r\n                    .data(data)\r\n                    .join(\"g\")\r\n                    .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n                g.append(\"line\")\r\n                    .attr(\"y1\", d => y(d.low))\r\n                    .attr(\"y2\", d => y(d.high));\r\n        \r\n                g.append(\"line\")\r\n                    .attr(\"y1\", d => y(d.open))\r\n                    .attr(\"y2\", d => y(d.close))\r\n                    .attr(\"id\",\"candleStick\")\r\n                    .attr(\"stroke-width\", x.bandwidth())\r\n                    .attr(\"stroke\", d => d.open > d.close ? d3.schemeSet1[0]\r\n                        : d.close > d.open ? d3.schemeSet1[2]\r\n                        : d3.schemeSet1[8]);\r\n            }\r\n        \r\n            if (props.displaySMA) {\r\n                const gSMA = svg.append(\"g\")\r\n                    .attr(\"stroke-linecap\", \"round\")\r\n                    .attr(\"stroke\", \"green\")\r\n                    .selectAll(\"g\")\r\n                    .data(trendData)\r\n                    .join(\"g\")\r\n                    // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n                const lineGeneratorSMA = line()\r\n                    .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n                    .y(d => y(d.sma))\r\n                    .curve(curveLinear);\r\n        \r\n                gSMA.append('path')\r\n                    .attr('class', 'line-path')\r\n                    .attr('d', lineGeneratorSMA(trendData))\r\n                    .attr('id','sma')\r\n                    .attr('fill','none')\r\n                    .attr('stroke-width',2)\r\n                    .attr('stroke-linecap','round')\r\n            }else{\r\n                svg.selectAll(\"g\").selectAll(\".sma\").remove()\r\n            }\r\n            // if (props.displayMACD) {\r\n            //     const gMACD = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"blue\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(trendData)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorMACD = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.macd))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gMACD.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorMACD(trendData))\r\n            //         .attr('id','macd')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".macd\").remove()\r\n            // }\r\n            // if (displayMACDsignal) {\r\n            //     const gMACDsignal = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"yellow\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorMACDsignal = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.macdSignal))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gMACDsignal.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorMACDsignal(data))\r\n            //         .attr('id','macdSignal')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".macdSignal\").remove()\r\n            // }\r\n            // if (displayAIdown) {\r\n            //     const gAIdown = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"green\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorAIdown = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.AIdown))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gAIdown.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorAIdown(data))\r\n            //         .attr('id','AIdown')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".AIdown\").remove()\r\n            // }\r\n            // if (displayAIup) {\r\n            //     const gAIup = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"lightgreen\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorAIup = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.AIup))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gAIup.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorAIup(data))\r\n            //         .attr('id','AIup')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".AIup\").remove()\r\n            // }\r\n            // if (displayIchimuku) {\r\n            //     const gIchimuku = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"lightblue\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorIchimuku = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.ichimoku))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gIchimuku.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorIchimuku(data))\r\n            //         .attr('id','Ichimuku')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".Ichimuku\").remove()\r\n            // }\r\n            // if (displayDPO) {\r\n            //     const gDPO = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"red\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorDPO = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.dpo))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gDPO.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorDPO(data))\r\n            //         .attr('id','dpo')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".dpo\").remove()\r\n            // }\r\n            // if (displayCCI) {\r\n            //     const gCCI = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"pink\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorCCI = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.cci))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gCCI.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorCCI(data))\r\n            //         .attr('id','cci')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".cci\").remove()\r\n            // }\r\n            // if (displaySMA) {\r\n            //     const gSMA = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"purple\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorSMA = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.sma))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gSMA.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorSMA(data))\r\n            //         .attr('id','sma')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".sma\").remove()\r\n            // }\r\n            // if (displayADX) {\r\n            //     const gADX = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"orange\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorADX = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.adx))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gADX.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorADX(data))\r\n            //         .attr('id','adx')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".adx\").remove()\r\n            // }\r\n            // if (displayADXpos) {\r\n            //     const gADXpos = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"lightorange\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorADXpos = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.adxPositive))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gADXpos.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorADXpos(data))\r\n            //         .attr('id','adxPos')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".adxPos\").remove()\r\n            // }\r\n            // if (displayADXneg) {\r\n            //     const gADXneg = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"darkorange\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorADXneg = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.adxNegative))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gADXneg.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorADXneg(data))\r\n            //         .attr('id','adxNeg')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".adxNeg\").remove()\r\n            // }\r\n            // if (displayVIneg) {\r\n            //     const gVIneg = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"steelblue\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorVIneg = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.VInegative))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gVIneg.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorVIneg(data))\r\n            //         .attr('id','VIneg')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".VIneg\").remove()\r\n            // }\r\n            // if (displayVIpos) {\r\n            //     const gVIpos = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"rgb(12,240,233)\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorVIpos = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.VIpositive))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gVIpos.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorVIpos(data))\r\n            //         .attr('id','VIpos')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".VIpos\").remove()\r\n            // }\r\n            // if (displayTRIX) {\r\n            //     const gTRIX = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"rgba(198, 45, 205, 0.8)\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorTRIX = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.trix))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gTRIX.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorTRIX(data))\r\n            //         .attr('id','trix')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".trix\").remove()\r\n            // }\r\n            // if (displayMassIndex) {\r\n            //     const gMI = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"darkred\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorMI = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.massIndex))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gMI.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorMI(data))\r\n            //         .attr('id','mi')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".mi\").remove()\r\n            // }\r\n        \r\n        \r\n        // displayIchimuku,displayDPO,displayCCI,displaySMA,displayMACD,displayMACDsignal,displayADX,displayADXpos,displayADXneg,displayVIpos,displayVIneg,displayTRIX,displayMassIndex\r\n        //   \r\n          return svg.node();\r\n        }\r\n\r\n  return props.stockData.loading ? (\r\n\r\n\r\n    <h2>Loading</h2>\r\n  ) : props.stockData.error ? (\r\n    <h2>{props.stockData.error}</h2>\r\n  ) : (\r\n    <div>\r\n        <React.Fragment>\r\n            <svg ref={stockPriceLineChartNode}></svg>\r\n        </React.Fragment>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tickers: state.tickersFromRootReducer.tickers,\r\n    startDate: state.datesFromRootReducer.startDate,\r\n    endDate: state.datesFromRootReducer.endDate,\r\n    stockData: state.stockDataFromRootReducer.stockData,\r\n    fetchStockData: state.stockDataFromRootReducer.fetchStockData,\r\n    displayLine: state.chartsFromRootReducer.displayLine,\r\n    displaySMA: state.trendFromRootReducer.displaySMA,\r\n    nForSMA: state.trendFromRootReducer.nForSMA,\r\n    displayEMA: state.trendFromRootReducer.displayEMA,\r\n    nForEMA: state.trendFromRootReducer.nForEMA,\r\n    displayMACD: state.trendFromRootReducer.displayMACD,\r\n    nSlowForMACD: state.trendFromRootReducer.nSlowForMACD,\r\n    nFastForMACD: state.trendFromRootReducer.nFastForMACD,\r\n    trendData: state.trendFromRootReducer.trendData\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //requestAPIstockData: (APIstring) => dispatch(requestAPIstockData(APIstring)),\r\n    fetchStockData: (APIstring) => dispatch(fetchStockData(APIstring)),\r\n    fetchTrendData: (APIstring) => dispatch(fetchTrendData(APIstring))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LineCandleGraphContainer)\r\n\r\n\r\n","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { scaleLinear, scaleBand, scalePoint, tickFormat } from 'd3-scale'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\n\r\nexport function createVolumeBarChart(data,showVolumeNode) {\r\n    const svg = select(showVolumeNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n    const margin = ({top: 5, right: 30, bottom: 50, left: 40})\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    const height = 150;\r\n    const width = 700;\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    const x = scaleBand()\r\n        .domain(d3.utcDay\r\n            .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n            .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2)\r\n\r\n    // d3.min(data, d => d.volume)-(d3.max(data, d => d.volume)-d3.min(data, d => d.volume))/10\r\n    const y = scaleLinear()\r\n        .domain([0, d3.max(data, d => d.volume)])\r\n        .rangeRound([0,innerHeight])\r\n    //console.log(y.domain())\r\n    const xAxis = g => g\r\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .tickValues(d3.utcMonday\r\n                .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n            .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n        .call(g => g.select(\".domain\").remove())\r\n    \r\n\r\n    const yAxis = g => g\r\n        .attr(\"transform\", `translate(${margin.left},0)`)\r\n        .call(d3.axisLeft(y).ticks(0))\r\n        //     .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n        // .call(g => g.selectAll(\".tick line\").clone()\r\n        //     .attr(\"stroke-width\", 0))\r\n            //.attr(\"x2\", width - margin.left - margin.right))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    // yAxis.select('.domain')\r\n    //     .attr('stroke-width', 0);\r\n\r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n        \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n\r\n    const g = svg.append(\"g\")\r\n        // .attr(\"stroke\", \"black\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n        .attr(\"transform\", data => `translate(${x(parseDate(data.date))},0)`);\r\n\r\n    g.append(\"rect\")\r\n        .attr('width', d=>(x.bandwidth()+x.padding()))\r\n        .attr('height',d=>y(d.volume))\r\n        .attr(\"fill\", d => d.open > d.close ? d3.schemeSet1[0]\r\n            : d.close > d.open ? d3.schemeSet1[2]\r\n            : d3.schemeSet1[8])\r\n        .attr('transform',`translate(${x.bandwidth()},${innerHeight})  rotate(180)`)\r\n\r\n    return svg.node();\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../App.css'\r\nimport * as d3 from \"d3\"\r\nimport {\r\n    select,\r\n    csv,\r\n    scaleLinear,\r\n    scaleBand,\r\n    scaleTime,\r\n    extent,\r\n    axisLeft,\r\n    axisBottom,\r\n    line,\r\n    curveBasis,\r\n    curveLinear\r\n  } from 'd3';\r\n\r\nfunction VolumeGraphContainer (props) {\r\n\r\n\r\n    const showVolumeNode = useRef(null);\r\n\r\n\r\n  if (props.stockData.length > 1) {\r\n    createVolumeBarChart(showVolumeNode)\r\n    }\r\n\r\n  function createVolumeBarChart(showVolumeNode) {\r\n    const data = props.stockData\r\n    const svg = select(showVolumeNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n    const margin = ({top: 5, right: 30, bottom: 5, left: 40})\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    const height = 70;\r\n    const width = 700;\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    const x = scaleBand()\r\n        .domain(d3.utcDay\r\n            .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n            .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2)\r\n\r\n    // d3.min(data, d => d.volume)-(d3.max(data, d => d.volume)-d3.min(data, d => d.volume))/10\r\n    const y = scaleLinear()\r\n        .domain([0, d3.max(data, d => d.volume)])\r\n        .rangeRound([0,innerHeight])\r\n    //console.log(y.domain())\r\n    const xAxis = g => g\r\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .tickValues(d3.utcMonday\r\n                .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n            .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n        .call(g => g.select(\".domain\").remove())\r\n    \r\n\r\n    const yAxis = g => g\r\n        .attr(\"transform\", `translate(${margin.left},0)`)\r\n        .call(d3.axisLeft(y).ticks(0))\r\n        //     .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n        // .call(g => g.selectAll(\".tick line\").clone()\r\n        //     .attr(\"stroke-width\", 0))\r\n            //.attr(\"x2\", width - margin.left - margin.right))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    // yAxis.select('.domain')\r\n    //     .attr('stroke-width', 0);\r\n\r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n        \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n\r\n    const g = svg.append(\"g\")\r\n        // .attr(\"stroke\", \"black\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n        .attr(\"transform\", data => `translate(${x(parseDate(data.date))},0)`);\r\n\r\n    g.append(\"rect\")\r\n        .attr('width', d=>(x.bandwidth()+x.padding()))\r\n        .attr('height',d=>y(d.volume))\r\n        .attr(\"fill\", d => d.open > d.close ? d3.schemeSet1[0]\r\n            : d.close > d.open ? d3.schemeSet1[2]\r\n            : d3.schemeSet1[8])\r\n        .attr('transform',`translate(${x.bandwidth()},${innerHeight})  rotate(180)`)\r\n\r\n    return svg.node();\r\n  }\r\n\r\n  return props.stockData.loading ? (\r\n\r\n\r\n    <h2>Loading</h2>\r\n  ) : props.stockData.error ? (\r\n    <h2>{props.stockData.error}</h2>\r\n  ) : (\r\n    <div>\r\n        <React.Fragment>\r\n            <svg ref={showVolumeNode}></svg>\r\n        </React.Fragment>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    stockData: state.stockDataFromRootReducer.stockData,\r\n    displayLine: state.chartsFromRootReducer.displayLine,\r\n\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(VolumeGraphContainer)\r\n\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { nForRSI } from '../../../redux'\r\nimport { Grid, Menu, Form, Select} from \"semantic-ui-react\"\r\n\r\nfunction RSIcontentPanel(props) {\r\n\r\n    const momentumNtradingDayOptions = [\r\n        { key: 'one', text: '1', value: 1 },\r\n        { key: 'two', text: '2', value: 2 },\r\n        { key: 'three', text: '3', value: 3 },\r\n        { key: 'four', text: '4', value: 4 },\r\n        { key: 'five', text: '5', value: 5 },\r\n        { key: 'six', text: '6', value: 6 },\r\n        { key: 'seven', text: '7', value: 7 },\r\n        { key: 'eight', text: '8', value: 8 },\r\n        { key: 'nine', text: '9', value: 9 },\r\n        { key: 'ten', text: '10', value: 10 },\r\n        { key: 'eleven', text: '11', value: 11 },\r\n        { key: 'twelve', text: '12', value: 12 },\r\n        { key: 'thirteen', text: '13', value: 13 },\r\n        { key: 'fourteen', text: '14', value: 14 },\r\n        { key: 'fifteen', text: '15', value: 15 },\r\n        { key: 'sixteen', text: '16', value: 16 },\r\n        { key: 'seventeen', text: '17', value: 17 },\r\n        { key: 'eighteen', text: '18', value: 18 },\r\n        { key: 'ninteen', text: '19', value: 19 },\r\n        { key: 'twenty', text: '20', value: 20 },\r\n        { key: 'twentyone', text: '21', value: 21 },\r\n        { key: 'twentytwo', text: '22', value: 22 },\r\n        { key: 'twentythree', text: '23', value: 23 },\r\n        { key: 'twentyfour', text: '24', value: 24 },\r\n        { key: 'twentyfive', text: '25', value: 25 },\r\n        { key: 'twentysix', text: '26', value: 26 },\r\n        { key: 'twentyseven', text: '27', value: 27 },\r\n        { key: 'twentyeight', text: '28', value: 28 },\r\n        { key: 'twentynine', text: '29', value: 29 },\r\n        { key: 'thirty', text: '30', value: 30 },\r\n        { key: 'thirtyone', text: '31', value: 31 },\r\n        { key: 'thirtytwo', text: '32', value: 32 },\r\n        { key: 'thirtythree', text: '33', value: 33 },\r\n        { key: 'thirtyfour', text: '34', value: 34 },\r\n        { key: 'thirtyfive', text: '35', value: 35 }\r\n    ]\r\n    return (\r\n    <Grid columns='equal'>\r\n            <Grid.Column>\r\n                <br/>'Period in Trading Days (n):'\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='10'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        props.nForRSIdispatch(selectedOption.value)\r\n                        }}\r\n                />\r\n            </Grid.Column>\r\n        </Grid>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    nForRSI: state.momentumFromRootReducer.nForRSI\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    nForRSIdispatch: selectedValue => dispatch(nForRSI(selectedValue))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RSIcontentPanel)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { rForTSI, sForTSI } from '../../../redux'\r\nimport { Grid, Menu, Form, Select} from \"semantic-ui-react\"\r\n\r\nfunction TSIcontentPanel(props) {\r\n\r\n    const momentumNtradingDayOptions = [\r\n        { key: 'one', text: '1', value: 1 },\r\n        { key: 'two', text: '2', value: 2 },\r\n        { key: 'three', text: '3', value: 3 },\r\n        { key: 'four', text: '4', value: 4 },\r\n        { key: 'five', text: '5', value: 5 },\r\n        { key: 'six', text: '6', value: 6 },\r\n        { key: 'seven', text: '7', value: 7 },\r\n        { key: 'eight', text: '8', value: 8 },\r\n        { key: 'nine', text: '9', value: 9 },\r\n        { key: 'ten', text: '10', value: 10 },\r\n        { key: 'eleven', text: '11', value: 11 },\r\n        { key: 'twelve', text: '12', value: 12 },\r\n        { key: 'thirteen', text: '13', value: 13 },\r\n        { key: 'fourteen', text: '14', value: 14 },\r\n        { key: 'fifteen', text: '15', value: 15 },\r\n        { key: 'sixteen', text: '16', value: 16 },\r\n        { key: 'seventeen', text: '17', value: 17 },\r\n        { key: 'eighteen', text: '18', value: 18 },\r\n        { key: 'ninteen', text: '19', value: 19 },\r\n        { key: 'twenty', text: '20', value: 20 },\r\n        { key: 'twentyone', text: '21', value: 21 },\r\n        { key: 'twentytwo', text: '22', value: 22 },\r\n        { key: 'twentythree', text: '23', value: 23 },\r\n        { key: 'twentyfour', text: '24', value: 24 },\r\n        { key: 'twentyfive', text: '25', value: 25 },\r\n        { key: 'twentysix', text: '26', value: 26 },\r\n        { key: 'twentyseven', text: '27', value: 27 },\r\n        { key: 'twentyeight', text: '28', value: 28 },\r\n        { key: 'twentynine', text: '29', value: 29 },\r\n        { key: 'thirty', text: '30', value: 30 },\r\n        { key: 'thirtyone', text: '31', value: 31 },\r\n        { key: 'thirtytwo', text: '32', value: 32 },\r\n        { key: 'thirtythree', text: '33', value: 33 },\r\n        { key: 'thirtyfour', text: '34', value: 34 },\r\n        { key: 'thirtyfive', text: '35', value: 35 }\r\n    ]\r\n    return (\r\n    <Grid columns='equal'>\r\n        <Grid.Row>\r\n            <Grid.Column>\r\n                <br/>'High Period (r):'\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='25'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        props.rForTSIdispatch(selectedOption.value)\r\n                        }}\r\n                />\r\n            </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n            <Grid.Column>\r\n                <br/>'Low Period (s):'\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='13'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        props.sForTSIdispatch(selectedOption.value)\r\n                        }}\r\n                />\r\n            </Grid.Column>\r\n        </Grid.Row>\r\n        </Grid>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    rForTSI: state.momentumFromRootReducer.rForTSI,\r\n    sForTSI: state.momentumFromRootReducer.sForTSI\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    rForTSIdispatch: selectedValue => dispatch(rForTSI(selectedValue)),\r\n    sForTSIdispatch: selectedValue => dispatch(sForTSI(selectedValue))\r\n  }\r\n}\r\n\r\n  \r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TSIcontentPanel)\r\n","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { displayRSI, displayTSI } from '../redux'\r\nimport { Grid, Menu, Accordion, Item, Checkbox, Form, Select} from \"semantic-ui-react\"\r\nimport Collapsible from 'react-collapsible';\r\nimport RSIcontentPanel from './accordion/momentum/RSIcontentpanel'\r\nimport TSIcontentPanel from './accordion/momentum/TSIcontentpanel'\r\n\r\nfunction MomentumMenuContainer(props) {\r\n    function headerCollapsible(title) {\r\n        return (\r\n            <Item.Group>\r\n            <Item>\r\n                <Item.Content>\r\n                    <Item.Header as='a'>{title}</Item.Header><br/>\r\n                </Item.Content>\r\n            </Item>\r\n        </Item.Group>\r\n        )\r\n    }\r\n    \r\n    const [activeRSIAccodianMenuItem, setRSIActiveAccordionMenuItem] = useState(-1)\r\n    const [activeTSIAccodianMenuItem, setTSIActiveAccordionMenuItem] = useState(-1)\r\n\r\n\tconst [displayUOCheckbox, setDisplayUOCheckbox] = useState(false)\r\n\tconst [sForUO, setsForUO] = useState(7)\r\n\tconst [mForUO, setmForUO] = useState(14)\r\n\tconst [lenForUO, setlenForUO] = useState(28)\r\n\tconst [wsForUO, setwsForUO] = useState(4)\r\n\tconst [wmForUO, setwmForUO] = useState(2)\r\n    const [wlForUO, setwlForUO] = useState(1)\r\n    const [activeUOAccodianMenuItem, setUOActiveAccordionMenuItem] = useState(-1)\r\n    \r\n    const [displayStochCheckbox, setDisplayStochCheckbox] = useState(false)\r\n    const [nForStoch, setNForStoch] = useState(14)\r\n    const [d_nForStoch, setd_nForStoch] = useState(3)\r\n    const [activeStochAccodianMenuItem, setStochActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayStochSignalCheckbox, setDisplayStochSignalCheckbox] = useState(false)\r\n    const [nForStochSignal, setNForStochSignal] = useState(14)\r\n    const [d_nForStochSignal, setd_nForStochSignal] = useState(3)\r\n    const [activeStochSignalAccodianMenuItem, setStochSignalActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayWR, setDisplayWR] = useState(false)\r\n    const [lbpForWR, setLBPForWR] = useState(14)\r\n    const [activeWRAccodianMenuItem, setWRActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayAO, setDisplayAO] = useState(false)\r\n    const [sForAO, setSForAO] = useState(5)\r\n    const [lenForAO, setLenForAO] = useState(34)\r\n    const [activeAOAccodianMenuItem, setAOActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayKama, setDisplayKama] = useState(false)\r\n    const [nForKama, setNForKama] = useState(10)\r\n    const [pow1ForKama, setPow1ForKama] = useState(2)\r\n    const [pow2ForKama, setPow2ForKama] = useState(30)\r\n    const [activeKamaAccodianMenuItem, setKamaActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayROC, setDisplayROC] = useState(false)\r\n    const [nForROC, setNForROC] = useState(12)\r\n    const [activeROCAccodianMenuItem, setROCActiveAccordionMenuItem] = useState(-1)\r\n\r\n    \r\n\r\n    const RSIAccordionTitle = (\r\n        <Grid columns='equal'>\r\n        <Grid.Column width={2}>\r\n                <Checkbox borderless index={1} defaultChecked onClick={(event) => {\r\n                            event.stopPropagation()\r\n                            props.displayRSIdispatch(!props.displayRSI)\r\n\r\n\r\n                        }}>\r\n                </Checkbox>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n            <h5>Relative Strength Index</h5>\r\n        </Grid.Column>\r\n        </Grid>)\r\n        \r\n    const TSIAccordionTitle = (\r\n        <Grid columns='equal'>\r\n        <Grid.Column width={2}>\r\n                <Checkbox borderless index={1} onClick={(event) => {\r\n                            event.stopPropagation()\r\n                            props.displayTSIdispatch(!props.displayTSI)\r\n\r\n\r\n                        }}>\r\n                </Checkbox>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n            <h5>True Strength Index</h5>\r\n        </Grid.Column>\r\n        </Grid>)\r\n    \r\n    //const TSIAccordionTitle = createAccordionTile(setDisplayTSIcheckbox,displayTSIcheckbox,'True Strength Index')\r\n    const UOAccordionTitle = createAccordionTile(setDisplayUOCheckbox,displayUOCheckbox,'Ultimate Oscillator')\r\n    const StochAccordionTitle = createAccordionTile(setDisplayStochCheckbox,displayStochCheckbox,'Stochastic Oscillator')\r\n    const StochSignalAccordionTitle = createAccordionTile(setDisplayStochSignalCheckbox,displayStochSignalCheckbox,'Stochastic Oscillator Signal')\r\n    const WRAccordionTitle = createAccordionTile(setDisplayWR,displayWR,'Williams %R')\r\n    const AOAccordionTitle = createAccordionTile(setDisplayAO,displayAO,'Awesome Oscillator') \r\n    const KamaAccordionTitle = createAccordionTile(setDisplayKama,displayKama,'Kaufmans Adaptive Moving Average')\r\n    const ROCAccordionTitle = createAccordionTile(setDisplayROC,displayROC,'Rate-of-Change (ROC) indicator') \r\n    \r\n    const momentumNtradingDayOptions = [\r\n\t\t{ key: 'one', text: '1', value: 1 },\r\n\t\t{ key: 'two', text: '2', value: 2 },\r\n\t\t{ key: 'three', text: '3', value: 3 },\r\n\t\t{ key: 'four', text: '4', value: 4 },\r\n\t\t{ key: 'five', text: '5', value: 5 },\r\n\t\t{ key: 'six', text: '6', value: 6 },\r\n\t\t{ key: 'seven', text: '7', value: 7 },\r\n\t\t{ key: 'eight', text: '8', value: 8 },\r\n\t\t{ key: 'nine', text: '9', value: 9 },\r\n\t\t{ key: 'ten', text: '10', value: 10 },\r\n\t\t{ key: 'eleven', text: '11', value: 11 },\r\n\t\t{ key: 'twelve', text: '12', value: 12 },\r\n\t\t{ key: 'thirteen', text: '13', value: 13 },\r\n\t\t{ key: 'fourteen', text: '14', value: 14 },\r\n\t\t{ key: 'fifteen', text: '15', value: 15 },\r\n\t\t{ key: 'sixteen', text: '16', value: 16 },\r\n\t\t{ key: 'seventeen', text: '17', value: 17 },\r\n\t\t{ key: 'eighteen', text: '18', value: 18 },\r\n\t\t{ key: 'ninteen', text: '19', value: 19 },\r\n\t\t{ key: 'twenty', text: '20', value: 20 },\r\n\t\t{ key: 'twentyone', text: '21', value: 21 },\r\n\t\t{ key: 'twentytwo', text: '22', value: 22 },\r\n\t\t{ key: 'twentythree', text: '23', value: 23 },\r\n\t\t{ key: 'twentyfour', text: '24', value: 24 },\r\n\t\t{ key: 'twentyfive', text: '25', value: 25 },\r\n\t\t{ key: 'twentysix', text: '26', value: 26 },\r\n\t\t{ key: 'twentyseven', text: '27', value: 27 },\r\n\t\t{ key: 'twentyeight', text: '28', value: 28 },\r\n\t\t{ key: 'twentynine', text: '29', value: 29 },\r\n        { key: 'thirty', text: '30', value: 30 },\r\n        { key: 'thirtyone', text: '31', value: 31 },\r\n\t\t{ key: 'thirtytwo', text: '32', value: 32 },\r\n\t\t{ key: 'thirtythree', text: '33', value: 33 },\r\n\t\t{ key: 'thirtyfour', text: '34', value: 34 },\r\n\t\t{ key: 'thirtyfive', text: '35', value: 35 }\r\n\t]\r\n\r\n    //const RSIcontentPanel = createContentPanelAccordion(['Period in Trading Days (n):'],['12'],[nForRSIdispatch(selectedOption.value)])\r\n    // const RSIcontentPanel = (\r\n    //     <Grid columns='equal'>\r\n    //             <Grid.Column>\r\n    //                 <br/>'Period in Trading Days (n):'\r\n    //             </Grid.Column>\r\n    //             <Grid.Column width={4}>\r\n    //                 <Form.Field\r\n    //                     control={Select}\r\n    //                     options={momentumNtradingDayOptions}\r\n    //                     placeholder='12'\r\n    //                     compact\r\n    //                     onChange ={(e,selectedOption) => {\r\n    //                         props.nForRSIdispatch(selectedOption.value)\r\n    //                         }}\r\n    //                 />\r\n    //             </Grid.Column>\r\n    //         </Grid>\r\n    // )\r\n    //const TSIcontentPanel = createContentPanelAccordion(['EMA Smoothing Period (r):'],['25'],[setrForTSI])\r\n    const UOcontentPanel =  createContentPanelAccordion(['Short Period (s):','Medium Period (m): ','Long Period (l)','Weight of Short BP Average (ws):','Weight of Medium BP Average (wm):','Weight of Long BP Average'],['7','14','28','4','2','1'],[setsForUO,setmForUO,setlenForUO,setwsForUO,setwmForUO,setwlForUO])\r\n    const StochcontentPanel = createContentPanelAccordion(['Period of Trading Days:','Simple Moving Average Period:'],['14','3'],[setNForStoch,setd_nForStoch])\r\n    const StochSignalcontentPanel = createContentPanelAccordion(['Period of Trading Days:','Simple Moving Average Period:'],['14','3'],[setNForStochSignal,setd_nForStochSignal])\r\n    const WRcontentPanel =  createContentPanelAccordion(['Lookback Period:'],['14'],[setLBPForWR])\r\n    const AOcontentPanel = createContentPanelAccordion(['Short Period (s):','Long Period (l):'],['5','34'],[setSForAO,setLenForAO])\r\n    const KamacontentPanel = createContentPanelAccordion(['Periods for Efficiency Ratio (n):','Periods for Fast EMA Constant:','Periods for Slow EMA Constant:'],['10','2','30'],[setNForKama,setPow1ForKama,setPow2ForKama])\r\n    const ROCcontentPanel = createContentPanelAccordion(['Number of Periods (n):'],['12'],[setNForROC])\r\n    \r\n    \r\n\t  \r\n\r\n\r\n    function createAccordionTile(set,state,title){\r\n        return(\r\n        <Grid columns='equal'>\r\n        <Grid.Column width={2}>\r\n                <Checkbox borderless index={1} onClick={(event) => {\r\n                            event.stopPropagation()\r\n                            set(!state)\r\n                        }}>\r\n                </Checkbox>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n            <h5>{title}</h5>\r\n        </Grid.Column>\r\n        </Grid>)\r\n    }\r\n\r\n\r\n\t\r\n\r\n    function createContentPanelAccordion(title,place,set) {\r\n        // for (var i = 0; i < title.length; i++) {\r\n        //     return (\r\n\r\n        //     )\r\n        if (title.length == 1) {\r\n            return (\r\n            <Grid columns='equal'>\r\n                <Grid.Column>\r\n                    <br/>{title[0]}\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder={place[0]}\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            set[0](selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid>\r\n            )\r\n        } else if (title.length == 2) {\r\n            return (\r\n            <Grid columns='equal'>\r\n                <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>{title[0]}\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder={place[0]}\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            set[0](selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>{title[1]}\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder={place[1]}\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            set[1](selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            )\r\n        } else if (title.length == 3) {\r\n            return (\r\n                <Grid columns='equal'>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[0]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[0]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[0](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[1]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[1]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[1](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[2]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[2]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[2](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                )\r\n        } else if (title.length == 4) {\r\n            return (\r\n                <Grid columns='equal'>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[0]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[0]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[0](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[1]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[1]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[1](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[2]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[2]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[2](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[3]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[3]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[3](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                )\r\n    \r\n        } else if (title.length == 5) {\r\n            return (\r\n                <Grid columns='equal'>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[0]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[0]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[0](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[1]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[1]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[1](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[2]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[2]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[2](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[3]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[3]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[3](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[4]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[4]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[4](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                )\r\n        } else if (title.length == 6) {\r\n            return (\r\n                <Grid columns='equal'>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[0]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[0]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[0](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[1]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[1]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[1](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[2]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[2]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[2](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[3]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[3]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[3](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[4]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[4]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[4](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[5]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[5]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[5](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                )    \r\n        } else {}\r\n        }\r\n\r\n  return (\r\n    <div>\r\n        {/* <Grid stretched> */}\r\n        \r\n        {/* <Grid.Row stretched> */}\r\n            {/* <Collapsible trigger={headerCollapsible('Momentum')}> */}\r\n                \r\n                <Accordion as={Menu} vertical stretched fluid borderless>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeRSIAccodianMenuItem === 0}\r\n                            content={RSIAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setRSIActiveAccordionMenuItem(index.index === activeRSIAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeRSIAccodianMenuItem === 0} content={<RSIcontentPanel/>} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeTSIAccodianMenuItem === 0}\r\n                            content={TSIAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setTSIActiveAccordionMenuItem(index.index === activeTSIAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeTSIAccodianMenuItem === 0} content={<TSIcontentPanel/>} />\r\n                    </Menu.Item>\r\n\r\n                    {/* <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeUOAccodianMenuItem === 0}\r\n                            content={UOAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setUOActiveAccordionMenuItem(index.index === activeUOAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeUOAccodianMenuItem === 0} content={UOcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeAOAccodianMenuItem === 0}\r\n                            content={AOAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setAOActiveAccordionMenuItem(index.index === activeAOAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeAOAccodianMenuItem === 0} content={AOcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeStochAccodianMenuItem === 0}\r\n                            content={StochAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setStochActiveAccordionMenuItem(index.index === activeStochAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeStochAccodianMenuItem === 0} content={StochcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeStochSignalAccodianMenuItem === 0}\r\n                            content={StochSignalAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setStochSignalActiveAccordionMenuItem(index.index === activeStochSignalAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeStochSignalAccodianMenuItem === 0} content={StochSignalcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeWRAccodianMenuItem === 0}\r\n                            content={WRAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setWRActiveAccordionMenuItem(index.index === activeWRAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeWRAccodianMenuItem === 0} content={WRcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeKamaAccodianMenuItem === 0}\r\n                            content={KamaAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setKamaActiveAccordionMenuItem(index.index === activeKamaAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeKamaAccodianMenuItem === 0} content={ROCcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeROCAccodianMenuItem === 0}\r\n                            content={ROCAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setROCActiveAccordionMenuItem(index.index === activeROCAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeROCAccodianMenuItem === 0} content={ROCcontentPanel} />\r\n                    </Menu.Item> */}\r\n                </Accordion>\r\n              \r\n            {/* </Collapsible> */}\r\n        {/* </Grid.Row> */}\r\n        \r\n        {/* </Grid> */}\r\n      \r\n    </div> \r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n    displayRSI: state.momentumFromRootReducer.displayRSI,\r\n    nForRSI: state.momentumFromRootReducer.nForRSI,\r\n    displayTSI: state.momentumFromRootReducer.displayTSI\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    displayRSIdispatch: varDisplayRSI => dispatch(displayRSI(varDisplayRSI)),\r\n    displayTSIdispatch: varDisplayTSI => dispatch(displayTSI(varDisplayTSI))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MomentumMenuContainer)\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { nForSMA } from '../../../redux'\r\nimport { Grid, Menu, Form, Select} from \"semantic-ui-react\"\r\n\r\nfunction SMAcontentpanel(props) {\r\n\r\n    const momentumNtradingDayOptions = [\r\n        { key: 'one', text: '1', value: 1 },\r\n        { key: 'two', text: '2', value: 2 },\r\n        { key: 'three', text: '3', value: 3 },\r\n        { key: 'four', text: '4', value: 4 },\r\n        { key: 'five', text: '5', value: 5 },\r\n        { key: 'six', text: '6', value: 6 },\r\n        { key: 'seven', text: '7', value: 7 },\r\n        { key: 'eight', text: '8', value: 8 },\r\n        { key: 'nine', text: '9', value: 9 },\r\n        { key: 'ten', text: '10', value: 10 },\r\n        { key: 'eleven', text: '11', value: 11 },\r\n        { key: 'twelve', text: '12', value: 12 },\r\n        { key: 'thirteen', text: '13', value: 13 },\r\n        { key: 'fourteen', text: '14', value: 14 },\r\n        { key: 'fifteen', text: '15', value: 15 },\r\n        { key: 'sixteen', text: '16', value: 16 },\r\n        { key: 'seventeen', text: '17', value: 17 },\r\n        { key: 'eighteen', text: '18', value: 18 },\r\n        { key: 'ninteen', text: '19', value: 19 },\r\n        { key: 'twenty', text: '20', value: 20 },\r\n        { key: 'twentyone', text: '21', value: 21 },\r\n        { key: 'twentytwo', text: '22', value: 22 },\r\n        { key: 'twentythree', text: '23', value: 23 },\r\n        { key: 'twentyfour', text: '24', value: 24 },\r\n        { key: 'twentyfive', text: '25', value: 25 },\r\n        { key: 'twentysix', text: '26', value: 26 },\r\n        { key: 'twentyseven', text: '27', value: 27 },\r\n        { key: 'twentyeight', text: '28', value: 28 },\r\n        { key: 'twentynine', text: '29', value: 29 },\r\n        { key: 'thirty', text: '30', value: 30 },\r\n        { key: 'thirtyone', text: '31', value: 31 },\r\n        { key: 'thirtytwo', text: '32', value: 32 },\r\n        { key: 'thirtythree', text: '33', value: 33 },\r\n        { key: 'thirtyfour', text: '34', value: 34 },\r\n        { key: 'thirtyfive', text: '35', value: 35 }\r\n    ]\r\n    return (\r\n    <Grid columns='equal'>\r\n            <Grid.Column>\r\n                <br/>'Period in Trading Days (n):'\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='20'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        props.nForSMAdispatch(selectedOption.value)\r\n                        }}\r\n                />\r\n            </Grid.Column>\r\n        </Grid>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      nForSMA: state.momentumFromRootReducer.nForSMA\r\n  \r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      nForSMAdispatch: selectedValue => dispatch(nForSMA(selectedValue))\r\n    }\r\n  }\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SMAcontentpanel)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { nForEMA,} from '../../../redux'\r\nimport { Grid, Menu, Form, Select} from \"semantic-ui-react\"\r\n\r\nfunction EMAcontentPanel(props) {\r\n\r\n    const momentumNtradingDayOptions = [\r\n        { key: 'one', text: '1', value: 1 },\r\n        { key: 'two', text: '2', value: 2 },\r\n        { key: 'three', text: '3', value: 3 },\r\n        { key: 'four', text: '4', value: 4 },\r\n        { key: 'five', text: '5', value: 5 },\r\n        { key: 'six', text: '6', value: 6 },\r\n        { key: 'seven', text: '7', value: 7 },\r\n        { key: 'eight', text: '8', value: 8 },\r\n        { key: 'nine', text: '9', value: 9 },\r\n        { key: 'ten', text: '10', value: 10 },\r\n        { key: 'eleven', text: '11', value: 11 },\r\n        { key: 'twelve', text: '12', value: 12 },\r\n        { key: 'thirteen', text: '13', value: 13 },\r\n        { key: 'fourteen', text: '14', value: 14 },\r\n        { key: 'fifteen', text: '15', value: 15 },\r\n        { key: 'sixteen', text: '16', value: 16 },\r\n        { key: 'seventeen', text: '17', value: 17 },\r\n        { key: 'eighteen', text: '18', value: 18 },\r\n        { key: 'ninteen', text: '19', value: 19 },\r\n        { key: 'twenty', text: '20', value: 20 },\r\n        { key: 'twentyone', text: '21', value: 21 },\r\n        { key: 'twentytwo', text: '22', value: 22 },\r\n        { key: 'twentythree', text: '23', value: 23 },\r\n        { key: 'twentyfour', text: '24', value: 24 },\r\n        { key: 'twentyfive', text: '25', value: 25 },\r\n        { key: 'twentysix', text: '26', value: 26 },\r\n        { key: 'twentyseven', text: '27', value: 27 },\r\n        { key: 'twentyeight', text: '28', value: 28 },\r\n        { key: 'twentynine', text: '29', value: 29 },\r\n        { key: 'thirty', text: '30', value: 30 },\r\n        { key: 'thirtyone', text: '31', value: 31 },\r\n        { key: 'thirtytwo', text: '32', value: 32 },\r\n        { key: 'thirtythree', text: '33', value: 33 },\r\n        { key: 'thirtyfour', text: '34', value: 34 },\r\n        { key: 'thirtyfive', text: '35', value: 35 }\r\n    ]\r\n    return (\r\n    <Grid columns='equal'>\r\n        <Grid.Row>\r\n            <Grid.Column>\r\n                <br/>'Period in Trading Days (n):'\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='20'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        props.nForEMAdispatch(selectedOption.value)\r\n                        }}\r\n                />\r\n            </Grid.Column>\r\n        </Grid.Row>\r\n        </Grid>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    nForEMA: state.trendFromRootReducer.nForEMA,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    nForEMAdispatch: selectedValue => dispatch(nForEMA(selectedValue)),\r\n  }\r\n}\r\n\r\n  \r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EMAcontentPanel)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { nFastForMACD, nSlowForMACD } from '../../../redux'\r\nimport { Grid, Menu, Form, Select} from \"semantic-ui-react\"\r\n\r\nfunction MACDcontentPanel(props) {\r\n\r\n    const momentumNtradingDayOptions = [\r\n        { key: 'one', text: '1', value: 1 },\r\n        { key: 'two', text: '2', value: 2 },\r\n        { key: 'three', text: '3', value: 3 },\r\n        { key: 'four', text: '4', value: 4 },\r\n        { key: 'five', text: '5', value: 5 },\r\n        { key: 'six', text: '6', value: 6 },\r\n        { key: 'seven', text: '7', value: 7 },\r\n        { key: 'eight', text: '8', value: 8 },\r\n        { key: 'nine', text: '9', value: 9 },\r\n        { key: 'ten', text: '10', value: 10 },\r\n        { key: 'eleven', text: '11', value: 11 },\r\n        { key: 'twelve', text: '12', value: 12 },\r\n        { key: 'thirteen', text: '13', value: 13 },\r\n        { key: 'fourteen', text: '14', value: 14 },\r\n        { key: 'fifteen', text: '15', value: 15 },\r\n        { key: 'sixteen', text: '16', value: 16 },\r\n        { key: 'seventeen', text: '17', value: 17 },\r\n        { key: 'eighteen', text: '18', value: 18 },\r\n        { key: 'ninteen', text: '19', value: 19 },\r\n        { key: 'twenty', text: '20', value: 20 },\r\n        { key: 'twentyone', text: '21', value: 21 },\r\n        { key: 'twentytwo', text: '22', value: 22 },\r\n        { key: 'twentythree', text: '23', value: 23 },\r\n        { key: 'twentyfour', text: '24', value: 24 },\r\n        { key: 'twentyfive', text: '25', value: 25 },\r\n        { key: 'twentysix', text: '26', value: 26 },\r\n        { key: 'twentyseven', text: '27', value: 27 },\r\n        { key: 'twentyeight', text: '28', value: 28 },\r\n        { key: 'twentynine', text: '29', value: 29 },\r\n        { key: 'thirty', text: '30', value: 30 },\r\n        { key: 'thirtyone', text: '31', value: 31 },\r\n        { key: 'thirtytwo', text: '32', value: 32 },\r\n        { key: 'thirtythree', text: '33', value: 33 },\r\n        { key: 'thirtyfour', text: '34', value: 34 },\r\n        { key: 'thirtyfive', text: '35', value: 35 }\r\n    ]\r\n    return (\r\n    <Grid columns='equal'>\r\n        <Grid.Row>\r\n            <Grid.Column>\r\n                <br/>'Fast Period :'\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='26'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        props.nFastForMACDdispatch(selectedOption.value)\r\n                        }}\r\n                />\r\n            </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n            <Grid.Column>\r\n                <br/>'Fast Period :'\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='12'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        props.nSlowForMACDdispatch(selectedOption.value)\r\n                        }}\r\n                />\r\n            </Grid.Column>\r\n        </Grid.Row>\r\n        </Grid>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    nFastForMACD: state.trendFromRootReducer.nFastForMACD,\r\n    nSlowForMACD: state.trendFromRootReducer.nSlowForMACD\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    nFastForMACDdispatch: selectedValue => dispatch(nFastForMACD(selectedValue)),\r\n    nSlowForMACDdispatch: selectedValue => dispatch(nSlowForMACD(selectedValue)),\r\n  }\r\n}\r\n\r\n  \r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MACDcontentPanel)\r\n","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { displaySMA, displayEMA, displayMACD } from '../redux'\r\nimport { Grid, Menu, Accordion, Checkbox } from \"semantic-ui-react\"\r\nimport SMAcontentpanel from './accordion/momentum/SMAcontentpanel'\r\nimport EMAcontentPanel from './accordion/momentum/EMAcontentpanel'\r\nimport MACDcontentPanel from './accordion/momentum/MACDcontentpanel'\r\n\r\nfunction TrendMenuContainer(props) {\r\n    \r\n    \r\n    const [activeSMAAccordionMenuItem, setActiveSMAAccordionMenuItem] = useState(-1)\r\n    const [activeMACDAccordionMenuItem, setActiveMACDAccordionMenuItem] = useState(-1)\r\n    const [activeEMAAccodianMenuItem, setActiveEMAAccodianMenuItem] = useState(-1)\r\n\r\n    \r\n\r\n    const SMAAccordionTitle = (\r\n        <Grid columns='equal'>\r\n        <Grid.Column width={2}>\r\n                <Checkbox borderless index={1} onClick={(event) => {\r\n                            event.stopPropagation()\r\n                            props.displaySMAdispatch(!props.displaySMA)\r\n\r\n\r\n                        }}>\r\n                </Checkbox>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n            <h5>Simple Moving Average</h5>\r\n        </Grid.Column>\r\n        </Grid>)\r\n        \r\n    const MACDAccordionTitle = (\r\n        <Grid columns='equal'>\r\n        <Grid.Column width={2}>\r\n                <Checkbox borderless index={1} onClick={(event) => {\r\n                            event.stopPropagation()\r\n                            props.displayMACDdispatch(!props.displayMACD)\r\n\r\n\r\n                        }}>\r\n                </Checkbox>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n            <h5>MACD</h5>\r\n        </Grid.Column>\r\n        </Grid>)\r\n\r\nconst EMAAccordionTitle = (\r\n    <Grid columns='equal'>\r\n    <Grid.Column width={2}>\r\n            <Checkbox borderless index={1} onClick={(event) => {\r\n                        event.stopPropagation()\r\n                        props.displayEMADdispatch(!props.displayEMA)\r\n\r\n\r\n                    }}>\r\n            </Checkbox>\r\n    </Grid.Column>\r\n    <Grid.Column>\r\n        <h5>Exponential Moving Average</h5>\r\n    </Grid.Column>\r\n    </Grid>)\r\n \r\n    const momentumNtradingDayOptions = [\r\n\t\t{ key: 'one', text: '1', value: 1 },\r\n\t\t{ key: 'two', text: '2', value: 2 },\r\n\t\t{ key: 'three', text: '3', value: 3 },\r\n\t\t{ key: 'four', text: '4', value: 4 },\r\n\t\t{ key: 'five', text: '5', value: 5 },\r\n\t\t{ key: 'six', text: '6', value: 6 },\r\n\t\t{ key: 'seven', text: '7', value: 7 },\r\n\t\t{ key: 'eight', text: '8', value: 8 },\r\n\t\t{ key: 'nine', text: '9', value: 9 },\r\n\t\t{ key: 'ten', text: '10', value: 10 },\r\n\t\t{ key: 'eleven', text: '11', value: 11 },\r\n\t\t{ key: 'twelve', text: '12', value: 12 },\r\n\t\t{ key: 'thirteen', text: '13', value: 13 },\r\n\t\t{ key: 'fourteen', text: '14', value: 14 },\r\n\t\t{ key: 'fifteen', text: '15', value: 15 },\r\n\t\t{ key: 'sixteen', text: '16', value: 16 },\r\n\t\t{ key: 'seventeen', text: '17', value: 17 },\r\n\t\t{ key: 'eighteen', text: '18', value: 18 },\r\n\t\t{ key: 'ninteen', text: '19', value: 19 },\r\n\t\t{ key: 'twenty', text: '20', value: 20 },\r\n\t\t{ key: 'twentyone', text: '21', value: 21 },\r\n\t\t{ key: 'twentytwo', text: '22', value: 22 },\r\n\t\t{ key: 'twentythree', text: '23', value: 23 },\r\n\t\t{ key: 'twentyfour', text: '24', value: 24 },\r\n\t\t{ key: 'twentyfive', text: '25', value: 25 },\r\n\t\t{ key: 'twentysix', text: '26', value: 26 },\r\n\t\t{ key: 'twentyseven', text: '27', value: 27 },\r\n\t\t{ key: 'twentyeight', text: '28', value: 28 },\r\n\t\t{ key: 'twentynine', text: '29', value: 29 },\r\n        { key: 'thirty', text: '30', value: 30 },\r\n        { key: 'thirtyone', text: '31', value: 31 },\r\n\t\t{ key: 'thirtytwo', text: '32', value: 32 },\r\n\t\t{ key: 'thirtythree', text: '33', value: 33 },\r\n\t\t{ key: 'thirtyfour', text: '34', value: 34 },\r\n\t\t{ key: 'thirtyfive', text: '35', value: 35 }\r\n\t]\r\n\r\n\t  \r\n\r\n\r\n  return (\r\n    <div>\r\n        <Grid>\r\n        \r\n        <Grid.Row stretched>\r\n\r\n                \r\n                <Accordion as={Menu} vertical stretched fluid borderless>\r\n                <Menu.Item borderless>\r\n                    <Accordion.Title\r\n                        active={activeSMAAccordionMenuItem === 0}\r\n                        content={SMAAccordionTitle}\r\n                        index={0}\r\n                        borderless\r\n                        onClick={(e,index) => {\r\n                            setActiveSMAAccordionMenuItem(index.index === activeSMAAccordionMenuItem ? -1 : index.index)\r\n                            }}\r\n                    />\r\n                    <Accordion.Content borderless active={activeSMAAccordionMenuItem === 0} content={<SMAcontentpanel />} />\r\n                </Menu.Item>\r\n                <Menu.Item borderless>\r\n                    <Accordion.Title\r\n                        active={activeMACDAccordionMenuItem === 0}\r\n                        content={MACDAccordionTitle}\r\n                        index={0}\r\n                        borderless\r\n                        onClick={(e,index) => {\r\n                            setActiveMACDAccordionMenuItem(index.index === activeMACDAccordionMenuItem ? -1 : index.index)\r\n                            }}\r\n                    />\r\n                    <Accordion.Content borderless active={activeMACDAccordionMenuItem === 0} content={<MACDcontentPanel />} />\r\n                </Menu.Item>\r\n                <Menu.Item borderless>\r\n                    <Accordion.Title\r\n                        active={activeEMAAccodianMenuItem === 0}\r\n                        content={EMAAccordionTitle}\r\n                        index={0}\r\n                        borderless\r\n                        onClick={(e,index) => {\r\n                            setActiveEMAAccodianMenuItem(index.index === activeEMAAccodianMenuItem ? -1 : index.index)\r\n                            }}\r\n                    />\r\n                    <Accordion.Content borderless active={activeEMAAccodianMenuItem === 0} content={<EMAcontentPanel />} />\r\n                </Menu.Item>\r\n\r\n                   \r\n                </Accordion>\r\n\r\n        </Grid.Row>\r\n        \r\n        </Grid>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n    displaySMA: state.trendFromRootReducer.displaySMA,\r\n    nForSMA: state.trendFromRootReducer.nForSMA,\r\n    displayEMA: state.trendFromRootReducer.displayEMA,\r\n    nForEMA: state.trendFromRootReducer.nForEMA,\r\n    displayMACD: state.trendFromRootReducer.displayMACD,\r\n    nFastForMACD: state.trendFromRootReducer.nFastForMACD,\r\n    nSlowForMACD: state.trendFromRootReducer.nSlowForMACD\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    displaySMAdispatch: varDisplaySMA => dispatch(displaySMA(varDisplaySMA)),\r\n    displayEMAdispatch: varDisplayEMA => dispatch(displayEMA(varDisplayEMA)),\r\n    displayMACDdispatch: varDisplayMACD => dispatch(displayMACD(varDisplayMACD))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrendMenuContainer)\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchStockData } from '../redux'\r\nimport '../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport * as d3 from \"d3\"\r\nimport { fetchMomentumData } from '../redux';\r\nimport {\r\n    select,\r\n    csv,\r\n    scaleLinear,\r\n    scaleBand,\r\n    scaleTime,\r\n    extent,\r\n    axisLeft,\r\n    axisBottom,\r\n    line,\r\n    curveBasis,\r\n    curveLinear\r\n  } from 'd3';\r\n\r\nfunction MomentumGraphContainer (props) {\r\n\r\n  const LegendLabels = () => {\r\n    const displayParas = [props.displayRSI,props.displayMACD]\r\n    const labels = ['RSI','MACD']\r\n    const colors = [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\",\"#999999\"]\r\n    var keysList = []\r\n    var colorsList = []\r\n    for (var i = 0; i < displayParas.length; i++) {\r\n      if (displayParas[i]){\r\n        keysList.push(labels[i])\r\n        colorsList.push(colors[i])\r\n      }\r\n    }\r\n    return keysList\r\n  }\r\n  const  LegendColors = () => {\r\n    const displayParas = [props.displayRSI,props.displayMACD]\r\n    const labels = ['RSI','MACD']\r\n    const colors = [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\",\"#999999\"]\r\n    var keysList = []\r\n    var colorsList = []\r\n    for (var i = 0; i < displayParas.length; i++) {\r\n      if (displayParas[i]){\r\n        keysList.push(labels[i])\r\n        colorsList.push(colors[i])\r\n      }\r\n    }\r\n    return colorsList\r\n  }\r\n  const legendColorList = LegendColors()\r\n\r\n\r\n  // var RSIobject = {name:'RSI',theData:getTheData(this)}\r\n  // function getTheData() {\r\n  //   return this.name\r\n  // }\r\n  // console.log(RSIobject)\r\n\r\n  \r\n\r\n  const momentumIndicatorsChartNode = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.loads > 0) {\r\n      const RSIparameters = {'N':props.nForRSI}\r\n      const TSIparameters = {'displayTSI':props.displayTSI,'rTSI':props.rForTSI,'sTSI':props.sForTSI}\r\n      props.fetchMomentumData(JSON.stringify([props.stockData,RSIparameters,TSIparameters]))\r\n    }\r\n    \r\n  }, [props.stockData,props.displayRSI,props.nForRSI,props.displayTSI,props.sForTSI,props.rForTSI])\r\n\r\n  if (props.momentumLoads > 0) {\r\n    function createMomentumIndicatorsChart(momentumIndicatorsChartNode) {\r\n      const data = props.momentumData\r\n      const trendData = props.trendData\r\n      \r\n      function findMinMax(data) {\r\n        var min = 0\r\n        var max = 0\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (props.displayRSI) {\r\n                if (data[i]['rsi'] < min) {\r\n                    min = data[i]['rsi']\r\n                }\r\n                if (data[i]['rsi'] > max) {\r\n                    max = data[i]['rsi']\r\n                }\r\n            }\r\n            if (props.displayTSI) {\r\n                if (data[i]['tsi'] < min) {\r\n                    min = data[i]['tsi']\r\n                }\r\n                if (data[i]['tsi'] > max) {\r\n                    max = data[i]['tsi']\r\n                }\r\n            }\r\n        //     if (displayUOcheckbox) {\r\n        //         if (data[i]['uo'] < min) {\r\n        //             min = data[i]['uo']\r\n        //         }\r\n        //         if (data[i]['uo'] > max) {\r\n        //             max = data[i]['uo']\r\n        //         }\r\n        //     }\r\n        //     if (displayStochCheckbox) {\r\n        //         if (data[i]['stoch'] < min) {\r\n        //             min = data[i]['stoch']\r\n        //         }\r\n        //         if (data[i]['stoch'] > max) {\r\n        //             max = data[i]['stoch']\r\n        //         }\r\n        //     }\r\n        //     if (displayStochSignalCheckbox) {\r\n        //         if (data[i]['stoch_signal'] < min) {\r\n        //             min = data[i]['stoch_signal']\r\n        //         }\r\n        //         if (data[i]['stoch_signal'] > max) {\r\n        //             max = data[i]['stoch_signal']\r\n        //         }\r\n        //     }\r\n        //     if (displayWR) {\r\n        //         if (data[i]['wr'] < min) {\r\n        //             min = data[i]['wr']\r\n        //         }\r\n        //         if (data[i]['wr'] > max) {\r\n        //             max = data[i]['wr']\r\n        //         }\r\n        //     }\r\n        //     if (displayAO) {\r\n        //         if (data[i]['ao'] < min) {\r\n        //             min = data[i]['ao']\r\n        //         }\r\n        //         if (data[i]['ao'] > max) {\r\n        //             max = data[i]['ao']\r\n        //         }\r\n        //     }\r\n        //     if (displayKama) {\r\n        //         if (data[i]['kama'] < min) {\r\n        //             min = data[i]['kama']\r\n        //         }\r\n        //         if (data[i]['kama'] > max) {\r\n        //             max = data[i]['kama']\r\n        //         }\r\n        //     }\r\n        //     if (displayROC) {\r\n        //         if (data[i]['roc'] < min) {\r\n        //             min = data[i]['roc']\r\n        //         }\r\n        //         if (data[i]['roc'] > max) {\r\n        //             max = data[i]['roc']\r\n        //         }\r\n        //     }\r\n        }\r\n        if (min == 0 && max == 0) {\r\n            max = 80\r\n        }\r\n        return [min,max]\r\n      }\r\n      \r\n      function findMinMaxMACD(data) {\r\n        var min = 0\r\n        var max = 0\r\n        for (var i = 0; i < data.length; i++) {\r\n           \r\n          if (data[i]['macd'] < min) {\r\n              min = data[i]['macd']\r\n          }\r\n          if (data[i]['macd'] > max) {\r\n              max = data[i]['macd']\r\n          }\r\n            \r\n        }\r\n        if (min == 0 && max == 0) {\r\n            max = 2\r\n            min = -2\r\n        }\r\n        return [min,max]\r\n      }\r\n\r\n      const svg = select(momentumIndicatorsChartNode.current);\r\n      svg.selectAll(\"g\").remove()\r\n\r\n      const height = 70;\r\n      const width = 700;\r\n\r\n      const margin = ({top: 5, right: 30, bottom: 5, left: 40})\r\n      const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n      \r\n      class Indicator {\r\n        constructor(name,color,dataForInd,display) {\r\n          this.name = name;\r\n          this.color = color;\r\n          this.dataInd = dataForInd;\r\n          this.svg = svg;\r\n          this.display =display;\r\n          this.g = this.svg.append(\"g\")\r\n          this.lineGenerator = line()\r\n        }\r\n        // Getter\r\n        get d3line() {\r\n          return this.calcD3LinePara();\r\n        }\r\n\r\n        // Method\r\n        calcD3LinePara() {\r\n          if (this.display) {\r\n          this.g\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", this.color)\r\n            .selectAll(\"g\")\r\n            .data(this.dataInd)\r\n            .join(\"g\")\r\n    \r\n          this.lineGenerator\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.rsi))\r\n            .curve(curveLinear);\r\n\r\n          this.g.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr(\"id\", this.name)\r\n            .attr('d', this.lineGenerator(this.dataInd))\r\n            .attr('fill','none')\r\n            .attr('stroke-width',2)\r\n            .attr('stroke-linecap','round')\r\n          \r\n            return this.g\r\n          }else{\r\n            return svg.selectAll(\"g\").selectAll(\".\"+this.name).remove()\r\n          }\r\n        }\r\n      }\r\n      \r\n      \r\n\r\n\r\n\r\n      const x = scaleBand()\r\n          .domain(d3.utcDay\r\n              .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n              .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n          .range([margin.left, width - margin.right])\r\n          .padding(0.2)\r\n\r\n      var y = scaleLinear()\r\n          //.domain([d3.min(data, d => d.rsi), d3.max(data, d => d.rsi)])\r\n          .domain(findMinMax(data))\r\n          .rangeRound([height - margin.bottom, margin.top])\r\n\r\n      if (props.displayMACD) {\r\n        var yRight = scaleLinear()\r\n          //.domain([min,max])\r\n          .domain(findMinMaxMACD(trendData))\r\n          .rangeRound([height - margin.bottom, margin.top])\r\n      }\r\n\r\n      const xAxis = g => g\r\n          .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n          .call(d3.axisBottom(x)\r\n              .tickValues(d3.utcMonday\r\n                  .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                  .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n              .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n          .call(g => g.select(\".domain\").remove())\r\n\r\n      var yAxis = g => g\r\n          .attr(\"transform\", `translate(${margin.left},0)`)\r\n          .call(d3.axisLeft(y)\r\n              .tickFormat(d3.format(\"~f\"))\r\n              .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n          .call(g => g.selectAll(\".tick line\").clone()\r\n              .attr(\"stroke-opacity\", 0)\r\n              .attr(\"x2\", width - margin.left - margin.right))\r\n          .call(g => g.select(\".domain\").remove())\r\n\r\n\r\n\r\n      if (props.displayMACD) {\r\n        var yAxisRight = g => g\r\n          .attr(\"transform\", `translate(${width-margin.left},0)`)\r\n          .call(d3.axisRight(yRight)\r\n              .tickFormat(d3.format(\"~f\"))\r\n              .tickValues(d3.scaleLinear().domain(yRight.domain()).ticks()))\r\n              .style(\"fill\",'blue')\r\n          .call(g => g.selectAll(\".tick line\").clone()\r\n              .attr(\"stroke-opacity\", 0)\r\n              .attr(\"x2\", width - margin.left - margin.right+50))\r\n          .call(g => g.select(\".domain\").remove())\r\n      }\r\n\r\n      svg.attr(\"viewBox\", [0, 0, width, height])\r\n\r\n      svg.append(\"g\")\r\n          .call(xAxis);\r\n          \r\n      svg.append(\"g\")\r\n          .call(yAxis);\r\n\r\n      // Usually you have a color scale in your chart already\r\n      var color = d3.scaleOrdinal()\r\n        .domain(LegendLabels())\r\n        .range(d3.schemeSet1);\r\n\r\n\r\n      const size = 5\r\n      svg.selectAll(\"mydots\")\r\n        .data(LegendLabels())\r\n        .enter()\r\n        .append(\"rect\")\r\n          .attr(\"x\", margin.left + 5)\r\n          .attr(\"y\", function(d,i){ return height - margin.bottom - 2 - i*15}) // 100 is where the first dot appears. 25 is the distance between dots\r\n          .attr(\"width\",size)\r\n          .attr(\"height\", size/2)\r\n          .style(\"fill\", legendColorList.forEach( x => x))\r\n          //.style(\"fill\", function(d){return color(d)})\r\n        // Add one dot in the legend for each name.\r\n      svg.selectAll('mylabels')\r\n        .data(LegendLabels())\r\n        .enter()\r\n        .append(\"text\")\r\n          .attr(\"x\", margin.left + 15)\r\n          .attr(\"y\", function(d,i){ return height - margin.bottom - i*15 }) // 100 is where the first dot appears. 25 is the distance between dots\r\n          .style(\"fill\", legendColorList.forEach( x => x))\r\n          .text(function(d){ return d})\r\n          .attr(\"text-anchor\", \"left\")\r\n          .attr(\"font-size\",'10px')\r\n          .style(\"alignment-baseline\", \"middle\")\r\n\r\n      if (props.displayMACD) {\r\n        svg.append(\"g\")\r\n          .attr('fill',legendColorList[1])\r\n          .call(yAxisRight)\r\n      }\r\n\r\n      // const gRSI = svg.append(\"g\")\r\n      //     .attr(\"stroke-linecap\", \"round\")\r\n      //     .attr(\"stroke\", legendColorList[0])\r\n      //     .selectAll(\"g\")\r\n      //     .data(data)\r\n      //     .join(\"g\")\r\n      //     // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n      // const lineGeneratorRSI = line()\r\n      //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n      //     .y(d => y(d.rsi))\r\n      //     .curve(curveLinear);\r\n      \r\n      const rsi = new Indicator('rsi',\"#377eb8\",data,props.displayRSI);\r\n      const macd = new Indicator('macd',\"#e41a1c\",trendData,props.displayMACD)\r\n      const rsiline = rsi.d3line\r\n      const macdline = macd.d3line\r\n      // if (props.displayRSI) {\r\n      //     gRSI.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"rsi\")\r\n      //     .attr('d', lineGeneratorRSI(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',2)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".rsi\").remove()\r\n      // }\r\n\r\n      \r\n      \r\n      \r\n\r\n      if (props.displayTSI && typeof(data[0]['tsi']) !== 'undefined') {\r\n          const gTSI = svg.append(\"g\")\r\n              .attr(\"stroke-linecap\", \"round\")\r\n              .attr(\"stroke\", legendColorList[2])\r\n              .selectAll(\"g\")\r\n              .data(data)\r\n              .join(\"g\")\r\n\r\n          const lineGeneratorTSI = line()\r\n              .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n              .y(d => y(d.tsi))\r\n              .curve(curveLinear);\r\n\r\n          gTSI.append('path')\r\n              .attr('class', 'line-path')\r\n              .attr(\"id\", \"tsi\")\r\n              .attr('d', lineGeneratorTSI(data))\r\n              .attr('fill','none')\r\n              .attr('stroke-width',2)\r\n              .attr('stroke-linecap','round')\r\n      }else{\r\n          svg.selectAll(\"g\").selectAll(\".tsi\").remove()\r\n      }\r\n\r\n      if (props.displayMACD) {\r\n        const gMACD = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", color(2))\r\n            .selectAll(\"g\")\r\n            .data(trendData)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorMACD = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => yRight(d.macd))\r\n            .curve(curveLinear);\r\n\r\n        gMACD.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorMACD(trendData))\r\n            .attr('id','macd')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',2)\r\n            .attr('stroke-linecap','round')\r\n        }else{\r\n          svg.selectAll(\"g\").selectAll(\".macd\").remove()\r\n        }\r\n\r\n      // if (displayTSIcheckbox) {\r\n      //     gTSI.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"tsi\")\r\n      //     .attr('d', lineGeneratorTSI(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',3)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".tsi\").remove()\r\n      // }\r\n\r\n      // const gUO = svg.append(\"g\")\r\n      //     .attr(\"stroke-linecap\", \"round\")\r\n      //     .attr(\"stroke\", \"green\")\r\n      //     .selectAll(\"g\")\r\n      //     .data(data)\r\n      //     .join(\"g\")\r\n\r\n      // const lineGeneratorUO = line()\r\n      //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n      //     .y(d => y(d.UO))\r\n      //     .curve(curveLinear);\r\n\r\n      // if (displayUOcheckbox) {\r\n      //     gUO.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"uo\")\r\n      //     .attr('d', lineGeneratorUO(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',3)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".uo\").remove()\r\n      // }\r\n      \r\n      \r\n      // const gStoch = svg.append(\"g\")\r\n      //     .attr(\"stroke-linecap\", \"round\")\r\n      //     .attr(\"stroke\", \"purple\")\r\n      //     .selectAll(\"g\")\r\n      //     .data(data)\r\n      //     .join(\"g\")\r\n\r\n      // const lineGeneratorStoch = line()\r\n      //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n      //     .y(d => y(d.stoch))\r\n      //     .curve(curveLinear);\r\n\r\n      // if (displayStochCheckbox) {\r\n      //     gStoch.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"stoch\")\r\n      //     .attr('d', lineGeneratorStoch(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',3)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".stoch\").remove()\r\n      // }\r\n\r\n      \r\n      // const gStochSignal = svg.append(\"g\")\r\n      //     .attr(\"stroke-linecap\", \"round\")\r\n      //     .attr(\"stroke\", \"yellow\")\r\n      //     .selectAll(\"g\")\r\n      //     .data(data)\r\n      //     .join(\"g\")\r\n\r\n      // const lineGeneratorStochSignal = line()\r\n      //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n      //     .y(d => y(d.stoch_signal))\r\n      //     .curve(curveLinear);\r\n\r\n      // if (displayStochSignalCheckbox) {\r\n      //     gStochSignal.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"stochSignal\")\r\n      //     .attr('d', lineGeneratorStochSignal(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',3)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".stochSignal\").remove()\r\n      // }\r\n\r\n      // const gWR = svg.append(\"g\")\r\n      //     .attr(\"stroke-linecap\", \"round\")\r\n      //     .attr(\"stroke\", \"orange\")\r\n      //     .selectAll(\"g\")\r\n      //     .data(data)\r\n      //     .join(\"g\")\r\n\r\n      // const lineGeneratorWR = line()\r\n      //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n      //     .y(d => y(d.wr))\r\n      //     .curve(curveLinear);\r\n\r\n      // if (displayWR) {\r\n      //     gWR.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"wr\")\r\n      //     .attr('d', lineGeneratorWR(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',3)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".wr\").remove()\r\n      // }\r\n\r\n      // const gAO = svg.append(\"g\")\r\n      //     .attr(\"stroke-linecap\", \"round\")\r\n      //     .attr(\"stroke\", \"pink\")\r\n      //     .selectAll(\"g\")\r\n      //     .data(data)\r\n      //     .join(\"g\")\r\n\r\n      // const lineGeneratorAO = line()\r\n      //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n      //     .y(d => y(d.ao))\r\n      //     .curve(curveLinear);\r\n\r\n      // if (displayAO) {\r\n      //     gAO.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"ao\")\r\n      //     .attr('d', lineGeneratorAO(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',3)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".ao\").remove()\r\n      // }\r\n\r\n      // const gKama = svg.append(\"g\")\r\n      //     .attr(\"stroke-linecap\", \"round\")\r\n      //     .attr(\"stroke\", \"darkgreen\")\r\n      //     .selectAll(\"g\")\r\n      //     .data(data)\r\n      //     .join(\"g\")\r\n\r\n      // const lineGeneratorKama = line()\r\n      //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n      //     .y(d => y(d.kama))\r\n      //     .curve(curveLinear);\r\n\r\n      // if (displayKama) {\r\n      //     gKama.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"kama\")\r\n      //     .attr('d', lineGeneratorKama(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',3)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".kama\").remove()\r\n      // }\r\n\r\n      // const gROC = svg.append(\"g\")\r\n      //     .attr(\"stroke-linecap\", \"round\")\r\n      //     .attr(\"stroke\", \"lightblue\")\r\n      //     .selectAll(\"g\")\r\n      //     .data(data)\r\n      //     .join(\"g\")\r\n\r\n      // const lineGeneratorROC = line()\r\n      //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n      //     .y(d => y(d.roc))\r\n      //     .curve(curveLinear);\r\n\r\n      // if (displayROC) {\r\n      //     gROC.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"roc\")\r\n      //     .attr('d', lineGeneratorROC(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',3)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".roc\").remove()\r\n      // }\r\n\r\n      return svg.node();\r\n\r\n    }\r\n    createMomentumIndicatorsChart(momentumIndicatorsChartNode)\r\n  }\r\n      \r\n  \r\n\r\n\r\n\r\n\r\n  return props.stockData.loading ? (\r\n\r\n\r\n    <h2>Loading</h2>\r\n  ) : props.stockData.error ? (\r\n    <h2>{props.stockData.error}</h2>\r\n  ) : (\r\n    <div>\r\n        <React.Fragment>\r\n            <svg ref={momentumIndicatorsChartNode}></svg>\r\n        </React.Fragment>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    stockData: state.stockDataFromRootReducer.stockData,\r\n    trendData: state.trendFromRootReducer.trendData,\r\n    loads: state.stockDataFromRootReducer.loads,\r\n    momentumLoads: state.momentumFromRootReducer.momentumLoads,\r\n    momentumData: state.momentumFromRootReducer.momentumData,\r\n    fetchMomentumData: state.momentumFromRootReducer.fetchMomentumData,\r\n    displayRSI: state.momentumFromRootReducer.displayRSI,\r\n    nForRSI: state.momentumFromRootReducer.nForRSI,\r\n    displayTSI: state.momentumFromRootReducer.displayTSI,\r\n    rForTSI: state.momentumFromRootReducer.rForTSI,\r\n    sForTSI: state.momentumFromRootReducer.sForTSI,\r\n    displayMACD: state.trendFromRootReducer.displayMACD,\r\n    nSlowForMACD: state.trendFromRootReducer.nSlowForMACD,\r\n    nFastForMACD: state.trendFromRootReducer.nFastForMACD\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //requestAPIstockData: (APIstring) => dispatch(requestAPIstockData(APIstring)),\r\n    fetchMomentumData: (APIstring) => dispatch(fetchMomentumData(APIstring))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MomentumGraphContainer)\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport './App.css'\r\nimport store from './redux/store'\r\nimport SelectTickerContainer from './components/SelectTickerContainer'\r\nimport SelectDatesFromMenuContainer from './components/SelectDatesFromMenuContainer'\r\nimport SelectCustomDatesContainer from './components/SelectCustomDatesContainer'\r\nimport SelectLineOrCandleContainer from './components/SelectLineOrCandleContainer'\r\nimport LineCandleGraphContainer from './components/LineCandleGraphContainer'\r\nimport VolumeGraphContainer from './components/VolumeGraphContainer'\r\nimport { Grid, Accordion, Header, Icon} from \"semantic-ui-react\"\r\nimport MomentumMenuContainer from './components/MomentumMenuContainer'\r\nimport TrendMenuContainer from './components/TrendMenuContainer'\r\nimport MomentumGraphContainer from './components/MomentumGraphContainer'\r\nimport momentumReducer from './redux/momentum/momentumReducer'\r\n\r\n\r\nfunction App () {\r\n  const [activeMomentumAccodian, setMomentumAccordion] = useState(0)\r\n  const [activeTrendAccodian, setTrendAccordion] = useState(-1)\r\n  return (\r\n    <Provider store={store}>\r\n      <div className='App'>\r\n        <Grid celled>\r\n          <Grid.Column width = {4}>\r\n            <Grid.Row stretched>\r\n              <SelectTickerContainer /><br/>\r\n              <SelectDatesFromMenuContainer /><br/>\r\n              <SelectCustomDatesContainer /><br/>\r\n              <SelectLineOrCandleContainer /><br/>\r\n              <Header as='h2' textAlign='center'>\r\n                Indicators\r\n              </Header>\r\n              <Accordion>\r\n                <Accordion.Title\r\n                  active={activeMomentumAccodian=== 0}\r\n                  index={0}\r\n                  borderless\r\n                  onClick={(e,index) => {\r\n                      setMomentumAccordion(index.index === activeMomentumAccodian ? -1 : index.index)\r\n                      }}>\r\n                    <Header as='h3' textAlign='left'><Icon name='dropdown' />Momentum</Header>\r\n                </Accordion.Title>\r\n                <Accordion.Content borderless active={activeMomentumAccodian === 0} content={<MomentumMenuContainer />} />\r\n                <Accordion.Title\r\n                  active={activeMomentumAccodian=== 1}\r\n                  content=''\r\n                  index={1}\r\n                  borderless\r\n                  onClick={(e,index) => {\r\n                      setTrendAccordion(index.index === activeTrendAccodian ? -1 : index.index)\r\n                      }}>\r\n                    <Header as='h3' textAlign='left'><Icon name='dropdown' />Trend</Header>\r\n                </Accordion.Title>\r\n                <Accordion.Content borderless active={activeTrendAccodian === 1} content={<TrendMenuContainer />} />\r\n              </Accordion>\r\n              \r\n            </Grid.Row>\r\n          </Grid.Column>\r\n          <Grid.Column width = {12}>\r\n            <LineCandleGraphContainer /><br/>\r\n            <VolumeGraphContainer/><br/>\r\n            <MomentumGraphContainer/>\r\n          </Grid.Column>\r\n        </Grid>\r\n        \r\n        \r\n        {/* <ItemContainer cake />\r\n        <ItemContainer />\r\n        <NewCakeContainer />\r\n        <UsersContainer />\r\n        <HooksCakeContainer />\r\n        <IceCreamContainer /> */}\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n// import React, { useEffect, useState } from 'react';\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n// import { Container } from \"semantic-ui-react\"\r\n// import { StockData } from './components/StockData';\r\n// import { exampleRedux } from './components/exampleRedux'\r\n// import { Provider } from 'react-redux'\r\n// import store from './components/redux/store'\r\n// function App() {\r\n\r\n//   return (\r\n//     <Provider store={store}>\r\n//       <div className=\"App\">\r\n//       {/* <Container style={{marginTop: 40}}>\r\n//         <StockData />\r\n//       </Container> \r\n//       <StockData />*/}\r\n//         <exampleRedux />\r\n//       </div>\r\n//     </Provider>\r\n    \r\n//   );\r\n// }\r\n\r\n// export default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}