{"version":3,"sources":["logo.svg","components/AccordionExampleMenu.js","components/charts/volumeBarChart.js","components/charts/earningChart.js","components/charts/stockPriceLineChart.js","components/charts/momentumIndicatorsChart.js","components/StockData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ColorForm","Form","Group","grouped","Checkbox","label","name","value","SizeForm","Radio","type","Component","createVolumeBarChart","data","showVolumeNode","svg","select","current","selectAll","remove","margin","parseDate","d3","attr","innerHeight","x","scaleBand","domain","range","date","length","filter","d","getUTCDay","padding","y","scaleLinear","volume","rangeRound","append","call","g","tickValues","every","tickFormat","ticks","join","bandwidth","open","close","node","createEarningsChart","earningsChartNode","innerWidth","yScale","Math","min","consensusEPS","actualEPS","max","xScale","map","fiscalPeriod","enter","createStockPriceLineChart","stockPriceLineChartNode","displayPriceChart","displayEMA","low","high","clone","lineGenerator","line","curve","curveLinear","gEMA","lineGeneratorEMA","ema","createMomentumIndicatorsChart","momentumIndicatorsChartNode","displayRSIcheckbox","displayTSIcheckbox","displayUOcheckbox","displayStochCheckbox","displayStochSignalCheckbox","displayWR","displayAO","displayKama","displayROC","i","console","log","gRSI","lineGeneratorRSI","rsi","gTSI","lineGeneratorTSI","tsi","gUO","lineGeneratorUO","UO","gStoch","lineGeneratorStoch","stoch","gStochSignal","lineGeneratorStochSignal","stoch_signal","gWR","lineGeneratorWR","wr","gAO","lineGeneratorAO","ao","gKama","lineGeneratorKama","kama","gROC","lineGeneratorROC","roc","StockData","currentDate","Date","setTime","getTime","useState","startDate","setStartDate","endDate","ticker","setTicker","financials","setFinancials","earnings","setEarnings","activeItemDateMenu","setActiveItemDateMenu","activeFinancialsMenuItem","setActiveFinancialsMenuItem","activeEarningsMenuItem","setActiveEarningsMenuItem","stockData","setStockData","setDisplayPriceChart","setDisplayRSIcheckbox","NforRSI","setNforRSI","activeRSIAccodianMenuItem","setRSIActiveAccordionMenuItem","setDisplayTSIcheckbox","rForTSI","setrForTSI","sForTSI","setsForTSI","activeTSIAccodianMenuItem","setTSIActiveAccordionMenuItem","displayUOCheckbox","setDisplayUOCheckbox","sForUO","setsForUO","mForUO","setmForUO","lenForUO","setlenForUO","wsForUO","setwsForUO","wmForUO","setwmForUO","wlForUO","setwlForUO","activeUOAccodianMenuItem","setUOActiveAccordionMenuItem","setDisplayStochCheckbox","nForStoch","setNForStoch","d_nForStoch","setd_nForStoch","activeStochAccodianMenuItem","setStochActiveAccordionMenuItem","setDisplayStochSignalCheckbox","nForStochSignal","setNForStochSignal","d_nForStochSignal","setd_nForStochSignal","activeStochSignalAccodianMenuItem","setStochSignalActiveAccordionMenuItem","setDisplayWR","lbpForWR","setLBPForWR","activeWRAccodianMenuItem","setWRActiveAccordionMenuItem","setDisplayAO","sForAO","setSForAO","lenForAO","setLenForAO","activeAOAccodianMenuItem","setAOActiveAccordionMenuItem","setDisplayKama","nForKama","setNForKama","pow1ForKama","setPow1ForKama","pow2ForKama","setPow2ForKama","activeKamaAccodianMenuItem","setKamaActiveAccordionMenuItem","setDisplayROC","nForROC","setNForROC","activeROCAccodianMenuItem","setROCActiveAccordionMenuItem","setDisplayEMA","nForEMA","setNForEMA","activeEMAAccodianMenuItem","setEMAActiveAccordionMenuItem","useRef","convertDatesToString","initialDate","String","getFullYear","getMonth","getDate","getAndSetStockData","stockTicker","theStartDate","theEndDate","startDateConverted","endDateConverted","fetch","then","response","json","createMomentumIndicatorsChartFunction","getAndSetFinancials","getAndSetEarnings","handleStartDateClick","handleDateClick","minusDays","dateOffset","useEffect","EMAparameters","method","headers","body","JSON","stringify","dataForTrendfromAPI","catch","error","createTrendIndicatorsChartFunction","RSIparameters","TSIparameters","UOparameters","StochParameters","StochSignalParameters","WRParameters","AOParameters","KamaParameters","ROCParameters","dataForMomfromAPI","momentumNtradingDayOptions","key","text","RSIcontentPanel","Grid","columns","Column","width","Field","control","Select","options","placeholder","compact","onChange","e","selectedOption","TSIcontentPanel","Row","UOcontentPanel","StochcontentPanel","StochSignalcontentPanel","WRcontentPanel","AOcontentPanel","KamacontentPanel","ROCcontentPanel","level1MomentumMenuPanels","title","content","as","index","Level1MomentumContent","className","Accordion","panels","EMAcontentPanel","level1TrendMenuPanels","RSIAccordionTitle","borderless","defaultChecked","onClick","event","stopPropagation","TSIAccordionTitle","UOAccordionTitle","StochAccordionTitle","StochSignalAccordionTitle","WRAccordionTitle","AOAccordionTitle","KamaAccordionTitle","ROCAccordionTitle","EMAAccordionTitle","celled","stretched","Input","target","isClearable","Button","animated","primary","Content","visible","hidden","Icon","Menu","widths","Item","active","Header","selected","maxDate","placeholderText","showYearDropdown","scrollableMonthYearDropdown","toggle","id","vertical","fluid","Title","Fragment","ref","Object","keys","Segment","horizontal","grossProfit","operatingRevenue","totalRevenue","totalAssets","totalLiabilities","totalCash","netIncome","researchAndDevelopment","cashFlow","totalDebt","shortTermDebt","longTermDebt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"js/main.93b7ffea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport { Accordion, Form, Menu } from 'semantic-ui-react'\r\n\r\nconst ColorForm = (\r\n  <Form>\r\n    <Form.Group grouped>\r\n      <Form.Checkbox label='Red' name='color' value='red' />\r\n      <Form.Checkbox label='Orange' name='color' value='orange' />\r\n      <Form.Checkbox label='Green' name='color' value='green' />\r\n      <Form.Checkbox label='Blue' name='color' value='blue' />\r\n    </Form.Group>\r\n  </Form>\r\n)\r\n\r\nconst SizeForm = (\r\n  <Form>\r\n    <Form.Group grouped>\r\n      <Form.Radio label='Small' name='size' type='radio' value='small' />\r\n      <Form.Radio label='Medium' name='size' type='radio' value='medium' />\r\n      <Form.Radio label='Large' name='size' type='radio' value='large' />\r\n      <Form.Radio label='X-Large' name='size' type='radio' value='x-large' />\r\n    </Form.Group>\r\n  </Form>\r\n)\r\n\r\nexport default class AccordionExampleMenu extends Component {\r\n  state = { activeIndex: 0 }\r\n\r\n  handleClick = (e, titleProps) => {\r\n    const { index } = titleProps\r\n    const { activeIndex } = this.state\r\n    const newIndex = activeIndex === index ? -1 : index\r\n\r\n    this.setState({ activeIndex: newIndex })\r\n  }\r\n\r\n  render() {\r\n    const { activeIndex } = this.state\r\n\r\n    return (\r\n      <Accordion as={Menu} vertical>\r\n        <Menu.Item>\r\n          <Accordion.Title\r\n            active={activeIndex === 0}\r\n            content='Size'\r\n            index={0}\r\n            onClick={this.handleClick}\r\n          />\r\n          <Accordion.Content active={activeIndex === 0} content={SizeForm} />\r\n        </Menu.Item>\r\n\r\n        <Menu.Item>\r\n          <Accordion.Title\r\n            active={activeIndex === 1}\r\n            content='Colors'\r\n            index={1}\r\n            onClick={this.handleClick}\r\n          />\r\n          <Accordion.Content active={activeIndex === 1} content={ColorForm} />\r\n        </Menu.Item>\r\n      </Accordion>\r\n    )\r\n  }\r\n}","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { scaleLinear, scaleBand, scalePoint, tickFormat } from 'd3-scale'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\n\r\nexport function createVolumeBarChart(data,showVolumeNode) {\r\n    const svg = select(showVolumeNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n    const margin = ({top: 30, right: 30, bottom: 50, left: 40})\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    const height = 150;\r\n    const width = 700;\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    const x = scaleBand()\r\n        .domain(d3.utcDay\r\n            .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n            .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2)\r\n\r\n    // d3.min(data, d => d.volume)-(d3.max(data, d => d.volume)-d3.min(data, d => d.volume))/10\r\n    const y = scaleLinear()\r\n        .domain([0, d3.max(data, d => d.volume)])\r\n        .rangeRound([0,innerHeight])\r\n    //console.log(y.domain())\r\n    const xAxis = g => g\r\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .tickValues(d3.utcMonday\r\n                .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n            .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n        .call(g => g.select(\".domain\").remove())\r\n    \r\n\r\n    const yAxis = g => g\r\n        .attr(\"transform\", `translate(${margin.left},0)`)\r\n        .call(d3.axisLeft(y).ticks(0))\r\n        //     .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n        // .call(g => g.selectAll(\".tick line\").clone()\r\n        //     .attr(\"stroke-width\", 0))\r\n            //.attr(\"x2\", width - margin.left - margin.right))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    // yAxis.select('.domain')\r\n    //     .attr('stroke-width', 0);\r\n\r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n        \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n\r\n    const g = svg.append(\"g\")\r\n        // .attr(\"stroke\", \"black\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n        .attr(\"transform\", data => `translate(${x(parseDate(data.date))},0)`);\r\n\r\n    g.append(\"rect\")\r\n        .attr('width', d=>(x.bandwidth()+x.padding()))\r\n        .attr('height',d=>y(d.volume))\r\n        .attr(\"fill\", d => d.open > d.close ? d3.schemeSet1[0]\r\n            : d.close > d.open ? d3.schemeSet1[2]\r\n            : d3.schemeSet1[8])\r\n        .attr('transform',`translate(${x.bandwidth()},${innerHeight})  rotate(180)`)\r\n\r\n    return svg.node();\r\n}","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { scaleLinear, scaleBand, scalePoint } from 'd3-scale'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\n\r\nexport function createEarningsChart(data,earningsChartNode) {\r\n    // https://www.youtube.com/watch?v=UDDGcgxficY \r\n    // stopped video at 3:41\r\n    // https://observablehq.com/d/8974f775c6a0ae5d\r\n    const svg = select(earningsChartNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n    const margin = ({top: 30, right: 30, bottom: 50, left: 40})\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    const xLabel = 'Fiscal Period';\r\n    const yLabel = 'Earnings Per Share'\r\n    const width = 700;\r\n    const height = 350;\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    const yScale = scaleLinear()\r\n        .domain([d3.min(data,d => Math.min(d.consensusEPS,d.actualEPS)),d3.max(data,d => Math.max(d.consensusEPS,d.actualEPS))])\r\n        .range([innerHeight,0])\r\n\r\n    const yAxis = d3.axisLeft(yScale)\r\n\r\n    const xScale = scaleBand()\r\n        .domain(data.map(d => d.fiscalPeriod))\r\n        .range([0,innerWidth])\r\n        \r\n    \r\n    const xAxis = d3.axisBottom(xScale);\r\n\r\n    const g = svg.append('g')\r\n        .attr('transform',`translate(${margin.left},${margin.top})`);\r\n\r\n    g.append('g').call(d3.axisLeft(yScale))\r\n        .select(\".domain\").remove();\r\n    g.append('g').call(d3.axisBottom(xScale))\r\n        .attr('transform',`translate(0,${innerHeight})`)\r\n        .select(\".domain\").remove();\r\n\r\n    g.selectAll('circle')\r\n        .data(data)\r\n        .enter()\r\n        .append('circle')\r\n            .attr('cx', d => ((xScale.bandwidth()/2)+xScale(d.fiscalPeriod)))\r\n            .attr('cy', d => yScale(d.consensusEPS))\r\n            .attr('r',30)\r\n            .attr('fill','green')\r\n            .attr('width', xScale.bandwidth())\r\n        \r\n    return svg.node();\r\n\r\n}","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport * as d3 from \"d3\"\r\n\r\nimport {\r\n    select,\r\n    csv,\r\n    scaleLinear,\r\n    scaleBand,\r\n    scaleTime,\r\n    extent,\r\n    axisLeft,\r\n    axisBottom,\r\n    line,\r\n    curveBasis,\r\n    curveLinear\r\n  } from 'd3';\r\n\r\nexport function createStockPriceLineChart(data,stockPriceLineChartNode,displayPriceChart,displayEMA) {\r\n    \r\n    const svg = select(stockPriceLineChartNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n\r\n    const height = 350;\r\n    const width = 700;\r\n    //const margin = ({top: 20, right: 30, bottom: 30, left: 80})\r\n    //const formatSecond = d3.timeFormat(\":%S\")\r\n    function parseSec(date) {\r\n        return new Date(date * 1000);\r\n    }\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    //new Date(secs * 1000);\r\n    const margin = ({top: 10, right: 30, bottom: 5, left: 40})\r\n    //const parseDate = d3.utcParse(\"%s\")// d3.utcParse(\"%a %b %d %Y %X %LZ\")// d3.utcParse(\"%Y-%m-%d\")\r\n    //console.log(parseDate((data[data.length - 1].date)) + 1)\r\n    const x = scaleBand()\r\n        .domain(d3.utcDay\r\n            .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n            .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2)\r\n\r\n    const y = scaleLinear()\r\n        .domain([d3.min(data, d => d.low), d3.max(data, d => d.high)])\r\n        .rangeRound([height - margin.bottom, margin.top])\r\n\r\n    \r\n\r\n    const xAxis = g => g\r\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .tickValues(d3.utcMonday\r\n                .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n            .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n        .call(g => g.select(\".domain\").remove())\r\n    \r\n\r\n    const yAxis = g => g\r\n        .attr(\"transform\", `translate(${margin.left},0)`)\r\n        .call(d3.axisLeft(y)\r\n            .tickFormat(d3.format(\"$~f\"))\r\n            .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n        .call(g => g.selectAll(\".tick line\").clone()\r\n            .attr(\"stroke-opacity\", 0)\r\n            .attr(\"x2\", width - margin.left - margin.right))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n\r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n        \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n    if (displayPriceChart) {\r\n        svg.selectAll(\"g\").selectAll(\".candleStick\").remove()\r\n\r\n        const g = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"black\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGenerator = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.close))\r\n            .curve(curveLinear);\r\n\r\n        g.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGenerator(data))\r\n            .attr('id','lineChart')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".lineChart\").remove()\r\n\r\n        const g = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"black\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        g.append(\"line\")\r\n            .attr(\"y1\", d => y(d.low))\r\n            .attr(\"y2\", d => y(d.high));\r\n\r\n        g.append(\"line\")\r\n            .attr(\"y1\", d => y(d.open))\r\n            .attr(\"y2\", d => y(d.close))\r\n            .attr(\"id\",\"candleStick\")\r\n            .attr(\"stroke-width\", x.bandwidth())\r\n            .attr(\"stroke\", d => d.open > d.close ? d3.schemeSet1[0]\r\n                : d.close > d.open ? d3.schemeSet1[2]\r\n                : d3.schemeSet1[8]);\r\n    }\r\n\r\n    if (displayEMA) {\r\n        const gEMA = svg.append(\"g\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"stroke\", \"blue\")\r\n            .selectAll(\"g\")\r\n            .data(data)\r\n            .join(\"g\")\r\n            // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n        const lineGeneratorEMA = line()\r\n            .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            .y(d => y(d.ema))\r\n            .curve(curveLinear);\r\n\r\n        gEMA.append('path')\r\n            .attr('class', 'line-path')\r\n            .attr('d', lineGeneratorEMA(data))\r\n            .attr('id','ema')\r\n            .attr('fill','none')\r\n            .attr('stroke-width',3)\r\n            .attr('stroke-linecap','round')\r\n    }\r\n    \r\n    //     .on('mouseover', function (d, i) {\r\n    //         let hoverOverString = 'Date: '+d.date.toString();//(Math.round((d.value / d.data.all) * 100)).toString() + '%';\r\n    //         tooltip.html(d)  \r\n    //             .style(\"left\", (d3.event.pageX) + \"px\")     \r\n    //             .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            \r\n    //         div.html(hoverOverString)\r\n    //              .style(\"left\", (10) + \"px\")\r\n    //              .style(\"top\", (15) + \"px\");\r\n    //     })\r\n    //    .on('mouseout', function (d, i) {\r\n    //     d3.select(svg).transition()\r\n    //          .duration('50')\r\n    //          .attr('opacity', '1');\r\n    //     div.transition()\r\n    //          .duration('50')\r\n    //          .style(\"opacity\", 0);\r\n    //     });\r\n\r\n    // const g2 = svg.append(\"g\")\r\n    //     .attr(\"stroke-linecap\", \"round\")\r\n    //     .attr(\"stroke\", \"red\")\r\n    //     .selectAll(\"g\")\r\n    //     .data(data)\r\n    //     .join(\"g\")\r\n    //     // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n    \r\n    // const lineGenerator2 = line()\r\n    //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n    //     .y(d => y(d.rsi))\r\n    //     .curve(curveLinear);\r\n\r\n    // g2.append('path')\r\n    //     .attr('class', 'line-path')\r\n    //     .attr('d', lineGenerator2(data))\r\n    //     .attr('fill','none')\r\n    //     .attr('stroke-width',5)\r\n    return svg.node();\r\n}","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport * as d3 from \"d3\"\r\nimport {\r\n    select,\r\n    csv,\r\n    scaleLinear,\r\n    scaleBand,\r\n    scaleTime,\r\n    extent,\r\n    axisLeft,\r\n    axisBottom,\r\n    line,\r\n    curveBasis,\r\n    curveLinear\r\n  } from 'd3';\r\n\r\n\r\n\r\n  \r\n\r\nexport function createMomentumIndicatorsChart(data,momentumIndicatorsChartNode,displayRSIcheckbox,displayTSIcheckbox,displayUOcheckbox,displayStochCheckbox,displayStochSignalCheckbox,displayWR,displayAO,displayKama,displayROC) {\r\n\r\n    var min = 0\r\n    var max = 0\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (displayRSIcheckbox) {\r\n            if (data[i]['rsi'] < min) {\r\n                min = data[i]['rsi']\r\n            }\r\n            if (data[i]['rsi'] > max) {\r\n                max = data[i]['rsi']\r\n            }\r\n        }\r\n        if (displayTSIcheckbox) {\r\n            console.log(data[i]['tsi'])\r\n            if (data[i]['tsi'] < min) {\r\n                min = data[i]['tsi']\r\n                console.log(data[i]['tsi'])\r\n            }\r\n            if (data[i]['tsi'] > max) {\r\n                max = data[i]['tsi']\r\n            }\r\n        }\r\n        if (displayUOcheckbox) {\r\n            if (data[i]['uo'] < min) {\r\n                min = data[i]['uo']\r\n            }\r\n            if (data[i]['uo'] > max) {\r\n                max = data[i]['uo']\r\n            }\r\n        }\r\n        if (displayStochCheckbox) {\r\n            if (data[i]['stoch'] < min) {\r\n                min = data[i]['stoch']\r\n            }\r\n            if (data[i]['stoch'] > max) {\r\n                max = data[i]['stoch']\r\n            }\r\n        }\r\n        if (displayStochSignalCheckbox) {\r\n            if (data[i]['stoch_signal'] < min) {\r\n                min = data[i]['stoch_signal']\r\n            }\r\n            if (data[i]['stoch_signal'] > max) {\r\n                max = data[i]['stoch_signal']\r\n            }\r\n        }\r\n        if (displayWR) {\r\n            if (data[i]['wr'] < min) {\r\n                min = data[i]['wr']\r\n            }\r\n            if (data[i]['wr'] > max) {\r\n                max = data[i]['wr']\r\n            }\r\n        }\r\n        if (displayAO) {\r\n            if (data[i]['ao'] < min) {\r\n                min = data[i]['ao']\r\n            }\r\n            if (data[i]['ao'] > max) {\r\n                max = data[i]['ao']\r\n            }\r\n        }\r\n        if (displayKama) {\r\n            if (data[i]['kama'] < min) {\r\n                min = data[i]['kama']\r\n            }\r\n            if (data[i]['kama'] > max) {\r\n                max = data[i]['kama']\r\n            }\r\n        }\r\n        if (displayROC) {\r\n            if (data[i]['roc'] < min) {\r\n                min = data[i]['roc']\r\n            }\r\n            if (data[i]['roc'] > max) {\r\n                max = data[i]['roc']\r\n            }\r\n        }\r\n    }\r\n    if (min == 0 && max == 0) {\r\n        max = 80\r\n    }\r\n    console.log(min)\r\n    // function min_max(data,displayRSIcheckbox,displayTSIcheckbox,displayUOcheckbox,displayStochCheckbox,displayStochSignalCheckbox)  {\r\n    //     var min = 0\r\n    //     var max = 0\r\n    //     console.log(displayRSIcheckbox)\r\n    //     console.log(displayTSIcheckbox)\r\n    //     for (var i = 0; i < data.length; i++) {\r\n    //         if (displayRSIcheckbox) {\r\n    //             if (data[i]['rsi'] < min) {\r\n    //                 min = data[i]['rsi']\r\n    //             }\r\n    //             if (data[i]['rsi'] > max) {\r\n    //                 max = data[i]['rsi']\r\n    //             }\r\n    //         }\r\n    //         if (displayTSIcheckbox) {\r\n    //             console.log(data[i]['tsi'])\r\n    //             if (data[i]['tsi'] < min) {\r\n    //                 min = data[i]['tsi']\r\n    //                 console.log(data[i]['tsi'])\r\n    //             }\r\n    //             if (data[i]['tsi'] > max) {\r\n    //                 max = data[i]['tsi']\r\n    //             }\r\n    //         }\r\n    //         if (displayUOcheckbox) {\r\n    //             if (data[i]['uo'] < min) {\r\n    //                 min = data[i]['uo']\r\n    //             }\r\n    //             if (data[i]['uo'] > max) {\r\n    //                 max = data[i]['uo']\r\n    //             }\r\n    //         }\r\n    //         if (displayStochCheckbox) {\r\n    //             if (data[i]['stoch'] < min) {\r\n    //                 min = data[i]['stoch']\r\n    //             }\r\n    //             if (data[i]['stoch'] > max) {\r\n    //                 max = data[i]['stoch']\r\n    //             }\r\n    //         }\r\n    //         if (displayStochSignalCheckbox) {\r\n    //             if (data[i]['stoch_signal'] < min) {\r\n    //                 min = data[i]['stoch_signal']\r\n    //             }\r\n    //             if (data[i]['stoch_signal'] > max) {\r\n    //                 max = data[i]['stoch_signal']\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     if (min == 0 && max == 0) {\r\n    //         max = 80\r\n    //     }\r\n    //     return [min,max]\r\n    // }\r\n            \r\n    \r\n    //console.log(data)\r\n\r\n\r\n    const svg = select(momentumIndicatorsChartNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n\r\n    //console.log(displayRSIcheckbox)\r\n\r\n    const height = 150;\r\n    const width = 700;\r\n    //const margin = ({top: 20, right: 30, bottom: 30, left: 80})\r\n\r\n    const margin = ({top: 5, right: 30, bottom: 50, left: 40})\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    \r\n    const x = scaleBand()\r\n        .domain(d3.utcDay\r\n            .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n            .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2)\r\n\r\n    var y = scaleLinear()\r\n        //.domain([d3.min(data, d => d.rsi), d3.max(data, d => d.rsi)])\r\n        .domain([min,max])\r\n        .rangeRound([height - margin.bottom, margin.top])\r\n\r\n    const xAxis = g => g\r\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .tickValues(d3.utcMonday\r\n                .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n            .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    var yAxis = g => g\r\n        .attr(\"transform\", `translate(${margin.left},0)`)\r\n        .call(d3.axisLeft(y)\r\n            .tickFormat(d3.format(\"~f\"))\r\n            .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n        .call(g => g.selectAll(\".tick line\").clone()\r\n            .attr(\"stroke-opacity\", 0)\r\n            .attr(\"x2\", width - margin.left - margin.right))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n\r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n        \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n\r\n    const gRSI = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"red\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n        // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n    const lineGeneratorRSI = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.rsi))\r\n        .curve(curveLinear);\r\n\r\n    if (displayRSIcheckbox) {\r\n        gRSI.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"rsi\")\r\n        .attr('d', lineGeneratorRSI(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".rsi\").remove()\r\n    }\r\n\r\n    const gTSI = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"blue\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorTSI = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.tsi))\r\n        .curve(curveLinear);\r\n\r\n    if (displayTSIcheckbox) {\r\n        gTSI.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"tsi\")\r\n        .attr('d', lineGeneratorTSI(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".tsi\").remove()\r\n    }\r\n\r\n    const gUO = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"green\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorUO = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.UO))\r\n        .curve(curveLinear);\r\n\r\n    if (displayUOcheckbox) {\r\n        gUO.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"uo\")\r\n        .attr('d', lineGeneratorUO(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".uo\").remove()\r\n    }\r\n    \r\n    \r\n    const gStoch = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"purple\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorStoch = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.stoch))\r\n        .curve(curveLinear);\r\n\r\n    if (displayStochCheckbox) {\r\n        gStoch.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"stoch\")\r\n        .attr('d', lineGeneratorStoch(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".stoch\").remove()\r\n    }\r\n\r\n    \r\n    const gStochSignal = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"yellow\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorStochSignal = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.stoch_signal))\r\n        .curve(curveLinear);\r\n\r\n    if (displayStochSignalCheckbox) {\r\n        gStochSignal.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"stochSignal\")\r\n        .attr('d', lineGeneratorStochSignal(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".stochSignal\").remove()\r\n    }\r\n\r\n    const gWR = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"orange\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorWR = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.wr))\r\n        .curve(curveLinear);\r\n\r\n    if (displayWR) {\r\n        gWR.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"wr\")\r\n        .attr('d', lineGeneratorWR(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".wr\").remove()\r\n    }\r\n\r\n    const gAO = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"pink\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorAO = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.ao))\r\n        .curve(curveLinear);\r\n\r\n    if (displayAO) {\r\n        gAO.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"ao\")\r\n        .attr('d', lineGeneratorAO(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".ao\").remove()\r\n    }\r\n\r\n    const gKama = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"darkgreen\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorKama = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.kama))\r\n        .curve(curveLinear);\r\n\r\n    if (displayKama) {\r\n        gKama.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"kama\")\r\n        .attr('d', lineGeneratorKama(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".kama\").remove()\r\n    }\r\n\r\n    const gROC = svg.append(\"g\")\r\n        .attr(\"stroke-linecap\", \"round\")\r\n        .attr(\"stroke\", \"lightblue\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n\r\n    const lineGeneratorROC = line()\r\n        .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n        .y(d => y(d.roc))\r\n        .curve(curveLinear);\r\n\r\n    if (displayROC) {\r\n        gROC.append('path')\r\n        .attr('class', 'line-path')\r\n        .attr(\"id\", \"roc\")\r\n        .attr('d', lineGeneratorROC(data))\r\n        .attr('fill','none')\r\n        .attr('stroke-width',3)\r\n        .attr('stroke-linecap','round')\r\n    }else{\r\n        svg.selectAll(\"g\").selectAll(\".roc\").remove()\r\n    }\r\n\r\n    return svg.node();\r\n\r\n}","import React, {useState, useEffect, useRef} from 'react';\r\nimport \"semantic-ui-css/semantic.min.css\"\r\nimport '../App.css'\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { Label, List, Message, Header, Form, Input, Button, Radio, Grid, Container, Menu, Sidebar, Icon, Accordion, Segment,  Checkbox, Select } from \"semantic-ui-react\"\r\nimport AccordionExampleMenu from './AccordionExampleMenu'\r\nimport { createCandleStickChart } from './charts/candleStickChart.js'\r\nimport { createVolumeBarChart } from './charts/volumeBarChart.js'\r\nimport { createEarningsChart } from './charts/earningChart.js'\r\nimport { createStockPriceLineChart } from './charts/stockPriceLineChart';\r\nimport { createMomentumIndicatorsChart } from './charts/momentumIndicatorsChart'\r\n\r\nexport const StockData = () => {\r\n\tvar currentDate = new Date();\r\n\tvar dateOffset = (24*60*60*1000) * 182; \r\n\tvar newDate = currentDate.setTime(currentDate.getTime() - dateOffset);\r\n\t\r\n\tconst [startDate, setStartDate] = useState(currentDate);\r\n\tconst [endDate, setEndDate] = useState(new Date());\r\n\tconst [ticker, setTicker] = useState('AAPL');\r\n\tconst [financials, setFinancials] = useState([])\r\n\tconst [earnings, setEarnings] = useState([])\r\n\tconst [activeItemDateMenu, setActiveItemDateMenu] = useState('');\r\n\tconst [activeFinancialsMenuItem, setActiveFinancialsMenuItem] = useState()\r\n\tconst [activeEarningsMenuItem, setActiveEarningsMenuItem] = useState()\r\n\r\n\tconst [stockData, setStockData] = useState([]);\r\n    const [displayPriceChart, setDisplayPriceChart] = useState(true)\r\n    \r\n\tconst [displayRSIcheckbox, setDisplayRSIcheckbox] = useState(true)\r\n\tconst [NforRSI, setNforRSI] = useState(10)\r\n    const [activeRSIAccodianMenuItem, setRSIActiveAccordionMenuItem] = useState(-1)\r\n\r\n\tconst [displayTSIcheckbox, setDisplayTSIcheckbox] = useState(false)\r\n\tconst [rForTSI, setrForTSI] = useState(25)\r\n    const [sForTSI, setsForTSI] = useState(13)\r\n    const [activeTSIAccodianMenuItem, setTSIActiveAccordionMenuItem] = useState(-1)\r\n\r\n\tconst [displayUOCheckbox, setDisplayUOCheckbox] = useState(false)\r\n\tconst [sForUO, setsForUO] = useState(7)\r\n\tconst [mForUO, setmForUO] = useState(14)\r\n\tconst [lenForUO, setlenForUO] = useState(28)\r\n\tconst [wsForUO, setwsForUO] = useState(4)\r\n\tconst [wmForUO, setwmForUO] = useState(2)\r\n    const [wlForUO, setwlForUO] = useState(1)\r\n    const [activeUOAccodianMenuItem, setUOActiveAccordionMenuItem] = useState(-1)\r\n    \r\n    const [displayStochCheckbox, setDisplayStochCheckbox] = useState(false)\r\n    const [nForStoch, setNForStoch] = useState(14)\r\n    const [d_nForStoch, setd_nForStoch] = useState(3)\r\n    const [activeStochAccodianMenuItem, setStochActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayStochSignalCheckbox, setDisplayStochSignalCheckbox] = useState(false)\r\n    const [nForStochSignal, setNForStochSignal] = useState(14)\r\n    const [d_nForStochSignal, setd_nForStochSignal] = useState(3)\r\n    const [activeStochSignalAccodianMenuItem, setStochSignalActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayWR, setDisplayWR] = useState(false)\r\n    const [lbpForWR, setLBPForWR] = useState(14)\r\n    const [activeWRAccodianMenuItem, setWRActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayAO, setDisplayAO] = useState(false)\r\n    const [sForAO, setSForAO] = useState(5)\r\n    const [lenForAO, setLenForAO] = useState(34)\r\n    const [activeAOAccodianMenuItem, setAOActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayKama, setDisplayKama] = useState(false)\r\n    const [nForKama, setNForKama] = useState(10)\r\n    const [pow1ForKama, setPow1ForKama] = useState(2)\r\n    const [pow2ForKama, setPow2ForKama] = useState(30)\r\n    const [activeKamaAccodianMenuItem, setKamaActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayROC, setDisplayROC] = useState(false)\r\n    const [nForROC, setNForROC] = useState(12)\r\n    const [activeROCAccodianMenuItem, setROCActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayEMA, setDisplayEMA] = useState(false)\r\n    const [nForEMA, setNForEMA] = useState(12)\r\n    const [activeEMAAccodianMenuItem, setEMAActiveAccordionMenuItem] = useState(-1)\r\n\r\n\tconst earningsChartNode = useRef(null);\r\n\tconst showVolumeNode = useRef(null);\r\n\tconst stockPriceLineChartNode = useRef(null);\r\n    const momentumIndicatorsChartNode = useRef(null);\r\n\r\n\tif (stockData.length < 1 && earnings.length < 1){\r\n\t\tgetAndSetStockData(ticker,startDate,endDate)\r\n\t\tgetAndSetEarnings(ticker)\r\n\t}\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (stockData.length > 0) {\r\n\t\t\t//createStockPriceLineChart(stockData,stockPriceLineChartNode,displayPriceChart);\r\n            createTrendIndicatorsChartFunction(stockData,stockPriceLineChartNode);\r\n            createVolumeBarChart(stockData,showVolumeNode);\r\n\t\t\tcreateMomentumIndicatorsChartFunction(stockData,momentumIndicatorsChartNode)\r\n\t\t}\r\n\r\n\t\tif (earnings.length > 0) {\r\n\t\t\t//console.log(earnings)\r\n\t\t\tcreateEarningsChart(earnings,earningsChartNode)\r\n\t\t}\r\n\t},[stockData,displayRSIcheckbox,NforRSI,displayTSIcheckbox,rForTSI,sForTSI,displayUOCheckbox,sForUO,mForUO,lenForUO,wsForUO,wmForUO,wlForUO,displayStochCheckbox,nForStoch,d_nForStoch,,displayStochSignalCheckbox,nForStochSignal,d_nForStochSignal,displayWR,lbpForWR,displayAO,sForAO,lenForAO,displayKama,nForKama,pow1ForKama,pow2ForKama,displayROC,nForROC,displayPriceChart,displayEMA])\r\n\r\n\r\n\tfunction convertDatesToString(initialDate) {\r\n\t\tconst convertedDate = String(initialDate.getFullYear())+\"-\"+String(initialDate.getMonth() + 1)+\"-\"+String(initialDate.getDate())\r\n\t\treturn convertedDate\r\n\t}\r\n\r\n\tfunction getAndSetStockData(stockTicker,theStartDate,theEndDate) {\r\n\r\n\t\tconst startDateConverted = convertDatesToString(theStartDate) \r\n\t\tconst endDateConverted = convertDatesToString(theEndDate) \r\n\t\tfetch(\"/get_stock_data/\"+stockTicker+\"/\"+startDateConverted+\"/\"+endDateConverted).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tif (stockData.length < 1) {\r\n\t\t\t\t\tcreateStockPriceLineChart(data,stockPriceLineChartNode,displayPriceChart);\r\n\t\t\t\t\tcreateVolumeBarChart(data,showVolumeNode);\r\n\t\t\t\t\tcreateMomentumIndicatorsChartFunction(data,momentumIndicatorsChartNode);\r\n\t\t\t\t}\r\n\t\t\t\tsetStockData(data);\r\n\r\n\t\t\t})\r\n\t\t)\r\n\t}\r\n\r\n\tfunction getAndSetFinancials(stockTicker) {\r\n\t\tfetch(\"/get_financial_data/\"+stockTicker).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tsetFinancials(data)\r\n\t\t\t}))\r\n\t}\r\n\r\n\tfunction getAndSetEarnings(stockTicker) {\r\n\t\tfetch(\"/get_earnings_data/\"+stockTicker).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tif (earnings.length < 1) {\r\n\t\t\t\t\tcreateEarningsChart(data,earningsChartNode)\r\n\t\t\t\t}\r\n\t\t\t\tsetEarnings(data)\r\n\t\t\t}))\r\n\t}\r\n\r\n\tfunction handleStartDateClick(date) {\r\n\t\tif (date !== startDate) {\r\n\t\t\tsetStartDate(date)\r\n\t\t\t\r\n\t\t}\r\n\t\tgetAndSetStockData(ticker,date,endDate)\r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\t}\r\n\t\r\n\tfunction handleDateClick(minusDays, name) {\r\n\t\tsetActiveItemDateMenu(name)\r\n\t\t\r\n\t\tvar currentDate = new Date();\r\n\t\tvar dateOffset = (24*60*60*1000) * minusDays; \r\n\t\tvar newDate = currentDate.setTime(currentDate.getTime() - dateOffset);\r\n\t\tsetStartDate(currentDate);\r\n\t\tgetAndSetStockData(ticker,currentDate,endDate) \r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\t}\r\n\r\n\tfunction handleEndDateClick(date) {\r\n\t\tsetEndDate(date)\r\n\t\tgetAndSetStockData(ticker,startDate,date) \r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\r\n\t}\r\n\r\n\tfunction handleTickerFormSubmit() {\r\n\t\tgetAndSetStockData(ticker,startDate,endDate) \r\n\t\tgetAndSetFinancials(ticker);\r\n\t\tgetAndSetEarnings(ticker);\r\n\t}\r\n\r\n    const handlePriceClickLine = (event, {value}) => setDisplayPriceChart(true)\r\n    const handlePriceClickCandle = (event, {value}) => setDisplayPriceChart(false)\r\n\r\n\r\n    function createTrendIndicatorsChartFunction(data, stockPriceLineChartNode) {\r\n        const EMAparameters = {'displayEMA':displayEMA,'nForEMA':nForEMA}\r\n\r\n        if (data.length > 1) {\r\n            fetch('/calculate_Trend_Indicators/', {\r\n\t\t\t\tmethod: 'POST', // or 'PUT'\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify([data,EMAparameters]),\r\n\t\t\t\t})\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(dataForTrendfromAPI => {\r\n\t\t\t\t\tcreateStockPriceLineChart(dataForTrendfromAPI,stockPriceLineChartNode,displayPriceChart,displayEMA)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t\t});\r\n        }else{\r\n\t\t\tcreateStockPriceLineChart(data,stockPriceLineChartNode,displayPriceChart,displayEMA);\r\n\t\t}\r\n    }\r\n\r\n\tfunction createMomentumIndicatorsChartFunction(data,momentumIndicatorsChartNode) {\r\n\t\t\r\n\t\tconst RSIparameters = {'N':NforRSI}\r\n\t\tconst TSIparameters = {'displayTSI':displayTSIcheckbox,'rTSI':rForTSI,'sTSI':sForTSI}\r\n\t\tconst UOparameters = {'displayUO':displayUOCheckbox,'sForUO':sForUO,'mForUO':mForUO,'lenForUO':lenForUO,'wsForUO':wsForUO,'wmForUO':wmForUO,'wlForUO':wlForUO}\r\n\t\tconst StochParameters = {'displayStoch':displayStochCheckbox,'nForStoch':nForStoch,'d_nForStoch':d_nForStoch}\r\n\t\tconst StochSignalParameters = {'displayStochSignal':displayStochSignalCheckbox,'nForStochSignal':nForStochSignal,'d_nForStochSignal':d_nForStochSignal}\r\n        const WRParameters = {'displayWR':displayWR,'lbpForWR':lbpForWR}\r\n        const AOParameters = {'displayAO':displayAO,'sForAO':sForAO,'lenForAO':lenForAO}\r\n        const KamaParameters = {'displayKama':displayKama,'nForKama':nForKama,'pow1ForKama':pow1ForKama,'pow2ForKama':pow2ForKama}\r\n        const ROCParameters = {'displayROC':displayROC,'nForROC':nForROC}\r\n        console.log(ROCParameters)\r\n\t\tif (data.length > 1){\r\n\t\t\tfetch('/calculate_Momentum_Indicators/', {\r\n\t\t\t\tmethod: 'POST', // or 'PUT'\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify([data,RSIparameters,TSIparameters,UOparameters,StochParameters,StochSignalParameters,WRParameters,AOParameters,KamaParameters,ROCParameters]),\r\n\t\t\t\t})\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(dataForMomfromAPI => {\r\n\t\t\t\t\tcreateMomentumIndicatorsChart(dataForMomfromAPI,momentumIndicatorsChartNode,displayRSIcheckbox,displayTSIcheckbox,displayUOCheckbox,displayStochCheckbox,displayStochSignalCheckbox,displayWR,displayAO,displayKama,displayROC)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t\t});\r\n\t\t}else{\r\n\t\t\tcreateMomentumIndicatorsChart(data,momentumIndicatorsChartNode,displayRSIcheckbox,displayTSIcheckbox,displayUOCheckbox,displayStochCheckbox,displayStochSignalCheckbox,displayWR,displayAO,displayKama,displayROC)\r\n\t\t}\r\n    }\r\n \r\n\r\n\tconst momentumNtradingDayOptions = [\r\n\t\t{ key: 'one', text: '1', value: 1 },\r\n\t\t{ key: 'two', text: '2', value: 2 },\r\n\t\t{ key: 'three', text: '3', value: 3 },\r\n\t\t{ key: 'four', text: '4', value: 4 },\r\n\t\t{ key: 'five', text: '5', value: 5 },\r\n\t\t{ key: 'six', text: '6', value: 6 },\r\n\t\t{ key: 'seven', text: '7', value: 7 },\r\n\t\t{ key: 'eight', text: '8', value: 8 },\r\n\t\t{ key: 'nine', text: '9', value: 9 },\r\n\t\t{ key: 'ten', text: '10', value: 10 },\r\n\t\t{ key: 'eleven', text: '11', value: 11 },\r\n\t\t{ key: 'twelve', text: '12', value: 12 },\r\n\t\t{ key: 'thirteen', text: '13', value: 13 },\r\n\t\t{ key: 'fourteen', text: '14', value: 14 },\r\n\t\t{ key: 'fifteen', text: '15', value: 15 },\r\n\t\t{ key: 'sixteen', text: '16', value: 16 },\r\n\t\t{ key: 'seventeen', text: '17', value: 17 },\r\n\t\t{ key: 'eighteen', text: '18', value: 18 },\r\n\t\t{ key: 'ninteen', text: '19', value: 19 },\r\n\t\t{ key: 'twenty', text: '20', value: 20 },\r\n\t\t{ key: 'twentyone', text: '21', value: 21 },\r\n\t\t{ key: 'twentytwo', text: '22', value: 22 },\r\n\t\t{ key: 'twentythree', text: '23', value: 23 },\r\n\t\t{ key: 'twentyfour', text: '24', value: 24 },\r\n\t\t{ key: 'twentyfive', text: '25', value: 25 },\r\n\t\t{ key: 'twentysix', text: '26', value: 26 },\r\n\t\t{ key: 'twentyseven', text: '27', value: 27 },\r\n\t\t{ key: 'twentyeight', text: '28', value: 28 },\r\n\t\t{ key: 'twentynine', text: '29', value: 29 },\r\n        { key: 'thirty', text: '30', value: 30 },\r\n        { key: 'thirtyone', text: '31', value: 31 },\r\n\t\t{ key: 'thirtytwo', text: '32', value: 32 },\r\n\t\t{ key: 'thirtythree', text: '33', value: 33 },\r\n\t\t{ key: 'thirtyfour', text: '34', value: 34 },\r\n\t\t{ key: 'thirtyfive', text: '35', value: 35 }\r\n\t]\r\n\t  \r\n    \r\n\r\n    const RSIcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column>\r\n                <br/>Period in Trading Days (n):\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='10'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        setNforRSI(selectedOption.value)\r\n                        }}\r\n                />\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const TSIcontentPanel = (\r\n        \r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>EMA Smoothing Period (r):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='25'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setrForTSI(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>EMA Smoothing Period for Smoothed Mom (s)\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='13'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setsForTSI(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>        \r\n    )\r\n\r\n    const UOcontentPanel = (\r\n\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Short Period (s): \r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='7'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setsForUO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Medium Period (m): \r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='14'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setmForUO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Long Period (l)\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='28'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setlenForUO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Weight of Short BP Average (ws):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='4'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setwsForUO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>'Weight of Medium BP Average (wm):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='2'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setwmForUO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Weight of Long BP Average (wl):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='1'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setwlForUO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    const StochcontentPanel = (\r\n\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Period of Trading Days:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='14'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        setNForStoch(selectedOption.value)\r\n                        }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Simple Moving Average Period:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='3'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        setd_nForStoch(selectedOption.value)\r\n                    }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n        \r\n    )                    \r\n\r\n    const StochSignalcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Period of Trading Days:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='14'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        setNForStochSignal(selectedOption.value)\r\n                        }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Simple Moving Average Period:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='3'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        setd_nForStochSignal(selectedOption.value)\r\n                    }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )      \r\n    \r\n    \r\n    const WRcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Lookback Period:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='14'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        setLBPForWR(selectedOption.value)\r\n                        }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    const AOcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Short Period (s):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='5'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setSForAO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Long Period (l):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='34'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setLenForAO(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    const KamacontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Periods for Efficiency Ratio (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='10'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNForKama(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Periods for Fast EMA Constant:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='2'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setPow1ForKama(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Periods for Slow EMA Constant:\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='30'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setPow2ForKama(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    const ROCcontentPanel = (\r\n\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='12'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNForROC(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n\r\n    const level1MomentumMenuPanels = [\r\n        { key: 'RSI', title: 'Relative Strength Index', content: {as: RSIcontentPanel}, index: 0 },\r\n        { key: 'TSI', title: 'True Strength Index', content: {as: TSIcontentPanel}, index: 1 },\r\n        { key: 'UO', title: 'Ultimate Oscillator', content: {as: UOcontentPanel}, index: 2 },\r\n        { key: 'Stoch', title: 'Stochastic Oscillator', content: {as: StochcontentPanel}, index: 3 },\r\n        { key: 'StochSignal', title: 'Stochastic Oscillator Signal', content: {as: StochSignalcontentPanel}, index: 4 },\r\n        { key: 'WR', title: 'Williams %R', content: {as: WRcontentPanel}, index: 5 },\r\n        { key: 'AO', title: 'Awesome Oscillator', content :{as: AOcontentPanel}, index: 6 },\r\n        { key: 'Kama', title: 'Kaufmans Adaptive Moving Average', content: {as: KamacontentPanel}, index: 7 },\r\n        { key: 'ROC', title: 'Rate-of-Change (ROC) indicator', content: {as: ROCcontentPanel}, index: 8 },\r\n    ]\r\n\r\n    const Level1MomentumContent = (\r\n        <div className=\"no-padding\">\r\n          {/* <Accordion.Accordion panels={level1MomentumMenuPanels} onTitleClick={handleMomentumItemClick(e,itemProps)} value={activeIndex} /> */}\r\n          <Accordion.Accordion panels={level1MomentumMenuPanels} className='no-padding'/>\r\n        </div>\r\n    )\r\n\r\n    const EMAcontentPanel = (\r\n        <Grid columns='equal'>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>Number of Periods (n):\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder='12'\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            setNForEMA(selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n\r\n\r\n    )\r\n\r\n    const level1TrendMenuPanels = [\r\n        { key: 'EMA', title: 'Exponential Moving Average (EMA)', content: EMAcontentPanel, index: 0 },\r\n    ]\r\n    \r\n    const Level1TrendContent = (\r\n        <div className=\"no-padding\">\r\n          <Accordion.Accordion panels={level1TrendMenuPanels} className='no-padding'/>\r\n        </div>\r\n    )\r\n\r\n    const rootPanels = [\r\n            { key: 'panel-1-Momentum', title: 'Momentum Indicators', content: { content: Level1MomentumContent } },\r\n            { key: 'panel-1-Trend', title: 'Trend Indicators', content: { content: Level1TrendContent } },\r\n        ]\r\n\r\n    const RSIAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} defaultChecked onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayRSIcheckbox(!displayRSIcheckbox)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Relative Strength Index</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const TSIAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayTSIcheckbox(!displayTSIcheckbox)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>True Strength Index</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const UOAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayUOCheckbox(!displayUOCheckbox)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Ultimate Oscillator</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const StochAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayStochCheckbox(!displayStochCheckbox)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Stochastic Oscillator</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const StochSignalAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayStochSignalCheckbox(!displayStochSignalCheckbox)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Stochastic Oscillator Signal</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const WRAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayWR(!displayWR)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Williams %R</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const AOAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayAO(!displayAO)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Awesome Oscillator</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    const KamaAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayKama(!displayKama)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Kaufmans Adaptive Moving Average</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const ROCAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayROC(!displayROC)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Rate-of-Change (ROC) indicator</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n\r\n    const EMAAccordionTitle = (\r\n        <Grid columns='equal'>\r\n            <Grid.Column width={2}>\r\n                    <Checkbox borderless index={1} onClick={(event) => {\r\n                                event.stopPropagation()\r\n                                setDisplayEMA(!displayEMA)\r\n                            }}>\r\n                    </Checkbox>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <h5>Exponential Moving Average</h5>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n    \r\n   \r\n    //console.log(activeAccodianMenuItem)\r\n\treturn (\r\n\t\t<div>\r\n            <Grid celled>\r\n                <Grid.Column width = {4}>\r\n                    <Grid.Row stretched>\r\n                        <Form>\r\n                            <Input \r\n                                placeholder=\"Add ticker ex) APPL\" \r\n                                value={ticker}\r\n                                name='ticker'\r\n                                onChange={(e) => setTicker(e.target.value)}\r\n                                isClearable\r\n                            />\r\n                            <Button animated primary onClick={handleTickerFormSubmit}>\r\n                                <Button.Content visible>Go!</Button.Content>\r\n                                <Button.Content hidden>\r\n                                    <Icon name='arrow right' />\r\n                                </Button.Content>\r\n                            </Button>\r\n                        </Form>\r\n                    </Grid.Row>\r\n                        <br/>\r\n                    <Grid.Row>\r\n                            \r\n                        <Menu widths={4}>\r\n                            <Menu.Item\r\n                            name='5d'\r\n                            active={activeItemDateMenu === '5d'}\r\n                            onClick={() => handleDateClick(8, '5d')}\r\n                            >\r\n                            5 d\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                            name='1m'\r\n                            active={activeItemDateMenu === '1m'}\r\n                            onClick={() => handleDateClick(30, '1m')}\r\n                            >\r\n                            1 m\r\n                            </Menu.Item>\r\n                            \r\n                            <Menu.Item\r\n                            name='6m'\r\n                            active={activeItemDateMenu === '6m'}\r\n                            onClick={() => handleDateClick(180, '6m')}\r\n                            >\r\n                            6 m\r\n                            </Menu.Item>\r\n                            \r\n                            <Menu.Item\r\n                            name='1y'\r\n                            active={activeItemDateMenu === '1y'}\r\n                            onClick={() => handleDateClick(365, '1y')}\r\n                            >\r\n                            1 y\r\n                            </Menu.Item>\r\n                            \r\n                        </Menu>\r\n                         \r\n                    </Grid.Row>\r\n                    <br/>\r\n                    <Grid.Row>\r\n                        <Header as='h4'>Custom Dates</Header>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <br/>Start:\r\n                        <DatePicker \r\n                            selected={startDate} \r\n                            maxDate={new Date()} \r\n                            onChange={date => handleStartDateClick(date)}\r\n                            placeholderText='MM/DD/YYYY'\r\n                            isClearable\r\n                            showYearDropdown\r\n                            scrollableMonthYearDropdown />\r\n                        <br/>End:\r\n                        <DatePicker \r\n                            selected={startDate} \r\n                            maxDate={new Date()} \r\n                            onChange={date => handleStartDateClick(date)}\r\n                            placeholderText='MM/DD/YYYY'\r\n                            isClearable\r\n                            showYearDropdown\r\n                            scrollableMonthYearDropdown />\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <br/> \r\n                    <br/>\r\n                   \r\n                        <Form>\r\n                            <Form.Field>\r\n                                \r\n                                <Button toggle active={displayPriceChart} onClick={handlePriceClickLine}>\r\n                                    Line Chart\r\n                                </Button>\r\n                                <Button toggle active={!displayPriceChart} onClick={handlePriceClickCandle}>\r\n                                    Candle Stick\r\n                                </Button>\r\n                            </Form.Field>\r\n                        </Form>\r\n                        \r\n                      \r\n                        \r\n                    </Grid.Row>\r\n                    <br/><br/>\r\n                    <Grid.Row stretched>\r\n                        <div id=\"accordionIndicators\">\r\n                            <Header as='h2'>Momentum</Header>\r\n                        <Accordion as={Menu} vertical fluid borderless>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeRSIAccodianMenuItem === 0}\r\n                                    content={RSIAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setRSIActiveAccordionMenuItem(index.index === activeRSIAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeRSIAccodianMenuItem === 0} content={RSIcontentPanel} />\r\n\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeTSIAccodianMenuItem === 0}\r\n                                    content={TSIAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setTSIActiveAccordionMenuItem(index.index === activeTSIAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeTSIAccodianMenuItem === 0} content={TSIcontentPanel} />\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeUOAccodianMenuItem === 0}\r\n                                    content={UOAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setUOActiveAccordionMenuItem(index.index === activeUOAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeUOAccodianMenuItem === 0} content={UOcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeAOAccodianMenuItem === 0}\r\n                                    content={AOAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setAOActiveAccordionMenuItem(index.index === activeAOAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeAOAccodianMenuItem === 0} content={AOcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeStochAccodianMenuItem === 0}\r\n                                    content={StochAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setStochActiveAccordionMenuItem(index.index === activeStochAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeStochAccodianMenuItem === 0} content={StochcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeStochSignalAccodianMenuItem === 0}\r\n                                    content={StochSignalAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setStochSignalActiveAccordionMenuItem(index.index === activeStochSignalAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeStochSignalAccodianMenuItem === 0} content={StochSignalcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeWRAccodianMenuItem === 0}\r\n                                    content={WRAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setWRActiveAccordionMenuItem(index.index === activeWRAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeWRAccodianMenuItem === 0} content={WRcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeKamaAccodianMenuItem === 0}\r\n                                    content={KamaAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setKamaActiveAccordionMenuItem(index.index === activeKamaAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeKamaAccodianMenuItem === 0} content={ROCcontentPanel} />\r\n                            </Menu.Item>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeROCAccodianMenuItem === 0}\r\n                                    content={ROCAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setROCActiveAccordionMenuItem(index.index === activeROCAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeROCAccodianMenuItem === 0} content={ROCcontentPanel} />\r\n                            </Menu.Item>\r\n                        </Accordion>\r\n                        </div>\r\n                    </Grid.Row>\r\n                    <Grid.Row stretched>\r\n                        <div id=\"accordionIndicators\">\r\n                            <Header as='h2'>Trend</Header>\r\n                        <Accordion as={Menu} vertical fluid borderless>\r\n                            <Menu.Item borderless>\r\n                                <Accordion.Title\r\n                                    active={activeEMAAccodianMenuItem === 0}\r\n                                    content={EMAAccordionTitle}\r\n                                    index={0}\r\n                                    borderless\r\n                                    onClick={(e,index) => {\r\n                                        setEMAActiveAccordionMenuItem(index.index === activeEMAAccodianMenuItem ? -1 : index.index)\r\n                                        }}\r\n                                />\r\n                                <Accordion.Content borderless active={activeEMAAccodianMenuItem === 0} content={EMAcontentPanel} />\r\n\r\n                            </Menu.Item>\r\n                        </Accordion>\r\n                        </div>\r\n                    </Grid.Row>\r\n                </Grid.Column>\r\n                <Grid.Column width = {12}>\r\n                    <React.Fragment>\r\n                        <svg ref={stockPriceLineChartNode}></svg>\r\n                    </React.Fragment>\r\n                    <React.Fragment>\r\n                        <svg ref={momentumIndicatorsChartNode}></svg>\r\n                    </React.Fragment>\r\n                    <React.Fragment>\r\n                        <svg ref={showVolumeNode}></svg>\r\n                    </React.Fragment>\r\n                    \r\n                    <Accordion>                          \r\n                        <Accordion.Title\r\n                            onClick={() => {\r\n                                setActiveEarningsMenuItem(!activeEarningsMenuItem)\r\n                            }}\r\n                        >\r\n                            <h3>Earnings {activeEarningsMenuItem ? \"-\" : \"+\"}</h3>\r\n                        </Accordion.Title>\r\n                        <Accordion.Content active={activeEarningsMenuItem}>\r\n                            <React.Fragment>\r\n                                <svg ref={earningsChartNode}></svg>\r\n                            </React.Fragment>\r\n                        </Accordion.Content>\r\n                        <Accordion.Title\r\n                            onClick={() => {\r\n                                setActiveFinancialsMenuItem(!activeFinancialsMenuItem)\r\n                            }}\r\n                        >\r\n                            <h3>Financials {activeFinancialsMenuItem ? \"-\" : \"+\"}</h3>\r\n                        </Accordion.Title>\r\n                        <Accordion.Content active={activeFinancialsMenuItem}>{Object.keys(financials).map(function(key,index) {\r\n                                if (financials.length > 0) {\r\n                                return(\r\n                                <Segment.Group>\r\n                                    <Segment.Group horizontal>\r\n                                        <Segment>Gross Profit (M$): {financials[key].grossProfit}</Segment>\r\n                                        <Segment>Operating Revenue (M$): {financials[key].operatingRevenue}</Segment>\r\n                                        <Segment>Total Revenue (M$): {financials[key].totalRevenue}</Segment>\r\n                                    </Segment.Group>\r\n                                    <Segment.Group horizontal>\r\n                                        <Segment>Total Assets (M$): {financials[key].totalAssets}</Segment>\r\n                                        <Segment>Total Liabilities (M$): {financials[key].totalLiabilities}</Segment>\r\n                                        <Segment>Total Cash (M$): {financials[key].totalCash}</Segment>\r\n                                    </Segment.Group>\r\n                                    <Segment.Group horizontal>\r\n                                        <Segment>Net Income (M$): {financials[key].netIncome}</Segment>\r\n                                        <Segment>Research and Development (M$): {financials[key].researchAndDevelopment}</Segment>\r\n                                        <Segment>Cash Flow (M$): {financials[key].cashFlow}</Segment>\r\n                                    </Segment.Group>\r\n                                    <Segment.Group horizontal>\r\n                                        <Segment>Total Debt (M$): {financials[key].totalDebt}</Segment>\r\n                                        <Segment>Short Term Debt (M$): {financials[key].shortTermDebt}</Segment>\r\n                                        <Segment>Long Term Debt (M$): {financials[key].longTermDebt}</Segment>\r\n                                    </Segment.Group>\r\n                                </Segment.Group>\r\n                            )}}\r\n                            )}\r\n                        </Accordion.Content>\r\n                    </Accordion>\r\n                </Grid.Column>\r\n            </Grid>    \r\n        </div>\t\r\n\t);\r\n} ","import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Container } from \"semantic-ui-react\"\nimport { StockData } from './components/StockData';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      {/* <Container style={{marginTop: 40}}>\n        <StockData />\n      </Container> */}\n      <StockData />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}