{"version":3,"sources":["logo.svg","components/StockDataDateForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StockDataDateForm","useState","Date","startDate","setStartDate","endDate","setEndDate","ticker","setTicker","activeItemDateMenu","setActiveItemDateMenu","stockData","setStockData","candleChartNode","useRef","handleDateClick","minusDays","name","currentDate","dateOffset","setTime","getTime","fetch","getFullYear","getMonth","getDate","then","response","json","data","useEffect","length","svg","select","current","selectAll","remove","margin","top","right","bottom","left","parseDate","d3","x","scaleBand","domain","range","date","filter","d","getUTCDay","padding","y","scaleLog","low","high","rangeRound","attr","append","call","g","tickValues","every","tickFormat","ticks","clone","join","open","close","bandwidth","node","createCandleStickChart","Menu","Form","Input","placeholder","value","onChange","e","target","isClearable","Button","animated","primary","onClick","Content","visible","hidden","Icon","Item","active","position","selected","maxDate","handleStartDateClick","placeholderText","showYearDropdown","scrollableMonthYearDropdown","handleEndDateClick","Fragment","ref","App","className","Container","style","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"js/main.d008df7f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/logo.5d5d9eef.svg\";","import React, {useState, useEffect, useRef} from 'react';\r\nimport '../App.css'\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { List, Header, Form, Input, Button, Container, Icon, Menu } from \"semantic-ui-react\"\r\nimport { scaleLinear, scaleBand, scaleLog } from 'd3-scale'\r\nimport { max } from 'd3-array'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\nimport { StockData } from './StockData';\r\n\r\nexport const StockDataDateForm = () => {\r\n\r\n\tconst [startDate, setStartDate] = useState(new Date(2020,7,1,0,0,0,0));\r\n\tconst [endDate, setEndDate] = useState(new Date());\r\n\tconst [ticker, setTicker] = useState('AAPL');\r\n\tconst [activeItemDateMenu, setActiveItemDateMenu] = useState('');\r\n\r\n\tconst [stockData, setStockData] = useState([]);\r\n\r\n\tconst [fakeStockData, setFakeStockDate] = useState([5,10,1,3])\r\n\tconst [fakeSize, setFakeSize] = useState([500,500])\r\n\tconst chartNode = useRef(null);\r\n\tconst candleChartNode = useRef(null);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (stockData.length > 0) {\r\n\t\t\t//createLineChart(stockData);\r\n\t\t\tcreateCandleStickChart(stockData);\r\n\t\t}\r\n\t},[stockData])\r\n\t//const d3 = require(\"d3\");\r\n\r\n\tfunction handleStartDateClick(date) {\r\n\t\tif (date !== startDate) {\r\n\t\t\tsetStartDate(date)\r\n\t\t}\r\n\r\n\t\tfetch(\"/get_stock_data/\"+ticker+\"/\"+date.getFullYear()+\"/\"+(date.getMonth()+1)+\"/\"+date.getDate()+\"/\"+endDate.getFullYear()+\"/\"+(endDate.getMonth()+1)+\"/\"+endDate.getDate()).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tsetStockData(data);\r\n\t\t\t})\r\n\t\t\t)\r\n\t  }\r\n\t\r\n\tfunction handleDateClick(minusDays, name) {\r\n\t\tsetActiveItemDateMenu(name)\r\n\t\t\r\n\t\tvar currentDate = new Date();\r\n\t\tvar dateOffset = (24*60*60*1000) * minusDays; //5 days\r\n\t\tvar newDate = currentDate.setTime(currentDate.getTime() - dateOffset);\r\n\t\tsetStartDate(currentDate);\r\n\t\tfetch(\"/get_stock_data/\"+ticker+\"/\"+currentDate.getFullYear()+\"/\"+(currentDate.getMonth()+1)+\"/\"+currentDate.getDate()+\"/\"+endDate.getFullYear()+\"/\"+(endDate.getMonth()+1)+\"/\"+endDate.getDate()).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tsetStockData(data);\r\n\t\t\t})\r\n\t\t\t); \r\n\t}\r\n\r\n\tfunction handleEndDateClick(date) {\r\n\t\tsetEndDate(date)\r\n\t\tfetch(\"/get_stock_data/\"+ticker+\"/\"+startDate.getFullYear()+\"/\"+(startDate.getMonth()+1)+\"/\"+startDate.getDate()+\"/\"+date.getFullYear()+\"/\"+(date.getMonth()+1)+\"/\"+date.getDate()).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\t// var newJSON = (data) => {\r\n\t\t\t\t// \tObject.keys(data).map(function(key,index) {\r\n\t\t\t\t// \t\t\tnewJSON[\"date\"]=key;\r\n\t\t\t\t// \t\t\tnewJSON[\"open\"]=data[key].open;\r\n\t\t\t\t// \t\t\tnewJSON[\"high\"]=data[key].high;\r\n\t\t\t\t// \t\t\tnewJSON[\"low\"]=data[key].low;\r\n\t\t\t\t// \t\t\tnewJSON[\"close\"].data[key].close;\r\n\t\t\t\t// \t\t};\r\n\t\t\t\t\r\n\t\t\t\t// console.log(newJSON);\r\n\t\t\t\tsetStockData(data);\r\n\t\t\t})\r\n\t\t\t)\r\n\t}\r\n\r\n\r\n\tfunction handleTickerFormSubmit() {\r\n\t\tfetch(\"/get_stock_data/\"+ticker+\"/\"+startDate.getFullYear()+\"/\"+(startDate.getMonth()+1)+\"/\"+startDate.getDate()+\"/\"+endDate.getFullYear()+\"/\"+(endDate.getMonth()+1)+\"/\"+endDate.getDate()).then(response => \r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tsetStockData(data);\r\n\t\t\t})\r\n\t\t\t)\r\n\t}\r\n\r\n\tfunction createLineChart(data) {\r\n\t\t// https://observablehq.com/@d3/line-chart\r\n\t\tconst svg = select(candleChartNode.current);\r\n\t\tsvg.selectAll(\"g\").remove()\r\n\t\tconst height = 350;\r\n\t\tconst width = 700;\r\n\t\tconst margin = ({top: 20, right: 30, bottom: 30, left: 40})\r\n\r\n\t\tconst parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n\t\tconst yAxis = g => g\r\n\t\t\t.attr(\"transform\", `translate(${margin.left},0)`)\r\n\t\t\t.call(d3.axisLeft(y))\r\n\t\t\t.call(g => g.select(\".domain\").remove())\r\n\t\t\t.call(g => g.select(\".tick:last-of-type text\").clone()\r\n\t\t\t\t.attr(\"x\", 3)\r\n\t\t\t\t.attr(\"text-anchor\", \"start\")\r\n\t\t\t\t.attr(\"font-weight\", \"bold\"))\r\n\t\t\t\t//.text(data.y))\r\n\t\t\r\n\t\tconst xAxis = g => g\r\n\t\t\t.attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n\t\t\t.call(d3.axisBottom(x).ticks(width / 80).tickSizeOuter(0))\r\n\r\n\t\tconst y = d3.scaleLinear()\r\n\t\t\t.domain([0, d3.max(data, d => d.close)]).nice()\r\n\t\t\t.range([height - margin.bottom, margin.top])\r\n\r\n\t\tconst x = d3.scaleUtc()\r\n\t\t\t.domain(d3.extent(data, d => parseDate(d.date)))\r\n\t\t\t.range([margin.left, width - margin.right])\r\n\t\t\r\n\t\tconst line = d3.line()\r\n\t\t\t.defined(d => !isNaN(d.close))\r\n\t\t\t.x(d => x(parseDate(d.date)))\r\n\t\t\t.y(d => y(d.close))\r\n\r\n\t\tsvg.append(\"g\")\r\n\t\t\t.call(xAxis);\r\n\t  \r\n\t\tsvg.append(\"g\")\r\n\t\t\t.call(yAxis);\r\n\t  \r\n\t\tsvg.append(\"path\")\r\n\t\t\t.datum(data)\r\n\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t.attr(\"stroke\", \"steelblue\")\r\n\t\t\t.attr(\"stroke-width\", 1.5)\r\n\t\t\t.attr(\"stroke-linejoin\", \"round\")\r\n\t\t\t.attr(\"stroke-linecap\", \"round\")\r\n\t\t\t.attr(\"d\", line);\r\n\t  \r\n\t\treturn svg.node();\r\n\t}\r\n\r\n\tfunction createCandleStickChart(data) {\r\n\t\t// https://observablehq.com/d/8974f775c6a0ae5d\r\n\r\n\t\tconst svg = select(candleChartNode.current);\r\n\t\tsvg.selectAll(\"g\").remove()\r\n\t\tconst height = 350;\r\n\t\tconst width = 700;\r\n\t\tconst margin = ({top: 20, right: 30, bottom: 30, left: 40})\r\n\t\tconst parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n\t\tconst x = scaleBand()\r\n    \t\t.domain(d3.utcDay\r\n        \t\t.range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n        \t\t.filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n    \t\t.range([margin.left, width - margin.right])\r\n    \t\t.padding(0.2)\r\n\r\n\t\tconst y = scaleLog()\r\n\t\t\t.domain([d3.min(data, d => d.low), d3.max(data, d => d.high)])\r\n\t\t\t.rangeRound([height - margin.bottom, margin.top])\r\n\r\n\t\tconst xAxis = g => g\r\n\t\t\t.attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n\t\t\t.call(d3.axisBottom(x)\r\n\t\t\t\t.tickValues(d3.utcMonday\r\n\t\t\t\t\t.every(width > 720 ? 1 : 2)\r\n\t\t\t\t\t.range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n\t\t\t\t.tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n\t\t\t.call(g => g.select(\".domain\").remove())\r\n\r\n\t\tconst yAxis = g => g\r\n\t\t\t.attr(\"transform\", `translate(${margin.left},0)`)\r\n\t\t\t.call(d3.axisLeft(y)\r\n\t\t\t\t.tickFormat(d3.format(\"$~f\"))\r\n\t\t\t\t.tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n\t\t\t.call(g => g.selectAll(\".tick line\").clone()\r\n\t\t\t\t.attr(\"stroke-opacity\", 0.2)\r\n\t\t\t\t.attr(\"x2\", width - margin.left - margin.right))\r\n\t\t\t.call(g => g.select(\".domain\").remove())\r\n\r\n\t\tsvg.attr(\"viewBox\", [0, 0, width, height])\r\n  \r\n\t\tsvg.append(\"g\")\r\n\t\t\t.call(xAxis);\r\n\t\r\n\t\tsvg.append(\"g\")\r\n\t\t\t.call(yAxis);\r\n\t\r\n\t\tconst g = svg.append(\"g\")\r\n\t\t\t.attr(\"stroke-linecap\", \"round\")\r\n\t\t\t.attr(\"stroke\", \"black\")\r\n\t\t\t.selectAll(\"g\")\r\n\t\t\t.data(data)\r\n\t\t\t.join(\"g\")\r\n\t\t\t.attr(\"transform\", data => `translate(${x(parseDate(data.date))},0)`);\r\n\t\r\n\t\tg.append(\"line\")\r\n\t\t\t.attr(\"y1\", d => y(d.low))\r\n\t\t\t.attr(\"y2\", d => y(d.high));\r\n\t\r\n\t\tg.append(\"line\")\r\n\t\t\t.attr(\"y1\", d => y(d.open))\r\n\t\t\t.attr(\"y2\", d => y(d.close))\r\n\t\t\t.attr(\"stroke-width\", x.bandwidth())\r\n\t\t\t.attr(\"stroke\", d => d.open > d.close ? d3.schemeSet1[0]\r\n\t\t\t\t: d.close > d.open ? d3.schemeSet1[2]\r\n\t\t\t\t: d3.schemeSet1[8]);\r\n\t\treturn svg.node();\r\n\t }\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Menu>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<Input \r\n\t\t\t\t\t\tplaceholder=\"Add ticker ex) APPL\" \r\n\t\t\t\t\t\tvalue={ticker}\r\n\t\t\t\t\t\tname='ticker'\r\n\t\t\t\t\t\tonChange={(e) => setTicker(e.target.value)}\r\n\t\t\t\t\t\tisClearable\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button animated primary onClick={handleTickerFormSubmit}>\r\n\t\t\t\t\t\t<Button.Content visible>Add</Button.Content>\r\n\t\t\t\t\t\t<Button.Content hidden>\r\n\t\t\t\t\t\t\t<Icon name='arrow right' />\r\n\t\t\t\t\t\t</Button.Content>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\tname='5d'\r\n\t\t\t\tactive={activeItemDateMenu === '5d'}\r\n\t\t\t\tonClick={() => handleDateClick(8, '5d')}\r\n\t\t\t\t>\r\n\t\t\t\t5 d\r\n\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\tname='1m'\r\n\t\t\t\tactive={activeItemDateMenu === '1m'}\r\n\t\t\t\tonClick={() => handleDateClick(30, '1m')}\r\n\t\t\t\t>\r\n\t\t\t\t1 m\r\n\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\tname='6m'\r\n\t\t\t\tactive={activeItemDateMenu === '6m'}\r\n\t\t\t\tonClick={() => handleDateClick(180, '6m')}\r\n\t\t\t\t>\r\n\t\t\t\t6 m\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\tname='1y'\r\n\t\t\t\tactive={activeItemDateMenu === '1y'}\r\n\t\t\t\tonClick={() => handleDateClick(365, '1y')}\r\n\t\t\t\t>\r\n\t\t\t\t1 y\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\tname='StartDate'\r\n\t\t\t\tposition='right'\r\n\t\t\t\t>\r\n\t\t\t\tCustom:\r\n\t\t\t\t<DatePicker \r\n\t\t\t\tselected={startDate} \r\n\t\t\t\tmaxDate={new Date()} \r\n\t\t\t\tonChange={date => handleStartDateClick(date)}\r\n\t\t\t\tplaceholderText='MM/DD/YYYY'\r\n\t\t\t\tisClearable\r\n\t\t\t\tshowYearDropdown\r\n\t\t\t\tscrollableMonthYearDropdown />\r\n\t\t\t\tTo: \r\n\t\t\t\t<DatePicker \r\n\t\t\t\tselected={endDate} \r\n\t\t\t\tmaxDate={new Date()}\r\n\t\t\t\tonChange={date => handleEndDateClick(date)}\r\n\t\t\t\tplaceholderText='MM/DD/YYYY'\r\n\t\t\t\tisClearable\r\n\t\t\t\tshowYearDropdown\r\n\t\t\t\tscrollableMonthYearDropdown />\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t</Menu>\r\n\t\t\t{/* <List>\r\n\t\t\t\t{Object.keys(stockData).map(function(key,index) {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<List.Item key={stockData[key].close}>\r\n\t\t\t\t\t\t\t<Header>Date: {stockData[key].date}</Header>\r\n\t\t\t\t\t\t\t<p>Open: {stockData[key].open}</p>\r\n\t\t\t\t\t\t\t<p>High: {stockData[key].high}</p>\r\n\t\t\t\t\t\t\t<p>Low: {stockData[key].low}</p>\r\n\t\t\t\t\t\t\t<p>Close: {stockData[key].close}</p>\r\n\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n        \t</List> */}\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<svg ref={candleChartNode}></svg>\r\n\t\t\t</React.Fragment>\r\n\t\t\t\r\n\t\t\t\r\n\t\t</div>\r\n\t\t\r\n\t);\r\n} \r\n   \r\n\r\n\r\n{/* <p> Start Date: </p>\r\n\t\t\t<DatePicker \r\n\t\t\t\tselected={startDate} \r\n\t\t\t\tmaxDate={new Date()} \r\n\t\t\t\tonChange={date => handleStartDateClick(date)}\r\n\t\t\t\tplaceholderText='MM/DD/YYYY'\r\n\t\t\t\tisClearable\r\n\t\t\t\tshowYearDropdown\r\n\t\t\t\tscrollableMonthYearDropdown />\r\n\t\t\t<p> End Date: </p>\r\n\t\t\t\r\n\t\t\t<DatePicker \r\n\t\t\t\tselected={endDate} \r\n\t\t\t\tmaxDate={new Date()}\r\n\t\t\t\tonChange={date => handleEndDateClick(date)}\r\n\t\t\t\tplaceholderText='MM/DD/YYYY'\r\n\t\t\t\tisClearable\r\n\t\t\t\tshowYearDropdown\r\n\t\t\t\tscrollableMonthYearDropdown />\r\n\r\n\t\t\t<List>\r\n\t\t\t\t{Object.keys(stockData).map(function(key,index) {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<List.Item key={stockData[key].close}>\r\n\t\t\t\t\t\t\t<Header>Date: {key}</Header>\r\n\t\t\t\t\t\t\t<p>Open: {stockData[key].open}</p>\r\n\t\t\t\t\t\t\t<p>High: {stockData[key].high}</p>\r\n\t\t\t\t\t\t\t<p>Low: {stockData[key].low}</p>\r\n\t\t\t\t\t\t\t<p>Close: {stockData[key].close}</p>\r\n\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n        \t</List>\r\n\r\n\t\t</div> */}\r\n\r\n\r\n\t\t\r\n\t\t\t{/*\r\n\t\t\t\t <Form.Group>\r\n\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\tplaceholder=\"Add ticker ex) APPL\"\r\n\t\t\t\t\t\t// name='InputtedTicker' \r\n\t\t\t\t\t\tvalue={ticker}\r\n\t\t\t\t\t\tonChange={e => setTicker(e.target.value)}\r\n\t\t\t\t\t\tisClearable>\r\n\t\t\t\t\t</Form.Input>\r\n\t\t\t\t\t<Form.Button \r\n\t\t\t\t\t\tanimated \r\n\t\t\t\t\t\tprimary\r\n\t\t\t\t\t\tonClick={\r\n\t\t\t\t\t\t\thandleTickerFormSubmit()\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t<Form.Button.Content visible>Add</Form.Button.Content>\r\n\t\t\t\t\t\t<Form.Button.Content hidden>\r\n\t\t\t\t\t\t\t<Icon name='arrow right' />\r\n\t\t\t\t\t\t</Form.Button.Content>\r\n\t\t\t\t\t</Form.Button>\r\n\t\t\t\t</Form.Group> */}\r\n\r\n","import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { StockData } from './components/StockData';\nimport { Container } from \"semantic-ui-react\"\nimport { StockDataDateForm } from './components/StockDataDateForm';\n\nfunction App() {\n  // const [stockData, setStockData] = useState([]);\n\n  // useEffect(() => {\n  //   fetch(\"/get_stock_data\").then(response => \n  //     response.json().then(data => {\n  //       //console.log(Object.keys(data));\n  //       setStockData(data);\n  //     })\n  //   )\n  // }, [])\n  \n  return (\n    <div className=\"App\">\n      <Container style={{marginTop: 40}}>\n        <StockDataDateForm />\n        \n        {/* <StockData stockData={stockData} /> */}\n      </Container>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}