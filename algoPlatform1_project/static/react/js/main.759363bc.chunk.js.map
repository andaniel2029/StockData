{"version":3,"sources":["redux/charts/chartsReducer.js","redux/charts/chartsTypes.js","redux/dates/datesReducer.js","redux/dates/datesTypes.js","redux/momentum/momentumActions.js","redux/momentum/momentumTypes.js","redux/momentum/momentumReducer.js","redux/tickers/tickerReducer.js","redux/tickers/tickerTypes.js","redux/stockDataRequest/stockDataReducer.js","redux/stockDataRequest/stockDataTypes.js","redux/rootReducer.js","redux/store.js","redux/dates/datesActions.js","redux/stockDataRequest/stockDataActions.js","components/SelectTickerContainer.js","redux/tickers/tickerActions.js","components/SelectDatesFromMenuContainer.js","components/SelectCustomDatesContainer.js","components/SelectLineOrCandleContainer.js","redux/charts/chartsActions.js","components/LineCandleGraphContainer.js","components/charts/volumeBarChart.js","components/VolumeGraphContainer.js","components/accordion/momentum/RSIcontentpanel.js","components/accordion/momentum/TSIcontentpanel.js","components/MomentumMenuContainer.js","components/MomentumGraphContainer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","displayLine","chartsReducer","state","action","type","payload","currentDateInit","Date","setTime","getTime","startDate","endDate","datesReducer","fetchMomentumDataSuccess","data","fetchMomentumDataFailure","error","displayRSI","nForRSI","displayTSI","rForTSI","sForTSI","momentumLoads","momentumReducer","oldLoads","loading","momentumData","tickers","tickerReducer","stockData","apiString","loads","StockDataReducer","rootReducer","combineReducers","tickersFromRootReducer","datesFromRootReducer","chartsFromRootReducer","momentumFromRootReducer","stockDataFromRootReducer","stockDataReducer","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","addStartDate","date","addEndDate","fetchStockDataSuccess","fetchStockDataFailure","connect","dispatch","addTickerDispatch","newTicker","ticker","addTicker","props","useState","setNewTicker","Form","Input","placeholder","value","name","onChange","e","target","isClearable","Button","animated","primary","onClick","Content","visible","hidden","Icon","addStartDateDispatch","addEndDateDispatch","activeItemDateMenu","setActiveItemDateMenu","setStartDate","handleDateClick","minusDays","currentDate","Menu","widths","Item","active","setEndDate","Header","as","selected","maxDate","handleStartDateClick","placeholderText","showYearDropdown","scrollableMonthYearDropdown","handleEndDateClick","addLineCandleDispatch","display","displayPriceChart","setDisplayPriceChart","Field","toggle","event","fetchStockData","APIstring","axios","method","url","then","response","catch","message","stockPriceLineChartNode","useRef","showVolumeNode","convertDatesToString","initialDate","String","getFullYear","getMonth","getDate","useEffect","length","svg","select","current","selectAll","remove","parseDate","d3","margin","top","right","bottom","left","x","scaleBand","domain","range","filter","d","getUTCDay","padding","y","scaleLinear","low","high","rangeRound","attr","append","call","g","tickValues","every","tickFormat","ticks","clone","join","lineGenerator","line","bandwidth","close","curve","curveLinear","open","node","createStockPriceLineChart","innerHeight","volume","createVolumeBarChart","Fragment","ref","nForRSIdispatch","selectedValue","Grid","columns","Column","width","control","Select","options","key","text","compact","selectedOption","rForTSIdispatch","sForTSIdispatch","momentumNtradingDayOptions","Row","displayRSIdispatch","varDisplayRSI","displayTSIdispatch","varDisplayTSI","title","activeRSIAccodianMenuItem","setRSIActiveAccordionMenuItem","activeTSIAccodianMenuItem","setTSIActiveAccordionMenuItem","displayUOCheckbox","setDisplayUOCheckbox","setsForUO","setmForUO","setlenForUO","setwsForUO","setwmForUO","setwlForUO","activeUOAccodianMenuItem","setUOActiveAccordionMenuItem","displayStochCheckbox","setDisplayStochCheckbox","setNForStoch","setd_nForStoch","activeStochAccodianMenuItem","setStochActiveAccordionMenuItem","displayStochSignalCheckbox","setDisplayStochSignalCheckbox","setNForStochSignal","setd_nForStochSignal","activeStochSignalAccodianMenuItem","setStochSignalActiveAccordionMenuItem","displayWR","setDisplayWR","setLBPForWR","activeWRAccodianMenuItem","setWRActiveAccordionMenuItem","displayAO","setDisplayAO","setSForAO","setLenForAO","activeAOAccodianMenuItem","setAOActiveAccordionMenuItem","displayKama","setDisplayKama","setNForKama","setPow1ForKama","setPow2ForKama","activeKamaAccodianMenuItem","setKamaActiveAccordionMenuItem","displayROC","setDisplayROC","setNForROC","activeROCAccodianMenuItem","setROCActiveAccordionMenuItem","RSIAccordionTitle","Checkbox","borderless","index","defaultChecked","stopPropagation","TSIAccordionTitle","UOAccordionTitle","createAccordionTile","StochAccordionTitle","StochSignalAccordionTitle","WRAccordionTitle","AOAccordionTitle","KamaAccordionTitle","ROCAccordionTitle","UOcontentPanel","createContentPanelAccordion","StochcontentPanel","StochSignalcontentPanel","WRcontentPanel","AOcontentPanel","ROCcontentPanel","set","place","trigger","Group","stretched","id","Accordion","vertical","fluid","Title","content","fetchMomentumData","fetch","headers","body","json","momentumIndicatorsChartNode","RSIparameters","TSIparameters","JSON","stringify","min","max","i","findMinMax","gRSI","lineGeneratorRSI","rsi","gTSI","lineGeneratorTSI","tsi","createMomentumIndicatorsChart","App","className","celled","SelectLineOrCandleContainer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"js/main.759363bc.chunk.js","sourcesContent":["import { ADD_LINE_CANDLE } from './chartsTypes'\r\n\r\nconst initialState = {\r\n  displayLine: true\r\n}\r\n\r\nconst chartsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_LINE_CANDLE: return {\r\n      //...state,\r\n      displayLine: action.payload\r\n    }\r\n\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default chartsReducer","export const ADD_LINE_CANDLE = 'ADD_LINE_CANDLE'\r\n","import { ADD_START_DATE, ADD_END_DATE } from './datesTypes'\r\n\r\nvar currentDateInit = new Date()\r\nvar newDate = currentDateInit.setTime(currentDateInit.getTime() - (24*60*60*1000) * 182);\r\nconst initialState = {\r\n  startDate: currentDateInit,\r\n  endDate: (new Date())\r\n}\r\n\r\nconst datesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_START_DATE: return {\r\n      ...state,\r\n      startDate: action.payload\r\n    }\r\n    case ADD_END_DATE: return {\r\n      ...state,\r\n      endDate: action.payload\r\n    }\r\n\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default datesReducer","export const ADD_START_DATE = 'ADD_START_DATE'\r\nexport const ADD_END_DATE = 'ADD_END_DATE'","  \r\nimport { DISPLAY_RSI, N_FOR_RSI, DISPLAY_TSI, R_FOR_TSI, S_FOR_TSI, FETCH_MOMENTUM_DATA_REQUEST,\r\n  FETCH_MOMENTUM_DATA_SUCCESS,\r\n  FETCH_MOMENTUM_DATA_FAILURE } from './momentumTypes'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nexport const displayRSI = (n) => {\r\n  return {\r\n    type: DISPLAY_RSI,\r\n    payload: n\r\n  }\r\n}\r\nexport const nForRSI = (n) => {\r\n  return {\r\n    type: N_FOR_RSI,\r\n    payload: n\r\n  }\r\n}\r\nexport const displayTSI = (n) => {\r\n  return {\r\n    type: DISPLAY_TSI,\r\n    payload: n\r\n  }\r\n}\r\nexport const rForTSI = (n) => {\r\n  return {\r\n    type: R_FOR_TSI,\r\n    payload: n\r\n  }\r\n}\r\nexport const sForTSI = (n) => {\r\n  return {\r\n    type: S_FOR_TSI,\r\n    payload: n\r\n  }\r\n}\r\nexport function fetchMomentumData(apiString) {\r\n  return function (dispatch) {\r\n\r\n    fetch('/calculate_Momentum_Indicators/', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: apiString,\r\n      })\r\n      .then(response => response.json())\r\n      .then(momentumData => {\r\n        dispatch(fetchMomentumDataSuccess(momentumData))\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchMomentumDataFailure(error.message))\r\n      });\r\n    \r\n\r\n    // axios({\r\n    //   method: 'post',\r\n    //   url: \"/calculate_Momentum_Indicators/\",\r\n    //   data: apiString\r\n    // })\r\n    //   .then(response => {\r\n    //     const momentumData = response.data \r\n    //     dispatch(fetchMomentumDataSuccess(momentumData))\r\n    //   })\r\n    //   .catch(error => {\r\n    //     dispatch(fetchMomentumDataFailure(error.message))\r\n    //   })\r\n  }\r\n}\r\n\r\n// export function fetchMomentumData(JSONmomentumString) {\r\n\r\n//   return function (dispatch) {\r\n\r\n//     axios({\r\n//       method: 'post',\r\n//       url: \"/calculate_Momentum_Indicators/\",\r\n//       data: JSONmomentumString,\r\n//     })\r\n//       .then(response => {\r\n//         const momentumData = response.data \r\n//         dispatch(fetchMomentumDataSuccess(momentumData))\r\n//       })\r\n//       .catch(error => {\r\n//         dispatch(fetchMomentumDataFailure(error.message))\r\n//       })\r\n//   }\r\n// }\r\n\r\n\r\nexport const fetchMomentumkDataRequest = () => {\r\n  return {\r\n    type: FETCH_MOMENTUM_DATA_REQUEST,\r\n  }\r\n}\r\n\r\nexport const fetchMomentumDataSuccess = data => {\r\n  return {\r\n    type: FETCH_MOMENTUM_DATA_SUCCESS,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const fetchMomentumDataFailure = error => {\r\n  return {\r\n    type: FETCH_MOMENTUM_DATA_FAILURE,\r\n    payload: error\r\n  }\r\n}","export const DISPLAY_RSI = 'DISPLAY_RSI'\r\nexport const N_FOR_RSI = 'N_FOR_RSI'\r\nexport const DISPLAY_TSI = 'DISPLAY_TSI'\r\nexport const R_FOR_TSI = 'R_FOR_TSI'\r\nexport const S_FOR_TSI = 'S_FOR_TSI'\r\nexport const FETCH_MOMENTUM_DATA_REQUEST = 'FETCH_MOMENTUM_DATA_REQUEST'\r\nexport const FETCH_MOMENTUM_DATA_SUCCESS = 'FETCH_MOMENTUM_DATA_SUCCESS'\r\nexport const FETCH_MOMENTUM_DATA_FAILURE = 'FETCH_MOMENTUM_DATA_FAILURE'","import { nForRSI } from './momentumActions'\r\nimport { DISPLAY_RSI, N_FOR_RSI, DISPLAY_TSI, R_FOR_TSI, S_FOR_TSI,\r\n  FETCH_MOMENTUM_DATA_REQUEST,\r\n  FETCH_MOMENTUM_DATA_SUCCESS,\r\n  FETCH_MOMENTUM_DATA_FAILURE } from './momentumTypes'\r\n\r\nconst initialState = {\r\n  displayRSI: true,\r\n  nForRSI: 10,\r\n  displayTSI: false,\r\n  rForTSI: 25,\r\n  sForTSI: 13,\r\n  momentumLoads: 0 \r\n}\r\n\r\nconst momentumReducer = (state = initialState, action) => {\r\n  const oldLoads = state.momentumLoads\r\n  switch (action.type) {\r\n    case DISPLAY_RSI: return {\r\n      ...state,\r\n      displayRSI: action.payload\r\n    }\r\n    case N_FOR_RSI: return {\r\n      ...state,\r\n      nForRSI: action.payload\r\n    }\r\n    case DISPLAY_TSI: return {\r\n      ...state,\r\n      displayTSI: action.payload\r\n    }\r\n    case R_FOR_TSI: return {\r\n      ...state,\r\n      rForTSI: action.payload\r\n    }\r\n    case S_FOR_TSI: return {\r\n      ...state,\r\n      sForTSI: action.payload\r\n    }\r\n    case FETCH_MOMENTUM_DATA_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case FETCH_MOMENTUM_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        momentumData: action.payload,\r\n        error: '',\r\n        momentumLoads: (oldLoads+1)\r\n      }\r\n    case FETCH_MOMENTUM_DATA_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        momentumData: [],\r\n        error: action.payload\r\n      }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default momentumReducer","import { ADD_TICKER } from './tickerTypes'\r\n\r\nconst initialState = {\r\n  tickers: 'AAPL'\r\n}\r\n\r\nconst tickerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TICKER: return {\r\n      //...state,\r\n      tickers: action.payload\r\n    }\r\n\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default tickerReducer","export const ADD_TICKER = 'ADD_TICKER'","import {\r\n  FETCH_STOCK_DATA_REQUEST,\r\n  FETCH_STOCK_DATA_SUCCESS,\r\n  FETCH_STOCK_DATA_FAILURE,\r\n  REQUEST_API_CALL_INFO\r\n} from './stockDataTypes'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  stockData: [],\r\n  error: '',\r\n  apiString: 'AAPL/2020-4-21/2020-10-20',\r\n  loads: 0\r\n}\r\n\r\n// function selectedAPIstring(state = 'AAPL/2020-4-21/2020-10-20', action) {\r\n//   switch (action.type) {\r\n//     case SELECT_API_STRING:\r\n//       return action.apiString\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\nconst StockDataReducer = (state = initialState, action) => {\r\n  const oldLoads = state.loads\r\n  switch (action.type) {\r\n    \r\n    case FETCH_STOCK_DATA_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case FETCH_STOCK_DATA_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        stockData: action.payload,\r\n        error: '',\r\n        loads: (oldLoads+1)\r\n      }\r\n    case FETCH_STOCK_DATA_FAILURE:\r\n      return {\r\n        loading: false,\r\n        stockData: [],\r\n        error: action.payload\r\n      }\r\n    case REQUEST_API_CALL_INFO:\r\n      return {\r\n        apiString: action.payload\r\n      }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default StockDataReducer","export const FETCH_STOCK_DATA_REQUEST = 'FETCH_STOCK_DATA_REQUEST'\r\nexport const FETCH_STOCK_DATA_SUCCESS = 'FETCH_STOCK_DATA_SUCCESS'\r\nexport const FETCH_STOCK_DATA_FAILURE = 'FETCH_STOCK_DATA_FAILURE'\r\nexport const REQUEST_API_CALL_INFO = 'REQUEST_API_CALL_INFO'","import { combineReducers } from 'redux'\r\nimport chartsReducer from './charts/chartsReducer'\r\nimport datesReducer from './dates/datesReducer'\r\nimport momentumReducer from './momentum/momentumReducer'\r\nimport tickerReducer from './tickers/tickerReducer'\r\nimport stockDataReducer from './stockDataRequest/stockDataReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  tickersFromRootReducer: tickerReducer,\r\n  datesFromRootReducer: datesReducer,\r\n  chartsFromRootReducer: chartsReducer,\r\n  momentumFromRootReducer: momentumReducer,\r\n  stockDataFromRootReducer: stockDataReducer\r\n\r\n})\r\n\r\nexport default rootReducer","  \r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(logger, thunk))\r\n)\r\n\r\nexport default store","  \r\nimport { ADD_START_DATE, ADD_END_DATE } from './datesTypes'\r\n\r\nexport const addStartDate = (date) => {\r\n\r\n  return {\r\n    type: ADD_START_DATE,\r\n    payload: date\r\n  }\r\n}\r\n\r\nexport const addEndDate = (date) => {\r\n\r\n  return {\r\n    type: ADD_END_DATE,\r\n    payload: date\r\n  }\r\n}","  \r\nimport axios from 'axios'\r\nimport {\r\n  FETCH_STOCK_DATA_REQUEST,\r\n  FETCH_STOCK_DATA_SUCCESS,\r\n  FETCH_STOCK_DATA_FAILURE,\r\n  //REQUEST_API_CALL_INFO\r\n} from './stockDataTypes'\r\n\r\n\r\n// export const requestAPIstockData = (n) => {\r\n//   return {\r\n//     type: REQUEST_API_CALL_INFO,\r\n//     payload: n\r\n//   }\r\n// }\r\n\r\n\r\n// https://redux.js.org/advanced/async-actions\r\nexport function fetchStockData(apiString) {\r\n  return function (dispatch) {\r\n    axios({\r\n      method: 'get',\r\n      url: \"/get_stock_data/\"+apiString,\r\n    })\r\n      .then(response => {\r\n        const stockData = response.data \r\n        dispatch(fetchStockDataSuccess(stockData))\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchStockDataFailure(error.message))\r\n      })\r\n  }\r\n}\r\n\r\nexport const fetchStockDataRequest = () => {\r\n  return {\r\n    type: FETCH_STOCK_DATA_REQUEST,\r\n  }\r\n}\r\n\r\nexport const fetchStockDataSuccess = data => {\r\n  return {\r\n    type: FETCH_STOCK_DATA_SUCCESS,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const fetchStockDataFailure = error => {\r\n  return {\r\n    type: FETCH_STOCK_DATA_FAILURE,\r\n    payload: error\r\n  }\r\n}\r\n","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTicker } from '../redux'\r\nimport { Input, Form, Icon, Button} from \"semantic-ui-react\"\r\n\r\n\r\nfunction SelectTickerContainer(props) {\r\n  const [newTicker, setNewTicker] = useState('')\r\n\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Input \r\n            placeholder=\"Add ticker ex) APPL\" \r\n            value={newTicker}\r\n            name='newTicker'\r\n            onChange={(e) => setNewTicker(e.target.value)}\r\n            isClearable\r\n        />\r\n        <Button animated primary onClick={(e) => props.addTickerDispatch(newTicker)}>\r\n            <Button.Content visible>Go!</Button.Content>\r\n            <Button.Content hidden>\r\n                <Icon name='arrow right' />\r\n            </Button.Content>\r\n        </Button>\r\n    </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tickers: state.tickersFromRootReducer.tickers\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addTickerDispatch: newTicker => dispatch(addTicker(newTicker))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SelectTickerContainer)","  \r\nimport { ADD_TICKER } from './tickerTypes'\r\n\r\nexport const addTicker = (ticker = 'AAPL') => {\r\n\r\n  return {\r\n    type: ADD_TICKER,\r\n    payload: ticker\r\n  }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addEndDate, addStartDate } from '../redux'\r\nimport {  Menu} from \"semantic-ui-react\"\r\n \r\n\r\n\r\n\r\nfunction SelectDatesFromMenuContainer(props) {\r\n  const [activeItemDateMenu, setActiveItemDateMenu] = useState('6m');\r\n  var currentDateInit = new Date()\r\n  var newDate = currentDateInit.setTime(currentDateInit.getTime() - (24*60*60*1000) * 182);\r\n  const [startDate, setStartDate] = useState(currentDateInit);\r\n  const [endDate, setEndDate] = useState(new Date())\r\n\r\n\r\n  function handleDateClick(minusDays, name) {\r\n      setActiveItemDateMenu(name)\r\n      var currentDate = new Date() //theRealCurrentDate2;\r\n      var dateOffset = (24*60*60*1000) * minusDays; \r\n      var newDate = currentDate.setTime(currentDate.getTime() - ((24*60*60*1000) * minusDays));\r\n      setStartDate( currentDate);\r\n      props.addStartDateDispatch(currentDate)\r\n      props.addEndDateDispatch(endDate)\r\n      // getAndSetStockData(ticker,currentDate,endDate) \r\n      // getAndSetFinancials(ticker);\r\n      // getAndSetEarnings(ticker);\r\n      }\r\n\r\n  return (\r\n    <div>\r\n        <Menu widths={4}>\r\n            <Menu.Item\r\n            name='5d'\r\n            active={activeItemDateMenu === '5d'}\r\n            onClick={() => handleDateClick(8, '5d')}\r\n            >\r\n            5 d\r\n            </Menu.Item>\r\n            <Menu.Item\r\n            name='1m'\r\n            active={activeItemDateMenu === '1m'}\r\n            onClick={() => handleDateClick(30, '1m')}\r\n            >\r\n            1 m\r\n            </Menu.Item>\r\n            \r\n            <Menu.Item\r\n            name='6m'\r\n            active={activeItemDateMenu === '6m'}\r\n            onClick={() => handleDateClick(180, '6m')}\r\n            >\r\n            6 m\r\n            </Menu.Item>\r\n            \r\n            <Menu.Item\r\n            name='1y'\r\n            active={activeItemDateMenu === '1y'}\r\n            onClick={() => handleDateClick(365, '1y')}\r\n            >\r\n            1 y\r\n            </Menu.Item>\r\n            \r\n        </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     startDate: state.datesFromRootReducer.startDate,\r\n//     endDate: state.datesFromRootReducer.endDate\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addStartDateDispatch: startDate => dispatch(addStartDate(startDate)),\r\n    addEndDateDispatch: endDate => dispatch(addEndDate(endDate))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  //mapStateToProps,\r\n  null,\r\n  mapDispatchToProps\r\n)(SelectDatesFromMenuContainer)","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { addEndDate, addStartDate } from '../redux'\r\nimport { Header} from \"semantic-ui-react\"\r\n\r\n\r\n\r\nfunction SelectCustomDatesContainer(props) {\r\n\r\n  var currentDateInit = new Date()\r\n  var newDate = currentDateInit.setTime(currentDateInit.getTime() - (24*60*60*1000) * 182);\r\n  const [startDate, setStartDate] = useState(currentDateInit);\r\n  const [endDate, setEndDate] = useState(new Date())\r\n  // var currentDate = new Date();\r\n\t// var dateOffset = (24*60*60*1000) * 182; \r\n\t// var newDate = currentDate.setTime(currentDate.getTime() - dateOffset);\r\n  // const [startDate, setStartDate] = useState(currentDate);\r\n  // const [endDate, setEndDate] = useState(new Date())\r\n  // var currentDate2 = new Date();\r\n  // const maxDateAllowed = currentDate2.setTime(currentDate.getTime() - (24*60*60*1000) * 365);\r\n\r\n  function handleStartDateClick(date) {\r\n\t\tif (date !== startDate) {\r\n      setStartDate(date)\r\n      props.addStartDateDispatch(date)\r\n\t\t}\r\n\t\t// getAndSetStockData(ticker,date,endDate)\r\n\t\t// getAndSetFinancials(ticker);\r\n\t\t// getAndSetEarnings(ticker);\r\n  }\r\n  \r\n  function handleEndDateClick(date) {\r\n\t\tif (date !== endDate) {\r\n      setEndDate(date)\r\n      props.addEndDateDispatch(date)\r\n\t\t}\r\n\t\t// getAndSetStockData(ticker,date,endDate)\r\n\t\t// getAndSetFinancials(ticker);\r\n\t\t// getAndSetEarnings(ticker);\r\n\t}\r\n\r\n  return (\r\n    <div>\r\n      <Header as='h4'>Custom Dates</Header>\r\n      <br/>Start:\r\n      <DatePicker \r\n          selected={startDate} \r\n          maxDate={new Date()} \r\n          onChange={date => handleStartDateClick(date)}\r\n          placeholderText='MM/DD/YYYY'\r\n          isClearable\r\n          showYearDropdown\r\n          scrollableMonthYearDropdown />\r\n      <br/>End:\r\n      <DatePicker \r\n          selected={endDate} \r\n          maxDate={new Date()} \r\n          onChange={date => handleEndDateClick(date)}\r\n          placeholderText='MM/DD/YYYY'\r\n          isClearable\r\n          showYearDropdown\r\n          scrollableMonthYearDropdown />\r\n    </div>\r\n  )\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     startDate: state.datesFromRootReducer.startDate,\r\n//     endDate: state.datesFromRootReducer.endDate\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addStartDateDispatch: startDate => dispatch(addStartDate(startDate)),\r\n    addEndDateDispatch: endDate => dispatch(addEndDate(endDate))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  // mapStateToProps,\r\n  null,\r\n  mapDispatchToProps\r\n)(SelectCustomDatesContainer)\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addLineChart} from '../redux'\r\nimport { Form, Button} from \"semantic-ui-react\"\r\n\r\n\r\n\r\nfunction SelectLineOrCandle(props) {\r\n  const [displayPriceChart, setDisplayPriceChart] = useState(true)\r\n  const handlePriceClickLine = (event, {value}) => {\r\n      if (displayPriceChart != true) {\r\n        setDisplayPriceChart(true)\r\n        props.addLineCandleDispatch(true)\r\n      }\r\n  }\r\n  const handlePriceClickCandle = (event, {value}) => {\r\n      if (displayPriceChart != false) {\r\n        setDisplayPriceChart(false)\r\n        props.addLineCandleDispatch(false)\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Form.Field>\r\n            <Button toggle active={displayPriceChart} onClick={handlePriceClickLine}>\r\n                Line Chart\r\n            </Button>\r\n            <Button toggle active={!displayPriceChart} onClick={handlePriceClickCandle}>\r\n                Candle Stick\r\n            </Button>\r\n        </Form.Field>\r\n    </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     startDate: state.datesFromRootReducer.startDate,\r\n//     endDate: state.datesFromRootReducer.endDate\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addLineCandleDispatch: display => dispatch(addLineChart(display))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  // mapStateToProps,\r\n  null,\r\n  mapDispatchToProps\r\n)(SelectLineOrCandle)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","  \r\nimport { ADD_LINE_CANDLE } from './chartsTypes'\r\n\r\nexport const addLineChart = (displayLine) => {\r\n\r\n  return {\r\n    type: ADD_LINE_CANDLE,\r\n    payload: displayLine\r\n  }\r\n}\r\n\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchStockData } from '../redux'\r\n//import { createStockPriceLineChartRedux } from './charts/stockPriceLineChartRedux'\r\nimport { createVolumeBarChart } from './charts/volumeBarChart.js'\r\nimport { createMomentumIndicatorsChart } from './charts/momentumIndicatorsChart'\r\nimport '../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport * as d3 from \"d3\"\r\n\r\nimport {\r\n    select,\r\n    csv,\r\n    scaleLinear,\r\n    scaleBand,\r\n    scaleTime,\r\n    extent,\r\n    axisLeft,\r\n    axisBottom,\r\n    line,\r\n    curveBasis,\r\n    curveLinear\r\n  } from 'd3';\r\n\r\nfunction LineCandleGraphContainer (props) {\r\n\r\n    const stockPriceLineChartNode = useRef(null);\r\n    const showVolumeNode = useRef(null);\r\n    const momentumIndicatorsChartNode = useRef(null);\r\n\r\n    function convertDatesToString(initialDate) {\r\n\t\tconst convertedDate = String(initialDate.getFullYear())+\"-\"+String(initialDate.getMonth() + 1)+\"-\"+String(initialDate.getDate())\r\n\t\treturn convertedDate\r\n\t}\r\n  useEffect(() => {\r\n    props.fetchStockData(String(props.tickers+\"/\"+convertDatesToString(props.startDate)+\"/\"+convertDatesToString(props.endDate)))\r\n  }, [props.tickers,props.startDate,props.endDate])\r\n\r\n  if (props.stockData.length > 1) {\r\n    createStockPriceLineChart(stockPriceLineChartNode)\r\n    createVolumeBarChart(props.stockData,showVolumeNode)\r\n    //createMomentumIndicatorsChartFunction(stockData,momentumIndicatorsChartNode)\r\n    }\r\n\r\n    function createStockPriceLineChart(stockPriceLineChartNode) {\r\n        const data = props.stockData\r\n        // var min = 0\r\n            // var max = 0\r\n            // //console.log(displayEMA)\r\n            // for (var i = 0; i < data.length; i++) {\r\n            //     if (data[i]['close'] < min) {\r\n            //         min = data[i]['close']\r\n            //     }\r\n            //     if (data[i]['close'] > max) {\r\n            //         max = data[i]['close']\r\n            //     }\r\n            //     if (displayEMA) {\r\n            //         if (data[i]['ema'] < min) {\r\n            //             min = data[i]['ema']\r\n            //         }\r\n            //         if (data[i]['ema'] > max) {\r\n            //             max = data[i]['ema']\r\n            //         }\r\n            //     }\r\n            //     if (displayAIdown) {\r\n                   \r\n            //         if (data[i]['AIdown'] < min) {\r\n            //             min = data[i]['AIdown']\r\n            //         }\r\n            //         if (data[i]['AIdown'] > max) {\r\n            //             max = data[i]['AIdown']\r\n            //         }\r\n            //     }\r\n        \r\n                \r\n            //     if (displayAIup) {\r\n            //         if (data[i]['AIup'] < min) {\r\n            //             min = data[i]['AIup']\r\n            //         }\r\n            //         if (data[i]['AIupuo'] > max) {\r\n            //             max = data[i]['AIup']\r\n            //         }\r\n            //     }\r\n            //     if (displayIchimuku) {\r\n            //         if (data[i]['ichimoku'] < min) {\r\n            //             min = data[i]['ichimoku']\r\n            //         }\r\n            //         if (data[i]['ichimoku'] > max) {\r\n            //             max = data[i]['ichimoku']\r\n            //         }\r\n            //     }\r\n            //     if (displayDPO) {\r\n            //         if (data[i]['dpo'] < min) {\r\n            //             min = data[i]['dpo']\r\n            //         }\r\n            //         if (data[i]['dpo'] > max) {\r\n            //             max = data[i]['dpo']\r\n            //         }\r\n            //     }\r\n            //     if (displayCCI) {\r\n            //         if (data[i]['cci'] < min) {\r\n            //             min = data[i]['cci']\r\n            //         }\r\n            //         if (data[i]['cci'] > max) {\r\n            //             max = data[i]['cci']\r\n            //         }\r\n            //     }\r\n            //     if (displaySMA) {\r\n            //         if (data[i]['sma'] < min) {\r\n            //             min = data[i]['sma']\r\n            //         }\r\n            //         if (data[i]['sma'] > max) {\r\n            //             max = data[i]['sma']\r\n            //         }\r\n            //     }\r\n            //     if (displayMACD) {\r\n            //         if (data[i]['macd'] < min) {\r\n            //             min = data[i]['macd']\r\n            //         }\r\n            //         if (data[i]['macd'] > max) {\r\n            //             max = data[i]['macd']\r\n            //         }\r\n            //     }\r\n            //     if (displayMACDsignal) {\r\n            //         if (data[i]['macdSignal'] < min) {\r\n            //             min = data[i]['macdSignal']\r\n            //         }\r\n            //         if (data[i]['macdSignal'] > max) {\r\n            //             max = data[i]['macdSignal']\r\n            //         }\r\n            //     }\r\n            //     if (displayADX) {\r\n            //         if (data[i]['adx'] < min) {\r\n            //             min = data[i]['adx']\r\n            //         }\r\n            //         if (data[i]['adx'] > max) {\r\n            //             max = data[i]['adx']\r\n            //         }\r\n            //     }\r\n            //     if (displayADXpos) {\r\n            //         if (data[i]['adxPositive'] < min) {\r\n            //             min = data[i]['adxPositive']\r\n            //         }\r\n            //         if (data[i]['adxPositive'] > max) {\r\n            //             max = data[i]['adxPositive']\r\n            //         }\r\n            //     }\r\n            //     if (displayADXneg) {\r\n            //         if (data[i]['adxNegative'] < min) {\r\n            //             min = data[i]['adxNegative']\r\n            //         }\r\n            //         if (data[i]['adxNegative'] > max) {\r\n            //             max = data[i]['adxNegative']\r\n            //         }\r\n            //     }\r\n            //     if (displayVIpos) {\r\n            //         if (data[i]['VIpositive'] < min) {\r\n            //             min = data[i]['VIpositive']\r\n            //         }\r\n            //         if (data[i]['VIpositive'] > max) {\r\n            //             max = data[i]['VIpositive']\r\n            //         }\r\n            //     }\r\n            //     if (displayVIneg) {\r\n            //         if (data[i]['VInegative'] < min) {\r\n            //             min = data[i]['VInegative']\r\n            //         }\r\n            //         if (data[i]['VInegative'] > max) {\r\n            //             max = data[i]['VInegative']\r\n            //         }\r\n            //     }\r\n            //     if (displayTRIX) {\r\n            //         if (data[i]['trix'] < min) {\r\n            //             min = data[i]['trix']\r\n            //         }\r\n            //         if (data[i]['trix'] > max) {\r\n            //             max = data[i]['trix']\r\n            //         }\r\n            //     }\r\n            //     if (displayMassIndex) {\r\n            //         if (data[i]['massIndex'] < min) {\r\n            //             min = data[i]['massIndex']\r\n            //         }\r\n            //         if (data[i]['massIndex'] > max) {\r\n            //             max = data[i]['massIndex']\r\n            //         }\r\n            //     }\r\n            // }\r\n            // if (min == 0 && max == 0) {\r\n            //     max = 80\r\n            // }\r\n        \r\n            const svg = select(stockPriceLineChartNode.current);\r\n            svg.selectAll(\"g\").remove()\r\n        \r\n            const height = 350;\r\n            const width = 700;\r\n            //const margin = ({top: 20, right: 30, bottom: 30, left: 80})\r\n            //const formatSecond = d3.timeFormat(\":%S\")\r\n            function parseSec(date) {\r\n                return new Date(date * 1000);\r\n            }\r\n            const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n            //new Date(secs * 1000);\r\n            const margin = ({top: 10, right: 30, bottom: 5, left: 40})\r\n\r\n            const x = scaleBand()\r\n                .domain(d3.utcDay\r\n                    .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n                    .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n                .range([margin.left, width - margin.right])\r\n                .padding(0.2)\r\n        \r\n            var y = scaleLinear()\r\n                //.domain([min,max])\r\n                .domain([d3.min(data, d => d.low), d3.max(data, d => d.high)])\r\n                .rangeRound([height - margin.bottom, margin.top])\r\n                    //d3.min(data, d => d.low), d3.max(data, d => d.high\r\n            \r\n        \r\n            const xAxis = g => g\r\n                .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n                .call(d3.axisBottom(x)\r\n                    .tickValues(d3.utcMonday\r\n                        .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                        .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n                    .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n                .call(g => g.select(\".domain\").remove())\r\n            \r\n        \r\n            const yAxis = g => g\r\n                .attr(\"transform\", `translate(${margin.left},0)`)\r\n                .call(d3.axisLeft(y)\r\n                    .tickFormat(d3.format(\"$~f\"))\r\n                    .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n                .call(g => g.selectAll(\".tick line\").clone()\r\n                    .attr(\"stroke-opacity\", 0)\r\n                    .attr(\"x2\", width - margin.left - margin.right))\r\n                .call(g => g.select(\".domain\").remove())\r\n        \r\n            svg.attr(\"viewBox\", [0, 0, width, height])\r\n        \r\n            svg.append(\"g\")\r\n                .call(xAxis);\r\n                \r\n            svg.append(\"g\")\r\n                .call(yAxis);\r\n        \r\n    \r\n            if (props.displayLine) {\r\n                \r\n                svg.selectAll(\"g\").selectAll(\".candleStick\").remove()\r\n        \r\n                const g = svg.append(\"g\")\r\n                    .attr(\"stroke-linecap\", \"round\")\r\n                    .attr(\"stroke\", \"black\")\r\n                    .selectAll(\"g\")\r\n                    .data(data)\r\n                    .join(\"g\")\r\n                    // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n                const lineGenerator = line()\r\n                    .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n                    .y(d => y(d.close))\r\n                    .curve(curveLinear);\r\n        \r\n                g.append('path')\r\n                    .attr('class', 'line-path')\r\n                    .attr('d', lineGenerator(data))\r\n                    .attr('id','lineChart')\r\n                    .attr('fill','none')\r\n                    .attr('stroke-width',3)\r\n                    .attr('stroke-linecap','round')\r\n            }else{\r\n                svg.selectAll(\"g\").selectAll(\".lineChart\").remove()\r\n        \r\n                const g = svg.append(\"g\")\r\n                    .attr(\"stroke-linecap\", \"round\")\r\n                    .attr(\"stroke\", \"black\")\r\n                    .selectAll(\"g\")\r\n                    .data(data)\r\n                    .join(\"g\")\r\n                    .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n                g.append(\"line\")\r\n                    .attr(\"y1\", d => y(d.low))\r\n                    .attr(\"y2\", d => y(d.high));\r\n        \r\n                g.append(\"line\")\r\n                    .attr(\"y1\", d => y(d.open))\r\n                    .attr(\"y2\", d => y(d.close))\r\n                    .attr(\"id\",\"candleStick\")\r\n                    .attr(\"stroke-width\", x.bandwidth())\r\n                    .attr(\"stroke\", d => d.open > d.close ? d3.schemeSet1[0]\r\n                        : d.close > d.open ? d3.schemeSet1[2]\r\n                        : d3.schemeSet1[8]);\r\n            }\r\n        \r\n            // if (displayEMA) {\r\n            //     const gEMA = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"blue\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorEMA = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.ema))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gEMA.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorEMA(data))\r\n            //         .attr('id','ema')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".ema\").remove()\r\n            // }\r\n            // if (displayMACD) {\r\n            //     const gMACD = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"blue\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorMACD = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.macd))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gMACD.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorMACD(data))\r\n            //         .attr('id','macd')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".macd\").remove()\r\n            // }\r\n            // if (displayMACDsignal) {\r\n            //     const gMACDsignal = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"yellow\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorMACDsignal = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.macdSignal))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gMACDsignal.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorMACDsignal(data))\r\n            //         .attr('id','macdSignal')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".macdSignal\").remove()\r\n            // }\r\n            // if (displayAIdown) {\r\n            //     const gAIdown = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"green\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorAIdown = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.AIdown))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gAIdown.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorAIdown(data))\r\n            //         .attr('id','AIdown')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".AIdown\").remove()\r\n            // }\r\n            // if (displayAIup) {\r\n            //     const gAIup = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"lightgreen\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorAIup = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.AIup))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gAIup.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorAIup(data))\r\n            //         .attr('id','AIup')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".AIup\").remove()\r\n            // }\r\n            // if (displayIchimuku) {\r\n            //     const gIchimuku = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"lightblue\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorIchimuku = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.ichimoku))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gIchimuku.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorIchimuku(data))\r\n            //         .attr('id','Ichimuku')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".Ichimuku\").remove()\r\n            // }\r\n            // if (displayDPO) {\r\n            //     const gDPO = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"red\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorDPO = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.dpo))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gDPO.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorDPO(data))\r\n            //         .attr('id','dpo')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".dpo\").remove()\r\n            // }\r\n            // if (displayCCI) {\r\n            //     const gCCI = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"pink\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorCCI = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.cci))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gCCI.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorCCI(data))\r\n            //         .attr('id','cci')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".cci\").remove()\r\n            // }\r\n            // if (displaySMA) {\r\n            //     const gSMA = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"purple\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorSMA = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.sma))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gSMA.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorSMA(data))\r\n            //         .attr('id','sma')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".sma\").remove()\r\n            // }\r\n            // if (displayADX) {\r\n            //     const gADX = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"orange\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorADX = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.adx))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gADX.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorADX(data))\r\n            //         .attr('id','adx')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".adx\").remove()\r\n            // }\r\n            // if (displayADXpos) {\r\n            //     const gADXpos = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"lightorange\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorADXpos = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.adxPositive))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gADXpos.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorADXpos(data))\r\n            //         .attr('id','adxPos')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".adxPos\").remove()\r\n            // }\r\n            // if (displayADXneg) {\r\n            //     const gADXneg = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"darkorange\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorADXneg = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.adxNegative))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gADXneg.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorADXneg(data))\r\n            //         .attr('id','adxNeg')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".adxNeg\").remove()\r\n            // }\r\n            // if (displayVIneg) {\r\n            //     const gVIneg = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"steelblue\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorVIneg = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.VInegative))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gVIneg.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorVIneg(data))\r\n            //         .attr('id','VIneg')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".VIneg\").remove()\r\n            // }\r\n            // if (displayVIpos) {\r\n            //     const gVIpos = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"rgb(12,240,233)\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorVIpos = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.VIpositive))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gVIpos.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorVIpos(data))\r\n            //         .attr('id','VIpos')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".VIpos\").remove()\r\n            // }\r\n            // if (displayTRIX) {\r\n            //     const gTRIX = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"rgba(198, 45, 205, 0.8)\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorTRIX = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.trix))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gTRIX.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorTRIX(data))\r\n            //         .attr('id','trix')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".trix\").remove()\r\n            // }\r\n            // if (displayMassIndex) {\r\n            //     const gMI = svg.append(\"g\")\r\n            //         .attr(\"stroke-linecap\", \"round\")\r\n            //         .attr(\"stroke\", \"darkred\")\r\n            //         .selectAll(\"g\")\r\n            //         .data(data)\r\n            //         .join(\"g\")\r\n            //         // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n        \r\n            //     const lineGeneratorMI = line()\r\n            //         .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n            //         .y(d => y(d.massIndex))\r\n            //         .curve(curveLinear);\r\n        \r\n            //     gMI.append('path')\r\n            //         .attr('class', 'line-path')\r\n            //         .attr('d', lineGeneratorMI(data))\r\n            //         .attr('id','mi')\r\n            //         .attr('fill','none')\r\n            //         .attr('stroke-width',3)\r\n            //         .attr('stroke-linecap','round')\r\n            // }else{\r\n            //     svg.selectAll(\"g\").selectAll(\".mi\").remove()\r\n            // }\r\n        \r\n        \r\n        // displayIchimuku,displayDPO,displayCCI,displaySMA,displayMACD,displayMACDsignal,displayADX,displayADXpos,displayADXneg,displayVIpos,displayVIneg,displayTRIX,displayMassIndex\r\n        //   \r\n          return svg.node();\r\n        }\r\n\r\n  return props.stockData.loading ? (\r\n\r\n\r\n    <h2>Loading</h2>\r\n  ) : props.stockData.error ? (\r\n    <h2>{props.stockData.error}</h2>\r\n  ) : (\r\n    <div>\r\n        <React.Fragment>\r\n            <svg ref={stockPriceLineChartNode}></svg>\r\n        </React.Fragment>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tickers: state.tickersFromRootReducer.tickers,\r\n    startDate: state.datesFromRootReducer.startDate,\r\n    endDate: state.datesFromRootReducer.endDate,\r\n    stockData: state.stockDataFromRootReducer.stockData,\r\n    fetchStockData: state.stockDataFromRootReducer.fetchStockData,\r\n    displayLine: state.chartsFromRootReducer.displayLine,\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //requestAPIstockData: (APIstring) => dispatch(requestAPIstockData(APIstring)),\r\n    fetchStockData: (APIstring) => dispatch(fetchStockData(APIstring))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LineCandleGraphContainer)\r\n\r\n\r\n","import '../../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { scaleLinear, scaleBand, scalePoint, tickFormat } from 'd3-scale'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\n\r\nexport function createVolumeBarChart(data,showVolumeNode) {\r\n    const svg = select(showVolumeNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n    const margin = ({top: 5, right: 30, bottom: 50, left: 40})\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    const height = 150;\r\n    const width = 700;\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    const x = scaleBand()\r\n        .domain(d3.utcDay\r\n            .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n            .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2)\r\n\r\n    // d3.min(data, d => d.volume)-(d3.max(data, d => d.volume)-d3.min(data, d => d.volume))/10\r\n    const y = scaleLinear()\r\n        .domain([0, d3.max(data, d => d.volume)])\r\n        .rangeRound([0,innerHeight])\r\n    //console.log(y.domain())\r\n    const xAxis = g => g\r\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .tickValues(d3.utcMonday\r\n                .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n            .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n        .call(g => g.select(\".domain\").remove())\r\n    \r\n\r\n    const yAxis = g => g\r\n        .attr(\"transform\", `translate(${margin.left},0)`)\r\n        .call(d3.axisLeft(y).ticks(0))\r\n        //     .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n        // .call(g => g.selectAll(\".tick line\").clone()\r\n        //     .attr(\"stroke-width\", 0))\r\n            //.attr(\"x2\", width - margin.left - margin.right))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    // yAxis.select('.domain')\r\n    //     .attr('stroke-width', 0);\r\n\r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n        \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n\r\n    const g = svg.append(\"g\")\r\n        // .attr(\"stroke\", \"black\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n        .attr(\"transform\", data => `translate(${x(parseDate(data.date))},0)`);\r\n\r\n    g.append(\"rect\")\r\n        .attr('width', d=>(x.bandwidth()+x.padding()))\r\n        .attr('height',d=>y(d.volume))\r\n        .attr(\"fill\", d => d.open > d.close ? d3.schemeSet1[0]\r\n            : d.close > d.open ? d3.schemeSet1[2]\r\n            : d3.schemeSet1[8])\r\n        .attr('transform',`translate(${x.bandwidth()},${innerHeight})  rotate(180)`)\r\n\r\n    return svg.node();\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../App.css'\r\nimport * as d3 from \"d3\"\r\nimport {\r\n    select,\r\n    csv,\r\n    scaleLinear,\r\n    scaleBand,\r\n    scaleTime,\r\n    extent,\r\n    axisLeft,\r\n    axisBottom,\r\n    line,\r\n    curveBasis,\r\n    curveLinear\r\n  } from 'd3';\r\n\r\nfunction VolumeGraphContainer (props) {\r\n\r\n\r\n    const showVolumeNode = useRef(null);\r\n\r\n\r\n  if (props.stockData.length > 1) {\r\n    createVolumeBarChart(showVolumeNode)\r\n    }\r\n\r\n  function createVolumeBarChart(showVolumeNode) {\r\n    const data = props.stockData\r\n    const svg = select(showVolumeNode.current);\r\n    svg.selectAll(\"g\").remove()\r\n    const margin = ({top: 5, right: 30, bottom: 50, left: 40})\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n    const height = 150;\r\n    const width = 700;\r\n    svg.attr(\"viewBox\", [0, 0, width, height])\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    const x = scaleBand()\r\n        .domain(d3.utcDay\r\n            .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n            .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.2)\r\n\r\n    // d3.min(data, d => d.volume)-(d3.max(data, d => d.volume)-d3.min(data, d => d.volume))/10\r\n    const y = scaleLinear()\r\n        .domain([0, d3.max(data, d => d.volume)])\r\n        .rangeRound([0,innerHeight])\r\n    //console.log(y.domain())\r\n    const xAxis = g => g\r\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .tickValues(d3.utcMonday\r\n                .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n            .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n        .call(g => g.select(\".domain\").remove())\r\n    \r\n\r\n    const yAxis = g => g\r\n        .attr(\"transform\", `translate(${margin.left},0)`)\r\n        .call(d3.axisLeft(y).ticks(0))\r\n        //     .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n        // .call(g => g.selectAll(\".tick line\").clone()\r\n        //     .attr(\"stroke-width\", 0))\r\n            //.attr(\"x2\", width - margin.left - margin.right))\r\n        .call(g => g.select(\".domain\").remove())\r\n\r\n    // yAxis.select('.domain')\r\n    //     .attr('stroke-width', 0);\r\n\r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n        \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n\r\n    const g = svg.append(\"g\")\r\n        // .attr(\"stroke\", \"black\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n        .attr(\"transform\", data => `translate(${x(parseDate(data.date))},0)`);\r\n\r\n    g.append(\"rect\")\r\n        .attr('width', d=>(x.bandwidth()+x.padding()))\r\n        .attr('height',d=>y(d.volume))\r\n        .attr(\"fill\", d => d.open > d.close ? d3.schemeSet1[0]\r\n            : d.close > d.open ? d3.schemeSet1[2]\r\n            : d3.schemeSet1[8])\r\n        .attr('transform',`translate(${x.bandwidth()},${innerHeight})  rotate(180)`)\r\n\r\n    return svg.node();\r\n  }\r\n\r\n  return props.stockData.loading ? (\r\n\r\n\r\n    <h2>Loading</h2>\r\n  ) : props.stockData.error ? (\r\n    <h2>{props.stockData.error}</h2>\r\n  ) : (\r\n    <div>\r\n        <React.Fragment>\r\n            <svg ref={showVolumeNode}></svg>\r\n        </React.Fragment>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    stockData: state.stockDataFromRootReducer.stockData,\r\n    displayLine: state.chartsFromRootReducer.displayLine,\r\n\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(VolumeGraphContainer)\r\n\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { nForRSI } from '../../../redux'\r\nimport { Grid, Menu, Form, Select} from \"semantic-ui-react\"\r\n\r\nfunction RSIcontentPanel(props) {\r\n\r\n    const momentumNtradingDayOptions = [\r\n        { key: 'one', text: '1', value: 1 },\r\n        { key: 'two', text: '2', value: 2 },\r\n        { key: 'three', text: '3', value: 3 },\r\n        { key: 'four', text: '4', value: 4 },\r\n        { key: 'five', text: '5', value: 5 },\r\n        { key: 'six', text: '6', value: 6 },\r\n        { key: 'seven', text: '7', value: 7 },\r\n        { key: 'eight', text: '8', value: 8 },\r\n        { key: 'nine', text: '9', value: 9 },\r\n        { key: 'ten', text: '10', value: 10 },\r\n        { key: 'eleven', text: '11', value: 11 },\r\n        { key: 'twelve', text: '12', value: 12 },\r\n        { key: 'thirteen', text: '13', value: 13 },\r\n        { key: 'fourteen', text: '14', value: 14 },\r\n        { key: 'fifteen', text: '15', value: 15 },\r\n        { key: 'sixteen', text: '16', value: 16 },\r\n        { key: 'seventeen', text: '17', value: 17 },\r\n        { key: 'eighteen', text: '18', value: 18 },\r\n        { key: 'ninteen', text: '19', value: 19 },\r\n        { key: 'twenty', text: '20', value: 20 },\r\n        { key: 'twentyone', text: '21', value: 21 },\r\n        { key: 'twentytwo', text: '22', value: 22 },\r\n        { key: 'twentythree', text: '23', value: 23 },\r\n        { key: 'twentyfour', text: '24', value: 24 },\r\n        { key: 'twentyfive', text: '25', value: 25 },\r\n        { key: 'twentysix', text: '26', value: 26 },\r\n        { key: 'twentyseven', text: '27', value: 27 },\r\n        { key: 'twentyeight', text: '28', value: 28 },\r\n        { key: 'twentynine', text: '29', value: 29 },\r\n        { key: 'thirty', text: '30', value: 30 },\r\n        { key: 'thirtyone', text: '31', value: 31 },\r\n        { key: 'thirtytwo', text: '32', value: 32 },\r\n        { key: 'thirtythree', text: '33', value: 33 },\r\n        { key: 'thirtyfour', text: '34', value: 34 },\r\n        { key: 'thirtyfive', text: '35', value: 35 }\r\n    ]\r\n    return (\r\n    <Grid columns='equal'>\r\n            <Grid.Column>\r\n                <br/>'Period in Trading Days (n):'\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='10'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        props.nForRSIdispatch(selectedOption.value)\r\n                        }}\r\n                />\r\n            </Grid.Column>\r\n        </Grid>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    nForRSI: state.momentumFromRootReducer.nForRSI\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    nForRSIdispatch: selectedValue => dispatch(nForRSI(selectedValue))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RSIcontentPanel)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { rForTSI, sForTSI } from '../../../redux'\r\nimport { Grid, Menu, Form, Select} from \"semantic-ui-react\"\r\n\r\nfunction TSIcontentPanel(props) {\r\n\r\n    const momentumNtradingDayOptions = [\r\n        { key: 'one', text: '1', value: 1 },\r\n        { key: 'two', text: '2', value: 2 },\r\n        { key: 'three', text: '3', value: 3 },\r\n        { key: 'four', text: '4', value: 4 },\r\n        { key: 'five', text: '5', value: 5 },\r\n        { key: 'six', text: '6', value: 6 },\r\n        { key: 'seven', text: '7', value: 7 },\r\n        { key: 'eight', text: '8', value: 8 },\r\n        { key: 'nine', text: '9', value: 9 },\r\n        { key: 'ten', text: '10', value: 10 },\r\n        { key: 'eleven', text: '11', value: 11 },\r\n        { key: 'twelve', text: '12', value: 12 },\r\n        { key: 'thirteen', text: '13', value: 13 },\r\n        { key: 'fourteen', text: '14', value: 14 },\r\n        { key: 'fifteen', text: '15', value: 15 },\r\n        { key: 'sixteen', text: '16', value: 16 },\r\n        { key: 'seventeen', text: '17', value: 17 },\r\n        { key: 'eighteen', text: '18', value: 18 },\r\n        { key: 'ninteen', text: '19', value: 19 },\r\n        { key: 'twenty', text: '20', value: 20 },\r\n        { key: 'twentyone', text: '21', value: 21 },\r\n        { key: 'twentytwo', text: '22', value: 22 },\r\n        { key: 'twentythree', text: '23', value: 23 },\r\n        { key: 'twentyfour', text: '24', value: 24 },\r\n        { key: 'twentyfive', text: '25', value: 25 },\r\n        { key: 'twentysix', text: '26', value: 26 },\r\n        { key: 'twentyseven', text: '27', value: 27 },\r\n        { key: 'twentyeight', text: '28', value: 28 },\r\n        { key: 'twentynine', text: '29', value: 29 },\r\n        { key: 'thirty', text: '30', value: 30 },\r\n        { key: 'thirtyone', text: '31', value: 31 },\r\n        { key: 'thirtytwo', text: '32', value: 32 },\r\n        { key: 'thirtythree', text: '33', value: 33 },\r\n        { key: 'thirtyfour', text: '34', value: 34 },\r\n        { key: 'thirtyfive', text: '35', value: 35 }\r\n    ]\r\n    return (\r\n    <Grid columns='equal'>\r\n        <Grid.Row>\r\n            <Grid.Column>\r\n                <br/>'High Period (r):'\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='25'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        props.rForTSIdispatch(selectedOption.value)\r\n                        }}\r\n                />\r\n            </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n            <Grid.Column>\r\n                <br/>'Low Period (s):'\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n                <Form.Field\r\n                    control={Select}\r\n                    options={momentumNtradingDayOptions}\r\n                    placeholder='13'\r\n                    compact\r\n                    onChange ={(e,selectedOption) => {\r\n                        props.sForTSIdispatch(selectedOption.value)\r\n                        }}\r\n                />\r\n            </Grid.Column>\r\n        </Grid.Row>\r\n        </Grid>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    rForTSI: state.momentumFromRootReducer.rForTSI,\r\n    sForTSI: state.momentumFromRootReducer.sForTSI\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    rForTSIdispatch: selectedValue => dispatch(rForTSI(selectedValue)),\r\n    sForTSIdispatch: selectedValue => dispatch(sForTSI(selectedValue))\r\n  }\r\n}\r\n\r\n  \r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TSIcontentPanel)\r\n","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { displayRSI, displayTSI } from '../redux'\r\nimport { Grid, Menu, Accordion, Item, Checkbox, Form, Select} from \"semantic-ui-react\"\r\nimport Collapsible from 'react-collapsible';\r\nimport RSIcontentPanel from './accordion/momentum/RSIcontentpanel'\r\nimport TSIcontentPanel from './accordion/momentum/TSIcontentpanel'\r\n\r\nfunction MomentumMenuContainer(props) {\r\n    function headerCollapsible(title) {\r\n        return (\r\n            <Item.Group>\r\n            <Item>\r\n                <Item.Content>\r\n                    <Item.Header as='a'>{title}</Item.Header><br/>\r\n                </Item.Content>\r\n            </Item>\r\n        </Item.Group>\r\n        )\r\n    }\r\n    \r\n    const [activeRSIAccodianMenuItem, setRSIActiveAccordionMenuItem] = useState(-1)\r\n    const [activeTSIAccodianMenuItem, setTSIActiveAccordionMenuItem] = useState(-1)\r\n\r\n\tconst [displayUOCheckbox, setDisplayUOCheckbox] = useState(false)\r\n\tconst [sForUO, setsForUO] = useState(7)\r\n\tconst [mForUO, setmForUO] = useState(14)\r\n\tconst [lenForUO, setlenForUO] = useState(28)\r\n\tconst [wsForUO, setwsForUO] = useState(4)\r\n\tconst [wmForUO, setwmForUO] = useState(2)\r\n    const [wlForUO, setwlForUO] = useState(1)\r\n    const [activeUOAccodianMenuItem, setUOActiveAccordionMenuItem] = useState(-1)\r\n    \r\n    const [displayStochCheckbox, setDisplayStochCheckbox] = useState(false)\r\n    const [nForStoch, setNForStoch] = useState(14)\r\n    const [d_nForStoch, setd_nForStoch] = useState(3)\r\n    const [activeStochAccodianMenuItem, setStochActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayStochSignalCheckbox, setDisplayStochSignalCheckbox] = useState(false)\r\n    const [nForStochSignal, setNForStochSignal] = useState(14)\r\n    const [d_nForStochSignal, setd_nForStochSignal] = useState(3)\r\n    const [activeStochSignalAccodianMenuItem, setStochSignalActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayWR, setDisplayWR] = useState(false)\r\n    const [lbpForWR, setLBPForWR] = useState(14)\r\n    const [activeWRAccodianMenuItem, setWRActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayAO, setDisplayAO] = useState(false)\r\n    const [sForAO, setSForAO] = useState(5)\r\n    const [lenForAO, setLenForAO] = useState(34)\r\n    const [activeAOAccodianMenuItem, setAOActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayKama, setDisplayKama] = useState(false)\r\n    const [nForKama, setNForKama] = useState(10)\r\n    const [pow1ForKama, setPow1ForKama] = useState(2)\r\n    const [pow2ForKama, setPow2ForKama] = useState(30)\r\n    const [activeKamaAccodianMenuItem, setKamaActiveAccordionMenuItem] = useState(-1)\r\n\r\n    const [displayROC, setDisplayROC] = useState(false)\r\n    const [nForROC, setNForROC] = useState(12)\r\n    const [activeROCAccodianMenuItem, setROCActiveAccordionMenuItem] = useState(-1)\r\n\r\n    \r\n\r\n    const RSIAccordionTitle = (\r\n        <Grid columns='equal'>\r\n        <Grid.Column width={2}>\r\n                <Checkbox borderless index={1} defaultChecked onClick={(event) => {\r\n                            event.stopPropagation()\r\n                            props.displayRSIdispatch(!props.displayRSI)\r\n\r\n\r\n                        }}>\r\n                </Checkbox>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n            <h5>Relative Strength Index</h5>\r\n        </Grid.Column>\r\n        </Grid>)\r\n        \r\n    const TSIAccordionTitle = (\r\n        <Grid columns='equal'>\r\n        <Grid.Column width={2}>\r\n                <Checkbox borderless index={1} onClick={(event) => {\r\n                            event.stopPropagation()\r\n                            props.displayTSIdispatch(!props.displayTSI)\r\n\r\n\r\n                        }}>\r\n                </Checkbox>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n            <h5>True Strength Index</h5>\r\n        </Grid.Column>\r\n        </Grid>)\r\n    \r\n    //const TSIAccordionTitle = createAccordionTile(setDisplayTSIcheckbox,displayTSIcheckbox,'True Strength Index')\r\n    const UOAccordionTitle = createAccordionTile(setDisplayUOCheckbox,displayUOCheckbox,'Ultimate Oscillator')\r\n    const StochAccordionTitle = createAccordionTile(setDisplayStochCheckbox,displayStochCheckbox,'Stochastic Oscillator')\r\n    const StochSignalAccordionTitle = createAccordionTile(setDisplayStochSignalCheckbox,displayStochSignalCheckbox,'Stochastic Oscillator Signal')\r\n    const WRAccordionTitle = createAccordionTile(setDisplayWR,displayWR,'Williams %R')\r\n    const AOAccordionTitle = createAccordionTile(setDisplayAO,displayAO,'Awesome Oscillator') \r\n    const KamaAccordionTitle = createAccordionTile(setDisplayKama,displayKama,'Kaufmans Adaptive Moving Average')\r\n    const ROCAccordionTitle = createAccordionTile(setDisplayROC,displayROC,'Rate-of-Change (ROC) indicator') \r\n    \r\n    const momentumNtradingDayOptions = [\r\n\t\t{ key: 'one', text: '1', value: 1 },\r\n\t\t{ key: 'two', text: '2', value: 2 },\r\n\t\t{ key: 'three', text: '3', value: 3 },\r\n\t\t{ key: 'four', text: '4', value: 4 },\r\n\t\t{ key: 'five', text: '5', value: 5 },\r\n\t\t{ key: 'six', text: '6', value: 6 },\r\n\t\t{ key: 'seven', text: '7', value: 7 },\r\n\t\t{ key: 'eight', text: '8', value: 8 },\r\n\t\t{ key: 'nine', text: '9', value: 9 },\r\n\t\t{ key: 'ten', text: '10', value: 10 },\r\n\t\t{ key: 'eleven', text: '11', value: 11 },\r\n\t\t{ key: 'twelve', text: '12', value: 12 },\r\n\t\t{ key: 'thirteen', text: '13', value: 13 },\r\n\t\t{ key: 'fourteen', text: '14', value: 14 },\r\n\t\t{ key: 'fifteen', text: '15', value: 15 },\r\n\t\t{ key: 'sixteen', text: '16', value: 16 },\r\n\t\t{ key: 'seventeen', text: '17', value: 17 },\r\n\t\t{ key: 'eighteen', text: '18', value: 18 },\r\n\t\t{ key: 'ninteen', text: '19', value: 19 },\r\n\t\t{ key: 'twenty', text: '20', value: 20 },\r\n\t\t{ key: 'twentyone', text: '21', value: 21 },\r\n\t\t{ key: 'twentytwo', text: '22', value: 22 },\r\n\t\t{ key: 'twentythree', text: '23', value: 23 },\r\n\t\t{ key: 'twentyfour', text: '24', value: 24 },\r\n\t\t{ key: 'twentyfive', text: '25', value: 25 },\r\n\t\t{ key: 'twentysix', text: '26', value: 26 },\r\n\t\t{ key: 'twentyseven', text: '27', value: 27 },\r\n\t\t{ key: 'twentyeight', text: '28', value: 28 },\r\n\t\t{ key: 'twentynine', text: '29', value: 29 },\r\n        { key: 'thirty', text: '30', value: 30 },\r\n        { key: 'thirtyone', text: '31', value: 31 },\r\n\t\t{ key: 'thirtytwo', text: '32', value: 32 },\r\n\t\t{ key: 'thirtythree', text: '33', value: 33 },\r\n\t\t{ key: 'thirtyfour', text: '34', value: 34 },\r\n\t\t{ key: 'thirtyfive', text: '35', value: 35 }\r\n\t]\r\n\r\n    //const RSIcontentPanel = createContentPanelAccordion(['Period in Trading Days (n):'],['12'],[nForRSIdispatch(selectedOption.value)])\r\n    // const RSIcontentPanel = (\r\n    //     <Grid columns='equal'>\r\n    //             <Grid.Column>\r\n    //                 <br/>'Period in Trading Days (n):'\r\n    //             </Grid.Column>\r\n    //             <Grid.Column width={4}>\r\n    //                 <Form.Field\r\n    //                     control={Select}\r\n    //                     options={momentumNtradingDayOptions}\r\n    //                     placeholder='12'\r\n    //                     compact\r\n    //                     onChange ={(e,selectedOption) => {\r\n    //                         props.nForRSIdispatch(selectedOption.value)\r\n    //                         }}\r\n    //                 />\r\n    //             </Grid.Column>\r\n    //         </Grid>\r\n    // )\r\n    //const TSIcontentPanel = createContentPanelAccordion(['EMA Smoothing Period (r):'],['25'],[setrForTSI])\r\n    const UOcontentPanel =  createContentPanelAccordion(['Short Period (s):','Medium Period (m): ','Long Period (l)','Weight of Short BP Average (ws):','Weight of Medium BP Average (wm):','Weight of Long BP Average'],['7','14','28','4','2','1'],[setsForUO,setmForUO,setlenForUO,setwsForUO,setwmForUO,setwlForUO])\r\n    const StochcontentPanel = createContentPanelAccordion(['Period of Trading Days:','Simple Moving Average Period:'],['14','3'],[setNForStoch,setd_nForStoch])\r\n    const StochSignalcontentPanel = createContentPanelAccordion(['Period of Trading Days:','Simple Moving Average Period:'],['14','3'],[setNForStochSignal,setd_nForStochSignal])\r\n    const WRcontentPanel =  createContentPanelAccordion(['Lookback Period:'],['14'],[setLBPForWR])\r\n    const AOcontentPanel = createContentPanelAccordion(['Short Period (s):','Long Period (l):'],['5','34'],[setSForAO,setLenForAO])\r\n    const KamacontentPanel = createContentPanelAccordion(['Periods for Efficiency Ratio (n):','Periods for Fast EMA Constant:','Periods for Slow EMA Constant:'],['10','2','30'],[setNForKama,setPow1ForKama,setPow2ForKama])\r\n    const ROCcontentPanel = createContentPanelAccordion(['Number of Periods (n):'],['12'],[setNForROC])\r\n    \r\n    \r\n\t  \r\n\r\n\r\n    function createAccordionTile(set,state,title){\r\n        return(\r\n        <Grid columns='equal'>\r\n        <Grid.Column width={2}>\r\n                <Checkbox borderless index={1} onClick={(event) => {\r\n                            event.stopPropagation()\r\n                            set(!state)\r\n                        }}>\r\n                </Checkbox>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n            <h5>{title}</h5>\r\n        </Grid.Column>\r\n        </Grid>)\r\n    }\r\n\r\n\r\n\t\r\n\r\n    function createContentPanelAccordion(title,place,set) {\r\n        // for (var i = 0; i < title.length; i++) {\r\n        //     return (\r\n\r\n        //     )\r\n        if (title.length == 1) {\r\n            return (\r\n            <Grid columns='equal'>\r\n                <Grid.Column>\r\n                    <br/>{title[0]}\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder={place[0]}\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            set[0](selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid>\r\n            )\r\n        } else if (title.length == 2) {\r\n            return (\r\n            <Grid columns='equal'>\r\n                <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>{title[0]}\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder={place[0]}\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            set[0](selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                <Grid.Column>\r\n                    <br/>{title[1]}\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={momentumNtradingDayOptions}\r\n                        placeholder={place[1]}\r\n                        compact\r\n                        onChange ={(e,selectedOption) => {\r\n                            set[1](selectedOption.value)\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            )\r\n        } else if (title.length == 3) {\r\n            return (\r\n                <Grid columns='equal'>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[0]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[0]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[0](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[1]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[1]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[1](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[2]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[2]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[2](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                )\r\n        } else if (title.length == 4) {\r\n            return (\r\n                <Grid columns='equal'>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[0]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[0]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[0](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[1]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[1]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[1](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[2]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[2]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[2](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[3]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[3]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[3](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                )\r\n    \r\n        } else if (title.length == 5) {\r\n            return (\r\n                <Grid columns='equal'>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[0]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[0]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[0](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[1]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[1]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[1](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[2]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[2]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[2](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[3]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[3]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[3](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[4]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[4]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[4](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                )\r\n        } else if (title.length == 6) {\r\n            return (\r\n                <Grid columns='equal'>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[0]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[0]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[0](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[1]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[1]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[1](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[2]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[2]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[2](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[3]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[3]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[3](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[4]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[4]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[4](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                    <Grid.Column>\r\n                        <br/>{title[5]}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Form.Field\r\n                            control={Select}\r\n                            options={momentumNtradingDayOptions}\r\n                            placeholder={place[5]}\r\n                            compact\r\n                            onChange ={(e,selectedOption) => {\r\n                                set[5](selectedOption.value)\r\n                                }}\r\n                        />\r\n                    </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                )    \r\n        } else {}\r\n        }\r\n\r\n  return (\r\n    <div>\r\n        <Grid>\r\n        <Collapsible trigger={headerCollapsible('Momentum')}>\r\n            <Grid.Row stretched>\r\n                <div id=\"accordionIndicators\">\r\n                <Accordion as={Menu} vertical fluid borderless>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeRSIAccodianMenuItem === 0}\r\n                            content={RSIAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setRSIActiveAccordionMenuItem(index.index === activeRSIAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeRSIAccodianMenuItem === 0} content={<RSIcontentPanel/>} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeTSIAccodianMenuItem === 0}\r\n                            content={TSIAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setTSIActiveAccordionMenuItem(index.index === activeTSIAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeTSIAccodianMenuItem === 0} content={<TSIcontentPanel/>} />\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeUOAccodianMenuItem === 0}\r\n                            content={UOAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setUOActiveAccordionMenuItem(index.index === activeUOAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeUOAccodianMenuItem === 0} content={UOcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeAOAccodianMenuItem === 0}\r\n                            content={AOAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setAOActiveAccordionMenuItem(index.index === activeAOAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeAOAccodianMenuItem === 0} content={AOcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeStochAccodianMenuItem === 0}\r\n                            content={StochAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setStochActiveAccordionMenuItem(index.index === activeStochAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeStochAccodianMenuItem === 0} content={StochcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeStochSignalAccodianMenuItem === 0}\r\n                            content={StochSignalAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setStochSignalActiveAccordionMenuItem(index.index === activeStochSignalAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeStochSignalAccodianMenuItem === 0} content={StochSignalcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeWRAccodianMenuItem === 0}\r\n                            content={WRAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setWRActiveAccordionMenuItem(index.index === activeWRAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeWRAccodianMenuItem === 0} content={WRcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeKamaAccodianMenuItem === 0}\r\n                            content={KamaAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setKamaActiveAccordionMenuItem(index.index === activeKamaAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeKamaAccodianMenuItem === 0} content={ROCcontentPanel} />\r\n                    </Menu.Item>\r\n                    <Menu.Item borderless>\r\n                        <Accordion.Title\r\n                            active={activeROCAccodianMenuItem === 0}\r\n                            content={ROCAccordionTitle}\r\n                            index={0}\r\n                            borderless\r\n                            onClick={(e,index) => {\r\n                                setROCActiveAccordionMenuItem(index.index === activeROCAccodianMenuItem ? -1 : index.index)\r\n                                }}\r\n                        />\r\n                        <Accordion.Content borderless active={activeROCAccodianMenuItem === 0} content={ROCcontentPanel} />\r\n                    </Menu.Item>\r\n                </Accordion>\r\n                </div>\r\n            </Grid.Row>\r\n        </Collapsible>\r\n        </Grid>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n    displayRSI: state.momentumFromRootReducer.displayRSI,\r\n    nForRSI: state.momentumFromRootReducer.nForRSI,\r\n    displayTSI: state.momentumFromRootReducer.displayTSI\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    displayRSIdispatch: varDisplayRSI => dispatch(displayRSI(varDisplayRSI)),\r\n    displayTSIdispatch: varDisplayTSI => dispatch(displayTSI(varDisplayTSI))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MomentumMenuContainer)\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchStockData } from '../redux'\r\nimport '../App.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport * as d3 from \"d3\"\r\nimport { fetchMomentumData } from '../redux';\r\nimport {\r\n    select,\r\n    csv,\r\n    scaleLinear,\r\n    scaleBand,\r\n    scaleTime,\r\n    extent,\r\n    axisLeft,\r\n    axisBottom,\r\n    line,\r\n    curveBasis,\r\n    curveLinear\r\n  } from 'd3';\r\n\r\nfunction MomentumGraphContainer (props) {\r\n\r\n\r\n  const momentumIndicatorsChartNode = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.loads > 0) {\r\n      const RSIparameters = {'N':props.nForRSI}\r\n      const TSIparameters = {'displayTSI':props.displayTSI,'rTSI':props.rForTSI,'sTSI':props.sForTSI}\r\n      props.fetchMomentumData(JSON.stringify([props.stockData,RSIparameters,TSIparameters]))\r\n    }\r\n    \r\n  }, [props.stockData,props.displayRSI,props.nForRSI,props.displayTSI,props.sForTSI,props.rForTSI])\r\n\r\n  if (props.momentumLoads > 0) {\r\n    function createMomentumIndicatorsChart(momentumIndicatorsChartNode) {\r\n      const data = props.momentumData\r\n      \r\n      function findMinMax(data) {\r\n        var min = 0\r\n        var max = 0\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (props.displayRSI) {\r\n                if (data[i]['rsi'] < min) {\r\n                    min = data[i]['rsi']\r\n                }\r\n                if (data[i]['rsi'] > max) {\r\n                    max = data[i]['rsi']\r\n                }\r\n            }\r\n            if (props.displayTSI) {\r\n                if (data[i]['tsi'] < min) {\r\n                    min = data[i]['tsi']\r\n                }\r\n                if (data[i]['tsi'] > max) {\r\n                    max = data[i]['tsi']\r\n                }\r\n            }\r\n        //     if (displayUOcheckbox) {\r\n        //         if (data[i]['uo'] < min) {\r\n        //             min = data[i]['uo']\r\n        //         }\r\n        //         if (data[i]['uo'] > max) {\r\n        //             max = data[i]['uo']\r\n        //         }\r\n        //     }\r\n        //     if (displayStochCheckbox) {\r\n        //         if (data[i]['stoch'] < min) {\r\n        //             min = data[i]['stoch']\r\n        //         }\r\n        //         if (data[i]['stoch'] > max) {\r\n        //             max = data[i]['stoch']\r\n        //         }\r\n        //     }\r\n        //     if (displayStochSignalCheckbox) {\r\n        //         if (data[i]['stoch_signal'] < min) {\r\n        //             min = data[i]['stoch_signal']\r\n        //         }\r\n        //         if (data[i]['stoch_signal'] > max) {\r\n        //             max = data[i]['stoch_signal']\r\n        //         }\r\n        //     }\r\n        //     if (displayWR) {\r\n        //         if (data[i]['wr'] < min) {\r\n        //             min = data[i]['wr']\r\n        //         }\r\n        //         if (data[i]['wr'] > max) {\r\n        //             max = data[i]['wr']\r\n        //         }\r\n        //     }\r\n        //     if (displayAO) {\r\n        //         if (data[i]['ao'] < min) {\r\n        //             min = data[i]['ao']\r\n        //         }\r\n        //         if (data[i]['ao'] > max) {\r\n        //             max = data[i]['ao']\r\n        //         }\r\n        //     }\r\n        //     if (displayKama) {\r\n        //         if (data[i]['kama'] < min) {\r\n        //             min = data[i]['kama']\r\n        //         }\r\n        //         if (data[i]['kama'] > max) {\r\n        //             max = data[i]['kama']\r\n        //         }\r\n        //     }\r\n        //     if (displayROC) {\r\n        //         if (data[i]['roc'] < min) {\r\n        //             min = data[i]['roc']\r\n        //         }\r\n        //         if (data[i]['roc'] > max) {\r\n        //             max = data[i]['roc']\r\n        //         }\r\n        //     }\r\n        }\r\n        if (min == 0 && max == 0) {\r\n            max = 80\r\n        }\r\n        return [min,max]\r\n      }\r\n      \r\n      \r\n\r\n      const svg = select(momentumIndicatorsChartNode.current);\r\n      svg.selectAll(\"g\").remove()\r\n\r\n      const height = 150;\r\n      const width = 700;\r\n      //const margin = ({top: 20, right: 30, bottom: 30, left: 80})\r\n\r\n      const margin = ({top: 5, right: 30, bottom: 50, left: 40})\r\n      const parseDate = d3.utcParse(\"%Y-%m-%d\")\r\n      \r\n      const x = scaleBand()\r\n          .domain(d3.utcDay\r\n              .range(parseDate(data[0].date), +parseDate(data[data.length - 1].date) + 1)\r\n              .filter(d => d.getUTCDay() !== 0 && d.getUTCDay() !== 6))\r\n          .range([margin.left, width - margin.right])\r\n          .padding(0.2)\r\n\r\n      var y = scaleLinear()\r\n          //.domain([d3.min(data, d => d.rsi), d3.max(data, d => d.rsi)])\r\n          .domain(findMinMax(data))\r\n          .rangeRound([height - margin.bottom, margin.top])\r\n\r\n      const xAxis = g => g\r\n          .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n          .call(d3.axisBottom(x)\r\n              .tickValues(d3.utcMonday\r\n                  .every(data.length > 2 ? (data.length > 15 ? 4 : 2) : 1)\r\n                  .range(parseDate(data[0].date), parseDate(data[data.length - 1].date)))\r\n              .tickFormat(d3.utcFormat(\"%-m/%-d\")))\r\n          .call(g => g.select(\".domain\").remove())\r\n\r\n      var yAxis = g => g\r\n          .attr(\"transform\", `translate(${margin.left},0)`)\r\n          .call(d3.axisLeft(y)\r\n              .tickFormat(d3.format(\"~f\"))\r\n              .tickValues(d3.scaleLinear().domain(y.domain()).ticks()))\r\n          .call(g => g.selectAll(\".tick line\").clone()\r\n              .attr(\"stroke-opacity\", 0)\r\n              .attr(\"x2\", width - margin.left - margin.right))\r\n          .call(g => g.select(\".domain\").remove())\r\n\r\n      svg.attr(\"viewBox\", [0, 0, width, height])\r\n\r\n      svg.append(\"g\")\r\n          .call(xAxis);\r\n          \r\n      svg.append(\"g\")\r\n          .call(yAxis);\r\n\r\n      const gRSI = svg.append(\"g\")\r\n          .attr(\"stroke-linecap\", \"round\")\r\n          .attr(\"stroke\", \"red\")\r\n          .selectAll(\"g\")\r\n          .data(data)\r\n          .join(\"g\")\r\n          // .attr(\"transform\", data => `translate(${(x(parseDate(data.date))+x.bandwidth()/2)},0)`);\r\n\r\n      const lineGeneratorRSI = line()\r\n          .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n          .y(d => y(d.rsi))\r\n          .curve(curveLinear);\r\n\r\n      if (props.displayRSI) {\r\n          gRSI.append('path')\r\n          .attr('class', 'line-path')\r\n          .attr(\"id\", \"rsi\")\r\n          .attr('d', lineGeneratorRSI(data))\r\n          .attr('fill','none')\r\n          .attr('stroke-width',3)\r\n          .attr('stroke-linecap','round')\r\n      }else{\r\n          svg.selectAll(\"g\").selectAll(\".rsi\").remove()\r\n      }\r\n      if (props.displayTSI) {\r\n          const gTSI = svg.append(\"g\")\r\n              .attr(\"stroke-linecap\", \"round\")\r\n              .attr(\"stroke\", \"blue\")\r\n              .selectAll(\"g\")\r\n              .data(data)\r\n              .join(\"g\")\r\n\r\n          const lineGeneratorTSI = line()\r\n              .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n              .y(d => y(d.tsi))\r\n              .curve(curveLinear);\r\n\r\n          gTSI.append('path')\r\n              .attr('class', 'line-path')\r\n              .attr(\"id\", \"tsi\")\r\n              .attr('d', lineGeneratorTSI(data))\r\n              .attr('fill','none')\r\n              .attr('stroke-width',3)\r\n              .attr('stroke-linecap','round')\r\n      }else{\r\n          svg.selectAll(\"g\").selectAll(\".tsi\").remove()\r\n      }\r\n\r\n      \r\n\r\n      // if (displayTSIcheckbox) {\r\n      //     gTSI.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"tsi\")\r\n      //     .attr('d', lineGeneratorTSI(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',3)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".tsi\").remove()\r\n      // }\r\n\r\n      // const gUO = svg.append(\"g\")\r\n      //     .attr(\"stroke-linecap\", \"round\")\r\n      //     .attr(\"stroke\", \"green\")\r\n      //     .selectAll(\"g\")\r\n      //     .data(data)\r\n      //     .join(\"g\")\r\n\r\n      // const lineGeneratorUO = line()\r\n      //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n      //     .y(d => y(d.UO))\r\n      //     .curve(curveLinear);\r\n\r\n      // if (displayUOcheckbox) {\r\n      //     gUO.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"uo\")\r\n      //     .attr('d', lineGeneratorUO(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',3)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".uo\").remove()\r\n      // }\r\n      \r\n      \r\n      // const gStoch = svg.append(\"g\")\r\n      //     .attr(\"stroke-linecap\", \"round\")\r\n      //     .attr(\"stroke\", \"purple\")\r\n      //     .selectAll(\"g\")\r\n      //     .data(data)\r\n      //     .join(\"g\")\r\n\r\n      // const lineGeneratorStoch = line()\r\n      //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n      //     .y(d => y(d.stoch))\r\n      //     .curve(curveLinear);\r\n\r\n      // if (displayStochCheckbox) {\r\n      //     gStoch.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"stoch\")\r\n      //     .attr('d', lineGeneratorStoch(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',3)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".stoch\").remove()\r\n      // }\r\n\r\n      \r\n      // const gStochSignal = svg.append(\"g\")\r\n      //     .attr(\"stroke-linecap\", \"round\")\r\n      //     .attr(\"stroke\", \"yellow\")\r\n      //     .selectAll(\"g\")\r\n      //     .data(data)\r\n      //     .join(\"g\")\r\n\r\n      // const lineGeneratorStochSignal = line()\r\n      //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n      //     .y(d => y(d.stoch_signal))\r\n      //     .curve(curveLinear);\r\n\r\n      // if (displayStochSignalCheckbox) {\r\n      //     gStochSignal.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"stochSignal\")\r\n      //     .attr('d', lineGeneratorStochSignal(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',3)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".stochSignal\").remove()\r\n      // }\r\n\r\n      // const gWR = svg.append(\"g\")\r\n      //     .attr(\"stroke-linecap\", \"round\")\r\n      //     .attr(\"stroke\", \"orange\")\r\n      //     .selectAll(\"g\")\r\n      //     .data(data)\r\n      //     .join(\"g\")\r\n\r\n      // const lineGeneratorWR = line()\r\n      //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n      //     .y(d => y(d.wr))\r\n      //     .curve(curveLinear);\r\n\r\n      // if (displayWR) {\r\n      //     gWR.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"wr\")\r\n      //     .attr('d', lineGeneratorWR(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',3)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".wr\").remove()\r\n      // }\r\n\r\n      // const gAO = svg.append(\"g\")\r\n      //     .attr(\"stroke-linecap\", \"round\")\r\n      //     .attr(\"stroke\", \"pink\")\r\n      //     .selectAll(\"g\")\r\n      //     .data(data)\r\n      //     .join(\"g\")\r\n\r\n      // const lineGeneratorAO = line()\r\n      //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n      //     .y(d => y(d.ao))\r\n      //     .curve(curveLinear);\r\n\r\n      // if (displayAO) {\r\n      //     gAO.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"ao\")\r\n      //     .attr('d', lineGeneratorAO(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',3)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".ao\").remove()\r\n      // }\r\n\r\n      // const gKama = svg.append(\"g\")\r\n      //     .attr(\"stroke-linecap\", \"round\")\r\n      //     .attr(\"stroke\", \"darkgreen\")\r\n      //     .selectAll(\"g\")\r\n      //     .data(data)\r\n      //     .join(\"g\")\r\n\r\n      // const lineGeneratorKama = line()\r\n      //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n      //     .y(d => y(d.kama))\r\n      //     .curve(curveLinear);\r\n\r\n      // if (displayKama) {\r\n      //     gKama.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"kama\")\r\n      //     .attr('d', lineGeneratorKama(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',3)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".kama\").remove()\r\n      // }\r\n\r\n      // const gROC = svg.append(\"g\")\r\n      //     .attr(\"stroke-linecap\", \"round\")\r\n      //     .attr(\"stroke\", \"lightblue\")\r\n      //     .selectAll(\"g\")\r\n      //     .data(data)\r\n      //     .join(\"g\")\r\n\r\n      // const lineGeneratorROC = line()\r\n      //     .x(d => (x(parseDate(d.date))+x.bandwidth()/2))\r\n      //     .y(d => y(d.roc))\r\n      //     .curve(curveLinear);\r\n\r\n      // if (displayROC) {\r\n      //     gROC.append('path')\r\n      //     .attr('class', 'line-path')\r\n      //     .attr(\"id\", \"roc\")\r\n      //     .attr('d', lineGeneratorROC(data))\r\n      //     .attr('fill','none')\r\n      //     .attr('stroke-width',3)\r\n      //     .attr('stroke-linecap','round')\r\n      // }else{\r\n      //     svg.selectAll(\"g\").selectAll(\".roc\").remove()\r\n      // }\r\n\r\n      return svg.node();\r\n\r\n    }\r\n    createMomentumIndicatorsChart(momentumIndicatorsChartNode)\r\n  }\r\n      \r\n  \r\n\r\n\r\n\r\n\r\n  return props.stockData.loading ? (\r\n\r\n\r\n    <h2>Loading</h2>\r\n  ) : props.stockData.error ? (\r\n    <h2>{props.stockData.error}</h2>\r\n  ) : (\r\n    <div>\r\n        <React.Fragment>\r\n            <svg ref={momentumIndicatorsChartNode}></svg>\r\n        </React.Fragment>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    stockData: state.stockDataFromRootReducer.stockData,\r\n    loads: state.stockDataFromRootReducer.loads,\r\n    momentumLoads: state.momentumFromRootReducer.momentumLoads,\r\n    momentumData: state.momentumFromRootReducer.momentumData,\r\n    fetchMomentumData: state.momentumFromRootReducer.fetchMomentumData,\r\n    displayRSI: state.momentumFromRootReducer.displayRSI,\r\n    nForRSI: state.momentumFromRootReducer.nForRSI,\r\n    displayTSI: state.momentumFromRootReducer.displayTSI,\r\n    rForTSI: state.momentumFromRootReducer.rForTSI,\r\n    sForTSI: state.momentumFromRootReducer.sForTSI,\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //requestAPIstockData: (APIstring) => dispatch(requestAPIstockData(APIstring)),\r\n    fetchMomentumData: (APIstring) => dispatch(fetchMomentumData(APIstring))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MomentumGraphContainer)\r\n\r\n\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport './App.css'\r\nimport store from './redux/store'\r\nimport SelectTickerContainer from './components/SelectTickerContainer'\r\nimport SelectDatesFromMenuContainer from './components/SelectDatesFromMenuContainer'\r\nimport SelectCustomDatesContainer from './components/SelectCustomDatesContainer'\r\nimport SelectLineOrCandleContainer from './components/SelectLineOrCandleContainer'\r\nimport LineCandleGraphContainer from './components/LineCandleGraphContainer'\r\nimport VolumeGraphContainer from './components/VolumeGraphContainer'\r\nimport { Grid} from \"semantic-ui-react\"\r\nimport MomentumMenuContainer from './components/MomentumMenuContainer'\r\nimport MomentumGraphContainer from './components/MomentumGraphContainer'\r\n\r\n\r\nfunction App () {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className='App'>\r\n        <Grid celled>\r\n          <Grid.Column width = {4}>\r\n            <Grid.Row stretched>\r\n              <SelectTickerContainer /><br/>\r\n              <SelectDatesFromMenuContainer /><br/>\r\n              <SelectCustomDatesContainer /><br/>\r\n              <SelectLineOrCandleContainer /><br/>\r\n              <MomentumMenuContainer />\r\n            </Grid.Row>\r\n          </Grid.Column>\r\n          <Grid.Column width = {12}>\r\n            <LineCandleGraphContainer /><br/>\r\n            <VolumeGraphContainer/><br/>\r\n            <MomentumGraphContainer/>\r\n          </Grid.Column>\r\n        </Grid>\r\n        \r\n        \r\n        {/* <ItemContainer cake />\r\n        <ItemContainer />\r\n        <NewCakeContainer />\r\n        <UsersContainer />\r\n        <HooksCakeContainer />\r\n        <IceCreamContainer /> */}\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n// import React, { useEffect, useState } from 'react';\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n// import { Container } from \"semantic-ui-react\"\r\n// import { StockData } from './components/StockData';\r\n// import { exampleRedux } from './components/exampleRedux'\r\n// import { Provider } from 'react-redux'\r\n// import store from './components/redux/store'\r\n// function App() {\r\n\r\n//   return (\r\n//     <Provider store={store}>\r\n//       <div className=\"App\">\r\n//       {/* <Container style={{marginTop: 40}}>\r\n//         <StockData />\r\n//       </Container> \r\n//       <StockData />*/}\r\n//         <exampleRedux />\r\n//       </div>\r\n//     </Provider>\r\n    \r\n//   );\r\n// }\r\n\r\n// export default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}